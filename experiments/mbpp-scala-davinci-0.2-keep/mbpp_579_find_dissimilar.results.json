{
  "name": "mbpp_579_find_dissimilar",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_579_find_dissimilar.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.asDigit)\n        val tup2 = test_tup2.toString.toList.map(x => x.asDigit)\n        var count = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ing5jai.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ing5jai.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ing5jai.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7ing5jai.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 || tup2 > 0) {\n            if((tup1 % 10) != (tup2 % 10)) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw2v_cea.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw2v_cea.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw2v_cea.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyw2v_cea.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfp4_6jsi.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfp4_6jsi.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfp4_6jsi.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfp4_6jsi.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphim6igpg.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7stbx_g7.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7stbx_g7.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7stbx_g7.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7stbx_g7.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh8gi83j.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh8gi83j.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh8gi83j.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh8gi83j.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val tup1_dissimilar_num = tup1_dissimilar.map(x => tup1.count(_ == x)).sum\n        val tup2_dissimilar_num = tup2_dissimilar.map(x => tup2.count(_ == x)).sum\n        tup1_dissimilar_num + tup2_dissimilar_num\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd95ypwft.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd95ypwft.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd95ypwft.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd95ypwft.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517328,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvpl_a4o.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvpl_a4o.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvpl_a4o.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvpl_a4o.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn7q40zr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn7q40zr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn7q40zr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn7q40zr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpys1vyitz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpys1vyitz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpys1vyitz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpys1vyitz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp899hmhl5.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp899hmhl5.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp899hmhl5.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp899hmhl5.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        val tup3 = tup1.diff(tup2)\n        val tup4 = tup2.diff(tup1)\n        val tup5 = tup3.union(tup4)\n        val tup6 = tup5.map(_.toString).mkString(\"\")\n        tup6.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyz1qn74p.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyz1qn74p.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyz1qn74p.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyz1qn74p.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        if (tup1 > 0) count += tup1.toString.length\n        if (tup2 > 0) count += tup2.toString.length\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyia3k6b8.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyia3k6b8.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyia3k6b8.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyia3k6b8.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_str = test_tup1.toString\n        var test_tup2_str = test_tup2.toString\n        var test_tup1_arr = test_tup1_str.toCharArray\n        var test_tup2_arr = test_tup2_str.toCharArray\n        var test_tup1_arr_set = test_tup1_arr.toSet\n        var test_tup2_arr_set = test_tup2_arr.toSet\n        var test_tup1_arr_set_diff = test_tup1_arr_set.diff(test_tup2_arr_set)\n        var test_tup2_arr_set_diff = test_tup2_arr_set.diff(test_tup1_arr_set)\n        var test_tup1_arr_set_diff_str = test_tup1_arr_set_diff.mkString\n        var test_tup2_arr_set_diff_str = test_tup2_arr_set_diff.mkString\n        var test_tup1_arr_set_diff_str_arr = test_tup1_arr_set_diff_str.toCharArray\n        var test_tup2_arr_set_diff_str_arr = test_tup2_arr_set_diff_str.toCharArray\n        var test_tup1_arr_set_diff_str_arr_set = test_tup1_arr_set_diff_str_arr.toSet\n        var test_tup2_arr_set_diff_str_arr_set = test_tup2_arr_set_diff_str_arr.toSet\n        var test_tup1_arr_set_diff_str_arr_set_diff = test_tup1_arr_set_diff_str_arr_set.diff(test_tup2_arr_set_diff_str_arr_set)\n        var test_tup2_arr_set_diff_str_arr_set_diff = test_tup2_arr_set_diff_str_\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpysg11nql.scala:21:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtest_tup2_arr_set_diff_str_arr_set_diff\u001b[0m = test_tup2_arr_set_diff_str_\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Not found: test_tup2_arr_set_diff_str_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpysg11nql.scala:22:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpysg11nql.scala:24:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpysg11nql.scala:24:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0mz1q1q.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122820,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh4hok0s.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh4hok0s.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh4hok0s.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh4hok0s.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp660iha2a.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp660iha2a.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp660iha2a.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp660iha2a.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 && tup2 != 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        if (tup1 != 0) {\n            while (tup1 != 0) {\n                count += 1\n                tup1 /= 10\n            }\n        }\n        if (tup2 != 0) {\n            while (tup2 != 0) {\n                count += 1\n                tup2 /= 10\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmp_mojpz.scala:31:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmp_mojpz.scala:31:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmp_mojpz.scala:32:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmp_mojpz.scala:32:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_str = test_tup1.toString\n        var test_tup2_str = test_tup2.toString\n        var test_tup1_str_arr = test_tup1_str.toCharArray\n        var test_tup2_str_arr = test_tup2_str.toCharArray\n        var test_tup1_str_arr_set = test_tup1_str_arr.toSet\n        var test_tup2_str_arr_set = test_tup2_str_arr.toSet\n        var test_tup1_str_arr_set_diff = test_tup1_str_arr_set.diff(test_tup2_str_arr_set)\n        var test_tup2_str_arr_set_diff = test_tup2_str_arr_set.diff(test_tup1_str_arr_set)\n        var test_tup1_str_arr_set_diff_str = test_tup1_str_arr_set_diff.mkString\n        var test_tup2_str_arr_set_diff_str = test_tup2_str_arr_set_diff.mkString\n        var test_tup1_str_arr_set_diff_str_arr = test_tup1_str_arr_set_diff_str.toCharArray\n        var test_tup2_str_arr_set_diff_str_arr = test_tup2_str_arr_set_diff_str.toCharArray\n        var test_tup1_str_arr_set_diff_str_arr_set = test_tup1_str_arr_set_diff_str_arr.toSet\n        var test_tup2_str_arr_set_diff_str_arr_set = test_tup2_str_arr_set_diff_str_arr.toSet\n        var test_tup1_str_arr_set_diff_str_arr_set_diff = test_tup1_str_arr_set_diff_str_arr_set.diff(test_t\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxuzhkf6d.scala:21:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxuzhkf6d.scala:20:102 -----------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtest_tup1_str_arr_set_diff_str_arr_set_diff\u001b[0m = test_tup1_str_arr_set_diff_str_arr_set.diff(test_t\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                       Not found: test_t\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxuzhkf6d.scala:21:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxuzhkf6d.scala:23:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxuzhkf6d.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toLong)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toLong)\n        val tup3 = tup1.toSet.intersect(tup2.toSet)\n        val tup4 = tup1.toSet.diff(tup3)\n        val tup5 = tup2.toSet.diff(tup3)\n        val tup6 = tup4.union(tup5)\n        val tup7 = tup6.toList.map(_.toString).mkString.toLong\n        return tup7\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2o3hqa4.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2o3hqa4.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2o3hqa4.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2o3hqa4.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var count = 0\n        for (i <- 0 to tup1.length - 1) {\n            if (tup1(i) != tup2(i)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ri5rqw5.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ri5rqw5.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ri5rqw5.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ri5rqw5.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(x => x.toString.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, tup1.length - 1 - i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwie75j51.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwie75j51.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwie75j51.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwie75j51.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixwlh3fg.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixwlh3fg.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixwlh3fg.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpixwlh3fg.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : List[Int] = List()\n        var tup2 : List[Int] = List()\n        var tup1_num : Long = test_tup1\n        var tup2_num : Long = test_tup2\n        var tup1_len : Int = 0\n        var tup2_len : Int = 0\n        var tup1_sum : Int = 0\n        var tup2_sum : Int = 0\n        var tup1_prod : Int = 1\n        var tup2_prod : Int = 1\n        var tup1_min : Int = Int.MaxValue\n        var tup2_min : Int = Int.MaxValue\n        var tup1_max : Int = Int.MinValue\n        var tup2_max : Int = Int.MinValue\n        while (tup1_num > 0) {\n            tup1 = (tup1_num % 10).toInt :: tup1\n            tup1_num /= 10\n            tup1_len += 1\n        }\n        while (tup2_num > 0) {\n            tup2 = (tup2_num % 10).toInt :: tup2\n            tup2_num /= 10\n            tup2_len += 1\n        }\n        for (i <- 0 until tup1_len) {\n            tup1_sum += tup1(i)\n            tup1_prod *= tup1(i)\n            if (tup1(i) < tup1_min) tup1_min = tup1(i)\n            if (tup1(i) > tup1_max) tup1_max = tup1(i)\n        }\n        for (i <- 0 until tup2_len) {\n            tup2_sum += tup2(i)\n            tup2_prod *= tup2(i)\n            if (tup2(i) < tup2_min) tup2_min = tup2(i)\n            if (tup2(i) > tup2_max) tup2_max = tup2\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0g9z0b4h.scala:49:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g9z0b4h.scala:40:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mif\u001b[0m (tup2(i) > tup2_max) tup2_max = tup2\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (tup2 : List[Int])\n\u001b[31m   |\u001b[0m                                            Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g9z0b4h.scala:43:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g9z0b4h.scala:43:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0g9z0b4h.scala:44:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dohxbm.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dohxbm.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dohxbm.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dohxbm.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        val tup1_diff_list_str = tup1_diff_list.map(_.toString).mkString(\"\")\n        val tup2_diff_list_str = tup2_diff_list.map(_.toString).mkString(\"\")\n        val tup1_diff_list_str_int = tup1_diff_list_str.toInt\n        val tup2_diff_list_str_int = tup2_diff_list_str.toInt\n        val tup1_diff_list_str_int_str = tup1_diff_list_str_int.toString\n        val tup2_diff_list_str_int_str = tup2_diff_list_str_int.toString\n        val tup1_diff_list_str_int_str_len = tup1_diff_list_str_int_str.length\n        val tup2_diff_list_str_int_str_len = tup2_diff_list_str_int_str.length\n        val tup1_diff_list_str_int_str_len_str = tup1_diff_list_str_int_str_len.toString\n        val tup2_diff_list_str_int_str_len_str = tup2_diff_list_str_int_str_len.toString\n        val tup1_diff_list_str_int_str_len_str\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmput783lry.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmput783lry.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmput783lry.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmput783lry.scala:27:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmput783lry.scala:28:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var count = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphx9xxliy.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphx9xxliy.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphx9xxliy.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphx9xxliy.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        if (tup1 > 0) {\n            while (tup1 > 0) {\n                count += 1\n                tup1 /= 10\n            }\n        }\n        if (tup2 > 0) {\n            while (tup2 > 0) {\n                count += 1\n                tup2 /= 10\n            }\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqxcl47jw.scala:31:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqxcl47jw.scala:31:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqxcl47jw.scala:32:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqxcl47jw.scala:32:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit).sorted\n        val tup2 = test_tup2.toString.toList.map(_.asDigit).sorted\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList.sorted\n        val tup2_diff_list = tup2_diff.toList.sorted\n        val tup1_diff_list_str = tup1_diff_list.map(_.toString).mkString\n        val tup2_diff_list_str = tup2_diff_list.map(_.toString).mkString\n        val tup1_diff_list_str_num = tup1_diff_list_str.toLong\n        val tup2_diff_list_str_num = tup2_diff_list_str.toLong\n        if (tup1_diff_list_str_num > tup2_diff_list_str_num) tup1_diff_list_str_num else tup2_diff_list_str_num\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjj2vpnii.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjj2vpnii.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjj2vpnii.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjj2vpnii.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toInt)\n        var count = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmwbbuy1g.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmwbbuy1g.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmwbbuy1g.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmwbbuy1g.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : List[Int] = List()\n        var tup2 : List[Int] = List()\n        var tup1_temp : Long = test_tup1\n        var tup2_temp : Long = test_tup2\n        while (tup1_temp > 0) {\n            tup1 = (tup1_temp % 10).toInt :: tup1\n            tup1_temp /= 10\n        }\n        while (tup2_temp > 0) {\n            tup2 = (tup2_temp % 10).toInt :: tup2\n            tup2_temp /= 10\n        }\n        var result : Long = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm9vk93q.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm9vk93q.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm9vk93q.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm9vk93q.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(x => x.toString.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppks2ubvx.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppks2ubvx.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppks2ubvx.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppks2ubvx.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(x => x.toInt)\n        val tup2 = test_tup2.toString.split(\"\").map(x => x.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList.sorted\n        val tup2_diff_list = tup2_diff.toList.sorted\n        val tup1_diff_str = tup1_diff_list.mkString(\"\")\n        val tup2_diff_str = tup2_diff_list.mkString(\"\")\n        val tup1_diff_num = tup1_diff_str.toLong\n        val tup2_diff_num = tup2_diff_str.toLong\n        val result = tup1_diff_num - tup2_diff_num\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_f9x7wpc.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_f9x7wpc.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_f9x7wpc.scala:23:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_f9x7wpc.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (i < 32) {\n            var bit1 = tup1 & 1\n            var bit2 = tup2 & 1\n            if (bit1 != bit2) {\n                result += 1\n            }\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkxq3w7xf.scala:23:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkxq3w7xf.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkxq3w7xf.scala:24:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkxq3w7xf.scala:24:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9j26zsc.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp660iha2a.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp660iha2a.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp660iha2a.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp660iha2a.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0i4va6qz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        val tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeosl8j2d.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeosl8j2d.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeosl8j2d.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeosl8j2d.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp90x70t0g.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_drpso2.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var dissimilar = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) dissimilar += 1\n        }\n        dissimilar\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122881,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc9801_br.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc9801_br.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc9801_br.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc9801_br.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122882,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpznyl7m7m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpznyl7m7m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpznyl7m7m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpznyl7m7m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val tup1_dissimilar_sum = tup1_dissimilar.map(_.toLong).sum\n        val tup2_dissimilar_sum = tup2_dissimilar.map(_.toLong).sum\n        tup1_dissimilar_sum + tup2_dissimilar_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85z7xx1z.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85z7xx1z.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85z7xx1z.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85z7xx1z.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps2jm99w4.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps2jm99w4.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps2jm99w4.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps2jm99w4.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nwua3av.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nwua3av.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nwua3av.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1nwua3av.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_arr = test_tup1.toString.toCharArray\n        var test_tup2_arr = test_tup2.toString.toCharArray\n        var test_tup1_arr_len = test_tup1_arr.length\n        var test_tup2_arr_len = test_tup2_arr.length\n        var test_tup1_arr_len_min = min(test_tup1_arr_len, test_tup2_arr_len)\n        var test_tup1_arr_len_max = max(test_tup1_arr_len, test_tup2_arr_len)\n        var test_tup1_arr_len_diff = abs(test_tup1_arr_len - test_tup2_arr_len)\n        var test_tup1_arr_len_diff_count = 0\n        var test_tup1_arr_len_diff_count_arr = new Array[Int](test_tup1_arr_len_diff)\n        var test_tup1_arr_len_diff_count_arr_index = 0\n        var test_tup1_arr_len_diff_count_arr_index_max = 0\n        var test_tup1_arr_len_diff_count_arr_index_max_value = 0\n        var test_tup1_arr_len_diff_count_arr_index_max_value_index = 0\n        var test_tup1_arr_len_diff_count_arr_index_max_value_index_arr = new Array[Int](test_tup1_arr_len_diff)\n        var test_tup1_arr_len_diff_count_arr_index_max_value_index_arr_index = 0\n        var test_tup1_arr_len_diff_count_arr_index_max_value_index_arr_index_max = 0\n        var test_tup1_arr_len_diff_count_arr_index_max_value_index_arr_index_max_value = 0\n        var test_tup1_\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp04nspi82.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04nspi82.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04nspi82.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04nspi82.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp04nspi82.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while(i < 32) {\n            var bit1 = (tup1 & 1)\n            var bit2 = (tup2 & 1)\n            if(bit1 != bit2) result += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo6cae1ji.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo6cae1ji.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo6cae1ji.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo6cae1ji.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var i : Int = 0\n        while (i < 64) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                result += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyon3yt98.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyon3yt98.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyon3yt98.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyon3yt98.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        if(tup1 > 0) count += tup1.toString.length\n        if(tup2 > 0) count += tup2.toString.length\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpri2tzaih.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpri2tzaih.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpri2tzaih.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpri2tzaih.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.map(x => pow(10, tup1.indexOf(x)).toLong).sum\n        val tup2_diff_sum = tup2_diff.map(x => pow(10, tup2.indexOf(x)).toLong).sum\n        tup1_diff_sum + tup2_diff_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpive0s0vr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpive0s0vr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpive0s0vr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpive0s0vr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        if(tup1 > 0) count += tup1.toString.length\n        if(tup2 > 0) count += tup2.toString.length\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzabwr91.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzabwr91.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzabwr91.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplzabwr91.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        val tup1_diff_list_int = tup1_diff_list.map(x => x.toString.toInt)\n        val tup2_diff_list_int = tup2_diff_list.map(x => x.toString.toInt)\n        val tup1_diff_list_int_sum = tup1_diff_list_int.sum\n        val tup2_diff_list_int_sum = tup2_diff_list_int.sum\n        val tup1_diff_list_int_sum_str = tup1_diff_list_int_sum.toString\n        val tup2_diff_list_int_sum_str = tup2_diff_list_int_sum.toString\n        val tup1_diff_list_int_sum_str_list = tup1_diff_list_int_sum_str.toList\n        val tup2_diff_list_int_sum_str_list = tup2_diff_list_int_sum_str.toList\n        val tup1_diff_list_int_sum_str_list_set = tup1_diff_list_int_sum_str_list.toSet\n        val tup2_diff_list_int_sum_str_list_set = tup2_diff_list_int_sum_str_list.toSet\n        val tup1_diff_list_int_sum_str_list_set_diff = tup1_diff_list_int_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wv3wynz.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wv3wynz.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wv3wynz.scala:27:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wv3wynz.scala:28:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longe",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        var result = 0L\n        for (i <- 0 until tup1_diff_list.length) result += tup1_diff_list(i).toString.toLong * pow(10, i).toLong\n        for (i <- 0 until tup2_diff_list.length) result += tup2_diff_list(i).toString.toLong * pow(10, i + tup1_diff_list.length).toLong\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmcve8f3x.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmcve8f3x.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmcve8f3x.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmcve8f3x.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(x => x.toString.toInt)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.map(x => pow(10, tup1.indexOf(x)).toLong).sum\n        val tup2_diff_sum = tup2_diff.map(x => pow(10, tup2.indexOf(x)).toLong).sum\n        tup1_diff_sum + tup2_diff_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpafzvszju.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpafzvszju.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpafzvszju.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpafzvszju.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517328,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvpl_a4o.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvpl_a4o.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvpl_a4o.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvpl_a4o.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3dyte82.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val tup1_diff_prod = tup1_diff.product\n        val tup2_diff_prod = tup2_diff.product\n        val tup1_diff_sum_prod = tup1_diff_sum * tup1_diff_prod\n        val tup2_diff_sum_prod = tup2_diff_sum * tup2_diff_prod\n        val tup1_diff_sum_prod_str = tup1_diff_sum_prod.toString\n        val tup2_diff_sum_prod_str = tup2_diff_sum_prod.toString\n        val tup1_diff_sum_prod_str_len = tup1_diff_sum_prod_str.length\n        val tup2_diff_sum_prod_str_len = tup2_diff_sum_prod_str.length\n        val tup1_diff_sum_prod_str_len_diff = abs(tup1_diff_sum_prod_str_len - tup2_diff_sum_prod_str_len)\n        val tup1_diff_sum_prod_str_len_diff_str = tup1_diff_sum_prod_str_len_diff.toString\n        val tup1_diff_sum_prod_str_len_diff_str_len = tup1_diff_sum_prod_\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122806,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9lfz58a.scala:24:54 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup1_diff_sum_prod_str_len_diff_str_len\u001b[0m = tup1_diff_sum_prod_\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: tup1_diff_sum_prod_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58a.scala:27:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj9lfz58",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122848,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxpzsp5g1.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit).sorted\n        val tup2 = test_tup2.toString.toList.map(_.asDigit).sorted\n        var result = 0L\n        var i = 0\n        while (i < tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp43y1inkx.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp43y1inkx.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp43y1inkx.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp43y1inkx.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_str = test_tup1.toString\n        var test_tup2_str = test_tup2.toString\n        var test_tup1_arr = test_tup1_str.toCharArray\n        var test_tup2_arr = test_tup2_str.toCharArray\n        var test_tup1_arr_len = test_tup1_arr.length\n        var test_tup2_arr_len = test_tup2_arr.length\n        var test_tup1_arr_len_max = max(test_tup1_arr_len, test_tup2_arr_len)\n        var test_tup2_arr_len_max = max(test_tup1_arr_len, test_tup2_arr_len)\n        var test_tup1_arr_len_min = min(test_tup1_arr_len, test_tup2_arr_len)\n        var test_tup2_arr_len_min = min(test_tup1_arr_len, test_tup2_arr_len)\n        var test_tup1_arr_len_diff = abs(test_tup1_arr_len - test_tup2_arr_len)\n        var test_tup2_arr_len_diff = abs(test_tup1_arr_len - test_tup2_arr_len)\n        var test_tup1_arr_len_diff_str = test_tup1_arr_len_diff.toString\n        var test_tup2_arr_len_diff_str = test_tup2_arr_len_diff.toString\n        var test_tup1_arr_len_diff_str_arr = test_tup1_arr_len_diff_str.toCharArray\n        var test_tup2_arr_len_diff_str_arr = test_tup2_arr_len_diff_str.toCharArray\n        var test_tup1_arr_len_diff_str_arr_len = test_tup1_arr_len\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh0rfjl3.scala:23:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh0rfjl3.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh0rfjl3.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh0rfjl3.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longe",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslak6ui2.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslak6ui2.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslak6ui2.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpslak6ui2.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toLong).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toLong).toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1e_93_n.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1e_93_n.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1e_93_n.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1e_93_n.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_dissimilar = tup1_set.diff(tup2_set)\n        val tup2_dissimilar = tup2_set.diff(tup1_set)\n        val tup1_dissimilar_str = tup1_dissimilar.mkString(\"\")\n        val tup2_dissimilar_str = tup2_dissimilar.mkString(\"\")\n        val tup1_dissimilar_num = tup1_dissimilar_str.toLong\n        val tup2_dissimilar_num = tup2_dissimilar_str.toLong\n        val result = tup1_dissimilar_num + tup2_dissimilar_num\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8s8rjxh.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8s8rjxh.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8s8rjxh.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt8s8rjxh.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl784nw2p.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl784nw2p.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl784nw2p.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl784nw2p.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(x => x.toString.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpal7n_is_.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpal7n_is_.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpal7n_is_.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpal7n_is_.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        while(tup1 > 0) {\n            count += 1\n            tup1 /= 10\n        }\n        while(tup2 > 0) {\n            count += 1\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqt9khgwn.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqt9khgwn.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqt9khgwn.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqt9khgwn.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylrpvo5h.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylrpvo5h.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylrpvo5h.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpylrpvo5h.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps36tm1mj.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps36tm1mj.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps36tm1mj.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps36tm1mj.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_str = tup1_diff.mkString\n        val tup2_diff_str = tup2_diff.mkString\n        val tup1_diff_num = tup1_diff_str.toLong\n        val tup2_diff_num = tup2_diff_str.toLong\n        val result = tup1_diff_num + tup2_diff_num\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122838,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebg3g0nz.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebg3g0nz.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebg3g0nz.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpebg3g0nz.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdw65kw4m.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        var count = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) count += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37jskhx.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37jskhx.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37jskhx.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo37jskhx.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (i < 32) {\n            var bit1 = tup1 & 1\n            var bit2 = tup2 & 1\n            if (bit1 != bit2) result += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122896,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7pirps20.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7pirps20.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7pirps20.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7pirps20.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_jrcqoy.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_jrcqoy.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_jrcqoy.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_jrcqoy.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lpi9pga.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) result += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        while (tup1 > 0) {\n            result += 1\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            result += 1\n            tup2 /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpql738rj7.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpql738rj7.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpql738rj7.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpql738rj7.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.map(_.asDigit).toSet\n        val tup2 = test_tup2.toString.map(_.asDigit).toSet\n        val result = tup1.diff(tup2).union(tup2.diff(tup1))\n        result.foldLeft(0L)((a, b) => a * 10 + b)\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122899,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt_yz99xs.scala:12:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt_yz99xs.scala:12:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt_yz99xs.scala:13:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt_yz99xs.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        val tup1_diff_list_int = tup1_diff_list.map(x => x.toString.toInt)\n        val tup2_diff_list_int = tup2_diff_list.map(x => x.toString.toInt)\n        val tup1_diff_list_int_sum = tup1_diff_list_int.sum\n        val tup2_diff_list_int_sum = tup2_diff_list_int.sum\n        val tup1_diff_list_int_sum_str = tup1_diff_list_int_sum.toString\n        val tup2_diff_list_int_sum_str = tup2_diff_list_int_sum.toString\n        val tup1_diff_list_int_sum_str_list = tup1_diff_list_int_sum_str.toList\n        val tup2_diff_list_int_sum_str_list = tup2_diff_list_int_sum_str.toList\n        val tup1_diff_list_int_sum_str_list_set = tup1_diff_list_int_sum_str_list.toSet\n        val tup2_diff_list_int_sum_str_list_set = tup2_diff_list_int_sum_str_list.toSet\n        val tup1_diff_list_int_sum_str_list_set_diff = tup1_diff_list_int_sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122883,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wv3wynz.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wv3wynz.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wv3wynz.scala:27:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8wv3wynz.scala:28:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longe",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1.toString.toList\n        var tup2 = test_tup2.toString.toList\n        var count = 0\n        for (i <- 0 to tup1.length - 1) {\n            if (tup1(i) != tup2(i)) count += 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ri5rqw5.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ri5rqw5.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ri5rqw5.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ri5rqw5.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0t9rpcn.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122884,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps36tm1mj.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps36tm1mj.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps36tm1mj.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps36tm1mj.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(x => x.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(x => x.toInt).toList\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122899,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pvczazz.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pvczazz.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pvczazz.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6pvczazz.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjdq5p0to.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val diff = tup1_diff.union(tup2_diff)\n        val diff_str = diff.mkString\n        diff_str.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpisrdfb5k.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpisrdfb5k.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpisrdfb5k.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpisrdfb5k.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        for (i <- 0 to 63) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo30z7s.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.toString.toInt)\n        val tup2 = test_tup2.toString.toList.map(x => x.toString.toInt)\n        var result = 0\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69o6gb5z.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69o6gb5z.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69o6gb5z.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp69o6gb5z.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh8gi83j.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh8gi83j.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh8gi83j.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbh8gi83j.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpift_pwsf.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpift_pwsf.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpift_pwsf.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpift_pwsf.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) result += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dohxbm.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dohxbm.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dohxbm.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_dohxbm.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5yfmca2r.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5yfmca2r.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5yfmca2r.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5yfmca2r.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val result = tup1.diff(tup2)\n        result.map(_.toString.toLong).sum\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmgld8yp.scala:12:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmgld8yp.scala:12:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmgld8yp.scala:13:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppmgld8yp.scala:13:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122820,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihxk00os.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122821,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphb2h6vvf.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(x => x.toInt)\n        val tup2 = test_tup2.toString.split(\"\").map(x => x.toInt)\n        var result = 0L\n        for (i <- 0 until tup1.length) {\n            if (tup1(i) != tup2(i)) result += pow(10, i).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp_58_xe2.scala:15:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp_58_xe2.scala:15:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp_58_xe2.scala:16:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp_58_xe2.scala:16:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpczr1enkr.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(x => x.toString.toLong)\n        val tup2 = test_tup2.toString.toList.map(x => x.toString.toLong)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val diff_set = tup1_diff.union(tup2_diff)\n        val diff_list = diff_set.toList\n        val diff_list_str = diff_list.map(x => x.toString)\n        val diff_list_str_joined = diff_list_str.mkString\n        val diff_list_str_joined_long = diff_list_str_joined.toLong\n        return diff_list_str_joined_long\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf63mkmha.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf63mkmha.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf63mkmha.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf63mkmha.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122899,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s5rckj3.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s5rckj3.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s5rckj3.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7s5rckj3.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxg3uka6i.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxg3uka6i.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxg3uka6i.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxg3uka6i.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122836,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ynhaz8t.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if (tup1 % 10 != tup2 % 10) {\n                result += pow(10, i).toLong\n            }\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphbddo4le.scala:21:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphbddo4le.scala:21:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphbddo4le.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphbddo4le.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod8rtryq.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbnff7x9y.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplhe_ap8x.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList\n        val tup2 = test_tup2.toString.toList\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_list = tup1_diff.toList\n        val tup2_diff_list = tup2_diff.toList\n        var tup1_diff_num = 0\n        var tup2_diff_num = 0\n        for (i <- 0 until tup1_diff_list.length) {\n            tup1_diff_num += tup1_diff_list(i).toString.toInt * pow(10, tup1_diff_list.length - i - 1).toInt\n        }\n        for (i <- 0 until tup2_diff_list.length) {\n            tup2_diff_num += tup2_diff_list(i).toString.toInt * pow(10, tup2_diff_list.length - i - 1).toInt\n        }\n        tup1_diff_num + tup2_diff_num\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwn97il7.scala:25:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwn97il7.scala:25:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwn97il7.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwn97il7.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp261b2ygc.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.asDigit)\n        val tup2 = test_tup2.toString.toList.map(_.asDigit)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val tup1_diff_prod = tup1_diff.product\n        val tup2_diff_prod = tup2_diff.product\n        val tup1_diff_sum_prod = tup1_diff_sum * tup1_diff_prod\n        val tup2_diff_sum_prod = tup2_diff_sum * tup2_diff_prod\n        val tup1_diff_sum_prod_sum = tup1_diff_sum_prod.toString.toList.map(_.asDigit).sum\n        val tup2_diff_sum_prod_sum = tup2_diff_sum_prod.toString.toList.map(_.asDigit).sum\n        val tup1_diff_sum_prod_sum_prod = tup1_diff_sum_prod_sum * tup1_diff_prod\n        val tup2_diff_sum_prod_sum_prod = tup2_diff_sum_prod_sum * tup2_diff_prod\n        val tup1_diff_sum_prod_sum_prod_sum = tup1_diff_sum_prod_sum_prod.toString.toList.map(_.asDigit).sum\n        val tup2_diff_sum_prod_sum_prod_sum = tup2_diff_sum_prod_sum_prod.\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122899,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5tqztdoy.scala:24:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5tqztdoy.scala:24:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5tqztdoy.scala:26:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5tqztdoy.scala:26:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5tqztdoy.scala:27:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m       ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 > 0 && tup2 > 0) {\n            if(tup1 % 10 != tup2 % 10) count += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122805,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk53s407.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toLong)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toLong)\n        val tup1_set = tup1.toSet\n        val tup2_set = tup2.toSet\n        val tup1_diff = tup1_set.diff(tup2_set)\n        val tup2_diff = tup2_set.diff(tup1_set)\n        val tup1_diff_sum = tup1_diff.sum\n        val tup2_diff_sum = tup2_diff.sum\n        val tup1_diff_prod = tup1_diff.product\n        val tup2_diff_prod = tup2_diff.product\n        val tup1_diff_sum_prod = tup1_diff_sum * tup1_diff_prod\n        val tup2_diff_sum_prod = tup2_diff_sum * tup2_diff_prod\n        val tup_diff_sum_prod = tup1_diff_sum_prod + tup2_diff_sum_prod\n        tup_diff_sum_prod\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122899,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpargq88b0.scala:22:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpargq88b0.scala:22:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpargq88b0.scala:23:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpargq88b0.scala:23:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while(tup1 != 0 || tup2 != 0) {\n            if((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 = tup1 >> 1\n            tup2 = tup2 >> 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122867,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdf6n0c5u.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0) {\n            if ((tup1 % 10) != (tup2 % 10)) {\n                count += 1\n            }\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122822,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxwogsi9.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxwogsi9.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxwogsi9.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvxwogsi9.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var tup1_list = new ListBuffer[Long]()\n        var tup2_list = new ListBuffer[Long]()\n        while (tup1 != 0) {\n            tup1_list += tup1 % 10\n            tup1 /= 10\n        }\n        while (tup2 != 0) {\n            tup2_list += tup2 % 10\n            tup2 /= 10\n        }\n        var result = 0L\n        for (i <- 0 until tup1_list.length) {\n            if (!tup2_list.contains(tup1_list(i))) {\n                result = result * 10 + tup1_list(i)\n            }\n        }\n        for (i <- 0 until tup2_list.length) {\n            if (!tup1_list.contains(tup2_list(i))) {\n                result = result * 10 + tup2_list(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1666122899,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7scswiqe.scala:32:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7scswiqe.scala:32:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7scswiqe.scala:33:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7scswiqe.scala:33:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 != 0 || tup2 != 0) {\n            if ((tup1 & 1) != (tup2 & 1)) {\n                count += 1\n            }\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517312,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:19:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphzuxr3cr.scala:20:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the dissimilar elements in the given two tuples.\n    def findDissimilar(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var count = 0\n        while (tup1 > 0 || tup2 > 0) {\n            if ((tup1 & 1) != (tup2 & 1)) count += 1\n            tup1 >>= 1\n            tup2 >>= 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(findDissimilar((3l, 4l, 5l, 6l), (5l, 7l, 4l, 10l)) == (3l, 6l, 7l, 10l));\n    assert(findDissimilar((1l, 2l, 3l, 4l), (7l, 2l, 3l, 9l)) == (1l, 4l, 7l, 9l));\n    assert(findDissimilar((21l, 11l, 25l, 26l), (26l, 34l, 21l, 36l)) == (34l, 36l, 11l, 25l));\n    }\n\n}\n",
      "timestamp": 1665517311,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:17:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(findDissimilar((\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m)) == (\u001b[31m3l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                          Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdbxb8duu.scala:18:44 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(findDissimilar((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m)) ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_444_trim_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_444_trim_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (tuple <- test_list) {\n            var temp = tuple\n            while (temp > 0) {\n                result += (temp % K).toString\n                temp /= K\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhm8nt3q.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhm8nt3q.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmhm8nt3q.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K).filter(x => x > 0)\n        if (result.length == 0) \"Empty\"\n        else result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        // Write your code here\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i == test_list.length - 1) {\n                result += (test_list(i) - K).toString\n            } else {\n                result += (test_list(i) - K).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbjz5aoqc.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbjz5aoqc.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbjz5aoqc.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < K) result += (test_list(i) + K).toString + \" \"\n            else result += test_list(i).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n                result += \" \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqne53r1b.scala:16:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqne53r1b.scala:16:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqne53r1b.scala:16:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyvvii6d6.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyvvii6d6.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyvvii6d6.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgivvdn82.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgivvdn82.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgivvdn82.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zxfz2p2.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            } else if (i < -K) {\n                result += (i + K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i < K) {\n                result += i\n            }\n        }\n        return result.toList.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt9jnw6y8.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt9jnw6y8.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt9jnw6y8.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc91dis3c.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc91dis3c.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc91dis3c.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < K) result += (test_list(i) + K).toString + \" \"\n            else result += test_list(i).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt)\n            } else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8606oy5.scala:24:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8606oy5.scala:24:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8606oy5.scala:24:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb521b7gg.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb521b7gg.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb521b7gg.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K)\n                result += (test_list(i) - K).toString + \" \"\n            else\n                result += \"0 \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvdqjj0ik.scala:16:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvdqjj0ik.scala:16:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvdqjj0ik.scala:16:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var x = test_list(i)\n            var y = x - K\n            if (y < 0) y = 0\n            result += y.toString\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8h7a5ym.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8h7a5ym.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy8h7a5ym.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            if (i != 0) result.append(\" \")\n            result.append(test_list(i) - K)\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphwnh84vm.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphwnh84vm.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphwnh84vm.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K).filter(x => x > 0)\n        if (result.length == 0) \"Empty\"\n        else result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += test_list(i) - K\n            }\n            else if (test_list(i) < -K) {\n                result += test_list(i) + K\n            }\n            else {\n                result += 0\n            }\n        }\n        return result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph54_tszt.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph54_tszt.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph54_tszt.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9_4g8f8.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9_4g8f8.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9_4g8f8.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpel3zzn04.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpel3zzn04.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpel3zzn04.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzl8dj_42.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzl8dj_42.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzl8dj_42.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) <= K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkai4ufwu.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkai4ufwu.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkai4ufwu.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.substring(0, result.length - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1wkwmyt.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1wkwmyt.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1wkwmyt.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var tuple = test_list(i)\n            var temp = tuple\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp = tuple\n                var new_tuple = 0L\n                for (j <- 0 until K) {\n                    new_tuple = new_tuple * 10 + temp % 10\n                    temp /= 10\n                }\n                result += new_tuple.toString + \" \"\n            }\n            else result += tuple.toString + \" \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4asq_uxz.scala:18:34 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m                \u001b[33mfor\u001b[0m (j <- \u001b[31m0\u001b[0m until K) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Found:    (K : Long)\n\u001b[31m   |\u001b[0m                                  Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4asq_uxz.scala:29:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4asq_uxz.scala:29:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa09dndgr.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa09dndgr.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa09dndgr.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            var temp2 = test_list(i)\n            var temp3 = 0L\n            while (count > K) {\n                temp3 = temp2 % 10\n                temp2 /= 10\n                count -= 1\n            }\n            if (i != test_list.length - 1) result += temp2 + \" \"\n            else result += temp2\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmi_yr2x.scala:27:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmi_yr2x.scala:27:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprmi_yr2x.scala:27:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            result += (i - K)\n        }\n        return result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1gellkm.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1gellkm.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx1gellkm.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5askz9g5.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5askz9g5.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5askz9g5.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvv9jzxu4.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvv9jzxu4.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvv9jzxu4.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7mepadk.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7mepadk.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7mepadk.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) result += test_list(i) + \" \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510316,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqd2ruor.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqd2ruor.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfqd2ruor.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp1 = test_list(i)\n                var temp2 = test_list(i)\n                for (j <- 0 until K) {\n                    temp1 /= 10\n                    temp2 %= 10\n                }\n                result += temp1.toString + temp2.toString + \" \"\n            }\n            else result += test_list(i).toString + \" \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g44rn9j.scala:17:34 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mfor\u001b[0m (j <- \u001b[31m0\u001b[0m until K) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Found:    (K : Long)\n\u001b[31m   |\u001b[0m                                  Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g44rn9j.scala:28:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g44rn9j.scala:28:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            var temp2 = test_list(i)\n            if (count > K) {\n                var temp3 = pow(10, count - K).toLong\n                temp2 /= temp3\n                temp2 *= temp3\n            }\n            result.append(temp2)\n            if (i != test_list.length - 1) result.append(\" \")\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e327l_t.scala:26:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e327l_t.scala:26:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_e327l_t.scala:26:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            var temp = i\n            while (temp > K) {\n                temp = temp / K\n            }\n            result += temp + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8a6eb78f.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8a6eb78f.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8a6eb78f.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) result += (i - K).toString + \" \"\n            else result += \"0 \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wnndqj5.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wnndqj5.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wnndqj5.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => (x - K).toString).mkString(\" \")\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => (x - K).toString).mkString(\" \")\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp53zqh8ce.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyvvii6d6.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyvvii6d6.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyvvii6d6.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj7l4ply.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj7l4ply.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj7l4ply.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122969,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dhwwu0j.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dhwwu0j.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8dhwwu0j.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp2 = test_list(i)\n                var temp3 = temp2\n                for (j <- 0 until count - K) {\n                    temp3 /= 10\n                }\n                temp2 -= temp3 * pow(10, count - K).toLong\n                result += temp2.toString\n            } else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn45i89h8.scala:17:34 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mfor\u001b[0m (j <- \u001b[31m0\u001b[0m until count - K) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Found:    Long\n\u001b[31m   |\u001b[0m                                  Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn45i89h8.scala:30:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn45i89h8.scala:30:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when comp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h94fwag.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h94fwag.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h94fwag.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa09dndgr.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa09dndgr.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa09dndgr.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i >= K) {\n                result += i\n            }\n        }\n        return result.mkString(\",\")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxn1iucqk.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxn1iucqk.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxn1iucqk.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K) + \" \"\n            else result += \"0 \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfga9jle.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfga9jle.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvfga9jle.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp2 = test_list(i)\n                var temp3 = 0L\n                for (j <- 0 until K) {\n                    temp3 = temp3 * 10 + temp2 % 10\n                    temp2 /= 10\n                }\n                result.append(temp3 + \" \")\n            } else {\n                result.append(test_list(i) + \" \")\n            }\n        }\n        return result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyfin1m2.scala:17:34 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m                \u001b[33mfor\u001b[0m (j <- \u001b[31m0\u001b[0m until K) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Found:    (K : Long)\n\u001b[31m   |\u001b[0m                                  Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyfin1m2.scala:29:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyfin1m2.scala:29:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var temp_str = \"\"\n            while (temp > 0) {\n                temp_str = (temp % 10).toString + temp_str\n                temp /= 10\n            }\n            if (temp_str.length > K) {\n                temp_str = temp_str.substring(0, temp_str.length - K.toInt)\n            }\n            result += temp_str + \" \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9je6axzc.scala:22:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9je6axzc.scala:22:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9je6axzc.scala:22:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpme1yqa19.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpme1yqa19.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpme1yqa19.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => (x - K, x + K)).map(x => x._1 + \" \" + x._2).mkString(\" \")\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123048,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8z10sy6s.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8z10sy6s.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8z10sy6s.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxdb0oyi8.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxdb0oyi8.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxdb0oyi8.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += test_list(i) + \" \"\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpau12nl2a.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpau12nl2a.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpau12nl2a.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, K.toInt) + \" \"\n            }\n            else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8sgn8u41.scala:24:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8sgn8u41.scala:24:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8sgn8u41.scala:24:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var tuple = test_list(i)\n            var tuple_list = ListBuffer[Long]()\n            while (tuple > 0) {\n                tuple_list += tuple % K\n                tuple /= K\n            }\n            result += tuple_list.reverse.mkString(\" \") + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnb432dd0.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnb432dd0.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnb432dd0.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (K.toString + \" \")\n            } else {\n                result += (test_list(i).toString + \" \")\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg8cfx6dp.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg8cfx6dp.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg8cfx6dp.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (K + \" \")\n            } else {\n                result += (test_list(i) + \" \")\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5q4_map.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5q4_map.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb5q4_map.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123049,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h94fwag.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h94fwag.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_h94fwag.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += test_list(i) - K\n            }\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzlqlawo3.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzlqlawo3.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzlqlawo3.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz1kjple.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz1kjple.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz1kjple.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt)\n            } else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) result += \",\"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72umscyj.scala:24:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72umscyj.scala:24:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp72umscyj.scala:24:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123005,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp + \" \"\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0152njou.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0152njou.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0152njou.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            } else if (i < -K) {\n                result += (i + K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk__vg4io.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9_4g8f8.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9_4g8f8.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy9_4g8f8.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K).filter(x => x > 0)\n        if (result.length == 0) \"Empty\"\n        else result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpul2cswgf.scala:11:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc505zohh.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                count += 1\n                temp /= 10\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw_6co069.scala:24:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw_6co069.scala:24:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw_6co069.scala:24:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n            }\n            else {\n                result += \"0\"\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122968,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzoptsh1.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzoptsh1.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbzoptsh1.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result = result :+ test_list(i)\n            }\n        }\n        return result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122969,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpve2j80c1.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpve2j80c1.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpve2j80c1.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) result += \"0 \"\n            else result += test_list(i) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptlj1c045.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptlj1c045.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptlj1c045.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            val y = x - K\n            if (y > 0) result += y.toString + \" \"\n            else result += \"0 \"\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphxxz2j0u.scala:16:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphxxz2j0u.scala:16:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphxxz2j0u.scala:16:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K) + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9k40ky1.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9k40ky1.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps9k40ky1.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123005,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7uumw2n2.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result += i - K\n            }\n            else if (i < K) {\n                result += i + K\n            }\n            else {\n                result += i\n            }\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123050,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv0amgbdf.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv0amgbdf.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv0amgbdf.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c0rvys0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i > K)\n                result += i - K\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc40_dzir.scala:14:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc40_dzir.scala:14:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc40_dzir.scala:14:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result_list = List[Long]()\n        for (i <- test_list) {\n            if (i >= K) {\n                result_list = result_list :+ (i - K)\n            }\n        }\n        return result_list.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprl99_asg.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprl99_asg.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprl99_asg.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122951,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp055g5tuo.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.substring(0, result.length - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123031,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1wkwmyt.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1wkwmyt.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi1wkwmyt.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2c2c7ozg.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result_list = List[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result_list = result_list :+ (i - K)\n            } else if (i < -K) {\n                result_list = result_list :+ (i + K)\n            } else {\n                result_list = result_list :+ 0\n            }\n        }\n        return result_list.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqeyna7sz.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqeyna7sz.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqeyna7sz.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi7dbufa.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi7dbufa.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfi7dbufa.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += test_list(i) / K + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123059,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv46aixga.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv46aixga.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv46aixga.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < K) result += (test_list(i) + K).toString + \" \"\n            else result += test_list(i).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4v_g9k7.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpglhtqw9s.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpglhtqw9s.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpglhtqw9s.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K) + \" \"\n            } else if (test_list(i) < -K) {\n                result += (test_list(i) + K) + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6xwmzrl.scala:19:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6xwmzrl.scala:19:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps6xwmzrl.scala:19:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) - K)\n        }\n        return result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo651iiyw.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo651iiyw.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo651iiyw.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += test_list(i) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73t7jjbn.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73t7jjbn.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp73t7jjbn.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0y_jo5ce.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += \"0 \"\n            } else {\n                result += (test_list(i) - K).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq6r2868g.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq6r2868g.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq6r2868g.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3bzp6eg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp26ggoms0.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mu9b7qe.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mu9b7qe.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6mu9b7qe.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxvh6a9z.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxvh6a9z.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnxvh6a9z.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwlr5sx9.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp != 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString().substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString() + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppksj4mk2.scala:23:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppksj4mk2.scala:23:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppksj4mk2.scala:23:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwq4a0i7j.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510325,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp78rws80u.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123060,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnl1u2u6t.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnl1u2u6t.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnl1u2u6t.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vubpdde.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2vb_j1j.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp85l70y0r.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            val tuple = test_list(i)\n            val trimmed_tuple = tuple - (tuple % K)\n            result += trimmed_tuple.toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0gd09v3q.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0gd09v3q.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0gd09v3q.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n            }\n            else {\n                result += \"0\"\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122968,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1hhbzdhh.scala:21:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa3jfg6fg.scala:18:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result.trim\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7mepadk.scala:17:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7mepadk.scala:17:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7mepadk.scala:17:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        val result = test_list.map(x => x - K)\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy62yi9ca.scala:10:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result += i - K\n            }\n        }\n        result.mkString(\" \")\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbje03dgy.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbje03dgy.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbje03dgy.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1666123005,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt732h33m.scala:15:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
      "timestamp": 1665510317,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:33 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:55 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l\u001b[0m)).equals((\u001b[31m\"[(2,), (9,), (2,), (2,)]\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpomoo01mq.scala:13:77 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(trimTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m5l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m7l\u001b[0m))), (\u001b[31m2l",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
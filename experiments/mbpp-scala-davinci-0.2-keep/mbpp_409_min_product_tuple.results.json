{
  "name": "mbpp_409_min_product_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_409_min_product_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.tail.sorted\n        val list4 = list3.tail.sorted\n        val list5 = list4.tail.sorted\n        val list6 = list5.tail.sorted\n        val list7 = list6.tail.sorted\n        val list8 = list7.tail.sorted\n        val list9 = list8.tail.sorted\n        val list10 = list9.tail.sorted\n        val list11 = list10.tail.sorted\n        val list12 = list11.tail.sorted\n        val list13 = list12.tail.sorted\n        val list14 = list13.tail.sorted\n        val list15 = list14.tail.sorted\n        val list16 = list15.tail.sorted\n        val list17 = list16.tail.sorted\n        val list18 = list17.tail.sorted\n        val list19 = list18.tail.sorted\n        val list20 = list19.tail.sorted\n        val list21 = list20.tail.sorted\n        val list22 = list21.tail.sorted\n        val list23 = list22.tail.sorted\n        val list24 = list23.tail.sorted\n        val list25 = list24.tail.sorted\n        val list26 = list25.tail.sorted\n        val list27 = list26.tail.sorted\n        val list28 = list27.tail.sorted\n        val list29 = list28.tail.sorted\n        val list30 = list29.tail.sorted\n        val list31 = list30.tail.sorted\n        val list32 = list31.tail.sorted\n        val list33 = list32.tail.sorted\n        val list34 = list33.tail.sorted\n        val list35 = list34.tail.sorted\n        val list36 = list35.tail.sorted\n        val list37 = list36.tail.sorted\n        val list38 = list37.tail.sorted\n        val list39 = list38.tail.sorted\n        val list40 = list39.tail.sorted\n        val list41 = list\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpckqp7nsc.scala:45:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mlist41\u001b[0m = list\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: list\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckqp7nsc.scala:46:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckqp7nsc.scala:48:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckqp7nsc.scala:48:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpckqp7nsc.scala:48:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex.filter(x => x._2 % 2 == 0)\n        list3.map(x => x._1 * list2(list2.indexOf(x._1) + 1)).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwhdv0sp3.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwhdv0sp3.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwhdv0sp3.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwhdv0sp3.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.size - 1) {\n            for (j <- i + 1 until list1.size) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3ljqprd.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3ljqprd.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3ljqprd.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv3ljqprd.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqw2gxdk.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqw2gxdk.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqw2gxdk.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqw2gxdk.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.take(2)\n        list3.product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ttof9p_.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        list(0) * list(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        return list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp2dbkykl.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.drop(1)\n        val list4 = list2.dropRight(1)\n        val list5 = list3.zip(list4)\n        val list6 = list5.map(x => x._1 * x._2)\n        list6.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd1d660f.scala:14:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd1d660f.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd1d660f.scala:14:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd1d660f.scala:14:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.slice(0, list2.length - 1)\n        val list4 = list2.slice(1, list2.length)\n        val list5 = list3.zip(list4)\n        list5.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_w_8lz3u.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_w_8lz3u.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_w_8lz3u.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_w_8lz3u.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplh5ugnvw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdg18h7bz.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 to list1.length - 1) {\n            for (j <- i + 1 to list1.length - 1) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7irggu03.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7irggu03.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7irggu03.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7irggu03.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.map(x => (x._1, x._2, x._2 + 1))\n        val list5 = list4.filter(x => x._3 < list4.size)\n        val list6 = list5.map(x => (x._1, list4(x._3)._1))\n        val list7 = list6.map(x => x._1 * x._2)\n        list7.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvt45oe8.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvt45oe8.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvt45oe8.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvt45oe8.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.drop(list2.length - 2)\n        list3.product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdp8cjedm.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val sortedList = list1.sorted\n        sortedList(0) * sortedList(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124331,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvp01zwdm.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvp01zwdm.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvp01zwdm.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvp01zwdm.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 to list1.length - 1) {\n            for (j <- i + 1 to list1.length - 1) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuh8ived8.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.filter(x => x._2 % 2 == 0)\n        val list5 = list4.map(x => x._1)\n        list5.reduceLeft(_ * _)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgpusvxfs.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgpusvxfs.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgpusvxfs.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgpusvxfs.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        list1.sortWith(_ < _).take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpviri_obt.scala:9:39 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                       Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpviri_obt.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                 Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpviri_obt.scala:9:59 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                    Found:    (Long, Long)\n\u001b[31m  |\u001b[0m                                                    Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpviri_obt.scala:9:69 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        val min = list(0) * list(1)\n        val max = list(list.length - 1) * list(list.length - 2)\n        if (min > max) min else max\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        list(0) * list(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        val min = list(0) * list(1)\n        val max = list(list.length - 1) * list(list.length - 2)\n        if (min > max) min else max\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkfa4_65t.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptu0n6a8o.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                if (list1(i) * list1(j) < min) min = list1(i) * list1(j)\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_rtiai_j.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_rtiai_j.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_rtiai_j.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_rtiai_j.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list = list1.sorted\n        list(0) * list(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpscbr647b.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zipWithIndex.map(x => x._1 * list2(list2.length - x._2 - 1)).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_moullvx.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_moullvx.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_moullvx.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_moullvx.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.filter(x => x._2 % 2 == 0)\n        val list5 = list4.map(x => x._1)\n        list5.reduceLeft(_ * _)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgpusvxfs.scala:13:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgpusvxfs.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgpusvxfs.scala:13:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgpusvxfs.scala:13:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1eoku9lg.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = list1(0) * list1(1)\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp12b7knge.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp12b7knge.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp12b7knge.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp12b7knge.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp50efxqmi.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqw2gxdk.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqw2gxdk.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqw2gxdk.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvqw2gxdk.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.reverse\n        list2.head * list3.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrqhcu6v.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrqhcu6v.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrqhcu6v.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbrqhcu6v.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sortWith(_ < _)\n        val list3 = list2.drop(list2.length - 2)\n        list3.reduceLeft(_ * _)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t725389.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t725389.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t725389.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1t725389.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.grouped(2).toList\n        var min = Long.MaxValue\n        for (i <- 0 until list3.length) {\n            val product = list3(i).reduceLeft(_ * _)\n            if (product < min) min = product\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpajaomy6j.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpajaomy6j.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpajaomy6j.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpajaomy6j.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val prod = list1(i) * list1(j)\n                if (prod < min) min = prod\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcrafl0jl.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.zip(list2.tail).map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmkax7exs.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var minProduct = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < minProduct) minProduct = product\n            }\n        }\n        return minProduct\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124356,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p8_7hy4.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p8_7hy4.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p8_7hy4.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4p8_7hy4.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.map(x => (x._1, x._2, x._2 - x._1))\n        val list5 = list4.sortWith((x, y) => x._3 < y._3)\n        val list6 = list5.map(x => (x._1, x._2))\n        val list7 = list6.map(x => x._1 * x._2)\n        list7.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124372,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_mgv5kdw.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_mgv5kdw.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_mgv5kdw.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_mgv5kdw.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val product = list2(0) * list2(1)\n        product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124373,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp_iifq5.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp_iifq5.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp_iifq5.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbp_iifq5.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmvjbpu84.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                min = min min (list1(i) * list1(j))\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509732,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwefznlp7.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zip(list2.tail)\n        list3.map(x => x._1 * x._2).min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2u2yq7r8.scala:11:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val min1 = list2(0) * list2(1)\n        val min2 = list2(list2.length - 2) * list2(list2.length - 1)\n        if (min1 < min2) min1 else min2\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphd9jmycq.scala:12:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphd9jmycq.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphd9jmycq.scala:12:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphd9jmycq.scala:12:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        val list3 = list2.zipWithIndex\n        val list4 = list3.map(x => (x._1, x._2, x._2 + 1))\n        val list5 = list4.filter(x => x._3 < list4.length)\n        val list6 = list5.map(x => (x._1, list4(x._3)._1))\n        val list7 = list6.map(x => x._1 * x._2)\n        list7.min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1666124355,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfcl0ioa.scala:15:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfcl0ioa.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfcl0ioa.scala:15:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfcl0ioa.scala:15:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2.head * list2.tail.head\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7npejucn.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpucz1yvor.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        var min = Long.MaxValue\n        for (i <- 0 until list1.length - 1) {\n            for (j <- i + 1 until list1.length) {\n                val product = list1(i) * list1(j)\n                if (product < min) min = product\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0_q05fw.scala:16:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum product from the pairs of tuples within a given list.\n    def minProductTuple(list1 : List[Long]) : Long = {\n        val list2 = list1.sorted\n        list2(0) * list2(1)\n    }\n    def main(args: Array[String]) = {\n    assert(minProductTuple((List[Long]((2l, 7l), (2l, 6l), (1l, 8l), (4l, 9l)))) == (8l));\n    assert(minProductTuple((List[Long]((10l, 20l), (15l, 2l), (5l, 10l)))) == (30l));\n    assert(minProductTuple((List[Long]((11l, 44l), (10l, 15l), (20l, 5l), (12l, 9l)))) == (100l));\n    }\n\n}\n",
      "timestamp": 1665509726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:39 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                       Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                 Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:59 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m9l\u001b[0m)))) == (\u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                  Found:    (Long, Long)\n\u001b[31m   |\u001b[0m                                                  Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkbompmw_.scala:10:69 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minProductTuple((List[\u001b[35mLong\u001b[0m]((\u001b[31m2l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
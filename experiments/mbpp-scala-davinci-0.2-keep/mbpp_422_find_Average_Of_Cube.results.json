{
  "name": "mbpp_422_find_Average_Of_Cube",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_422_find_Average_Of_Cube.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return (sum.toFloat / n.toFloat)\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n.toFloat\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toFloat\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122853,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppdyesfuu.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toFloat\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122853,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprqjga0cd.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        return sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zdxzwem.scala:10:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m sum / n\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               Found:    Double\n\u001b[31m   |\u001b[0m               Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3).toLong\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1666122854,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0.0\n        for (i <- 1 to n.toInt) {\n            sum += pow(i, 3)\n        }\n        sum / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvmh92386.scala:10:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        sum / n\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Double\n\u001b[31m   |\u001b[0m        Required: Float\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1L to n) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum : Long = 0\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        return sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the average of cubes of first n natural numbers.\n    def findAverageOfCube(n : Long) : Float = {\n        var sum = 0L\n        for (i <- 1 to n.toInt) {\n            sum += i * i * i\n        }\n        sum.toFloat / n\n    }\n    def main(args: Array[String]) = {\n    assert(findAverageOfCube((2l)) == (4.5f));\n    assert(findAverageOfCube((3l)) == 12l);\n    assert(findAverageOfCube((1l)) == 1l);\n    }\n\n}\n",
      "timestamp": 1665510076,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
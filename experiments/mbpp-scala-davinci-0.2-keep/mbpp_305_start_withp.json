{
  "name": "mbpp_305_start_withp",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to return two words from a list of words starting with letter 'p'.\n    def startWithp(words : List[String]) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_305_start_withp.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(startWithp((List[String](\"Python PHP\", \"Java JavaScript\", \"c c++\"))).equals((String((\"Python\", \"PHP\")))));\n    assert(startWithp((List[String](\"Python Programming\", \"Java Programming\"))).equals((String((\"Python\", \"Programming\")))));\n    assert(startWithp((List[String](\"Pqrst Pqr\", \"qrstuv\"))).equals((String((\"Pqrst\", \"Pqr\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val pwords = words.filter(x => x.startsWith(\"p\"))\n        pwords.mkString(\" \")",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for(word <- words) {\n            if(word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        words.filter(word => word.startsWith(\"p\")).mkString(\" \")",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.charAt(0) == 'p') {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.charAt(0) == 'p') {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.charAt(0) == 'p') {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (word <- words) {\n            if (word.startsWith(\"p\")) {\n                result += word + \" \"\n            }\n        }\n        result"
  ]
}
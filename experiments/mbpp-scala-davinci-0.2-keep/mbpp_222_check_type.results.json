{
  "name": "mbpp_222_check_type",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_222_check_type.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_length) {\n            if (tuple_type_list(0) != tuple_type_list(i)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkomywepx.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkomywepx.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkomywepx.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x : Int, y : Int, z : Int) => true\n            case (x : Int, y : Int, z : String) => false\n            case (x : Int, y : String, z : Int) => false\n            case (x : Int, y : String, z : String) => false\n            case (x : String, y : Int, z : Int) => false\n            case (x : String, y : Int, z : String) => false\n            case (x : String, y : String, z : Int) => false\n            case (x : String, y : String, z : String) => true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7xoql813.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7xoql813.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7xoql813.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (t1, t2) => t1.getClass == t2.getClass\n            case (t1, t2, t3) => t1.getClass == t2.getClass && t1.getClass == t3.getClass\n            case (t1, t2, t3, t4) => t1.getClass == t2.getClass && t1.getClass == t3.getClass && t1.getClass == t4.getClass\n            case (t1, t2, t3, t4, t5) => t1.getClass == t2.getClass && t1.getClass == t3.getClass && t1.getClass == t4.getClass && t1.getClass == t5.getClass\n            case (t1, t2, t3, t4, t5, t6) => t1.getClass == t2.getClass && t1.getClass == t3.getClass && t1.getClass == t4.getClass && t1.getClass == t5.getClass && t1.getClass == t6.getClass\n            case (t1, t2, t3, t4, t5, t6, t7) => t1.getClass == t2.getClass && t1.getClass == t3.getClass && t1.getClass == t4.getClass && t1.getClass == t5.getClass && t1.getClass == t6.getClass && t1.getClass == t7.getClass\n            case (t1, t2, t3, t4, t5, t6, t7, t8) => t1.getClass == t2.getClass && t1.getClass == t3.getClass && t1.getClass == t4.getClass && t1.getClass == t5.getClass && t1.getClass == t6.getClass && t1.getClass == t7.getClass && t1.getClass == t8.getClass\n            case (t1, t2, t3, t4, t5, t6, t7, t8, t9) => t1.\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp51d566hq.scala:15:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp51d566hq.scala:23:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp51d566hq.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp51d566hq.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp51d566hq.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp51d566hq.scala:22:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp51d566hq.scala:16:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m16 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36mar",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- test_tuple.productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        for (i <- type_list) {\n            if (i != type_list(0)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4rg30lir.scala:8:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- test_tuple.productIterator) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value productIterator is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rg30lir.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rg30lir.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rg30lir.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_last_list_length - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510560,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm3smv0ur.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm3smv0ur.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm3smv0ur.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh5uxma3.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh5uxma3.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh5uxma3.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 to tuple_type_list_length - 1) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510560,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4f7zssha.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4f7zssha.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4f7zssha.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        test_tuple_type match {\n            case \"scala.Tuple1\" => true\n            case \"scala.Tuple2\" => {\n                val tuple = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n                val first_type = tuple._1.getClass.getName\n                val second_type = tuple._2.getClass.getName\n                if (first_type == second_type) true else false\n            }\n            case \"scala.Tuple3\" => {\n                val tuple = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n                val first_type = tuple._1.getClass.getName\n                val second_type = tuple._2.getClass.getName\n                val third_type = tuple._3.getClass.getName\n                if (first_type == second_type && first_type == third_type) true else false\n            }\n            case \"scala.Tuple4\" => {\n                val tuple = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                val first_type = tuple._1.getClass.getName\n                val second_type = tuple._2.getClass.getName\n                val third_type = tuple._3.getClass.getName\n                val fourth_type = tuple._4.getClass.getName\n                if (first_type == second_type && first_type == third_type && first_type == fourth_type) true else false\n            }\n            case \"scala.Tuple5\" => {\n                val tuple = test_tuple.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n                val first_type = tuple._1.getClass.getName\n                val second_type = tuple._2.getClass.getName\n                val third_type = tuple._3.getClass.getName\n                val fourth_type = tuple._4.getClass.getName\n                val fifth_type = tuple._5.getClass.getName\n                if (first_type == second_type && first_type\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdd9rl8x7.scala:38:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdd9rl8x7.scala:46:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdd9rl8x7.scala:37:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m                \u001b[33mif\u001b[0m (first_type == second_type && first_type\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                         Found:    (first_type : String)\n\u001b[31m   |\u001b[0m                                         Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdd9rl8x7.scala:40:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdd9rl8x7.scala:41:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdd9rl8x7.scala:42:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val type_list = tuple_list.map(x => x.getClass.getSimpleName)\n        val type_set = type_list.toSet\n        if (type_set.size == 1) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq_tdlv.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq_tdlv.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfmq_tdlv.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        test_tuple_type match {\n            case \"scala.Tuple2\" => {\n                val first_element = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n                val second_element = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n                val first_element_type = first_element._1.getClass.getName\n                val second_element_type = second_element._2.getClass.getName\n                if (first_element_type == second_element_type) {\n                    true\n                } else {\n                    false\n                }\n            }\n            case \"scala.Tuple3\" => {\n                val first_element = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n                val second_element = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n                val third_element = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n                val first_element_type = first_element._1.getClass.getName\n                val second_element_type = second_element._2.getClass.getName\n                val third_element_type = third_element._3.getClass.getName\n                if (first_element_type == second_element_type && second_element_type == third_element_type) {\n                    true\n                } else {\n                    false\n                }\n            }\n            case \"scala.Tuple4\" => {\n                val first_element = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                val second_element = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                val third_element = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                val fourth_element = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                val first_element_type = first_element._1.getClass.getName\n                val second_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpquoapr55.scala:39:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpquoapr55.scala:47:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpquoapr55.scala:41:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpquoapr55.scala:42:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpquoapr55.scala:43:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpquoapr55.scala:44:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpquoapr55.scala:40:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m40 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass.getName)\n        if (test_tuple_list_type.distinct.length == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgong_k3x.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgong_k3x.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgong_k3x.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        tuple_type match {\n            case \"scala.Tuple2\" => {\n                val test_tuple_1 = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n                val test_tuple_2 = (test_tuple_1._1, test_tuple_1._2)\n                val test_tuple_3 = (test_tuple_1._1.getClass.getName, test_tuple_1._2.getClass.getName)\n                if (test_tuple_3._1 == test_tuple_3._2) true else false\n            }\n            case \"scala.Tuple3\" => {\n                val test_tuple_1 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n                val test_tuple_2 = (test_tuple_1._1, test_tuple_1._2, test_tuple_1._3)\n                val test_tuple_3 = (test_tuple_1._1.getClass.getName, test_tuple_1._2.getClass.getName, test_tuple_1._3.getClass.getName)\n                if (test_tuple_3._1 == test_tuple_3._2 && test_tuple_3._2 == test_tuple_3._3) true else false\n            }\n            case \"scala.Tuple4\" => {\n                val test_tuple_1 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n                val test_tuple_2 = (test_tuple_1._1, test_tuple_1._2, test_tuple_1._3, test_tuple_1._4)\n                val test_tuple_3 = (test_tuple_1._1.getClass.getName, test_tuple_1._2.getClass.getName, test_tuple_1._3.getClass.getName, test_tuple_1._4.getClass.getName)\n                if (test_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_zaqfycp.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_zaqfycp.scala:33:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_zaqfycp.scala:24:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m                \u001b[33mif\u001b[0m (test_\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: test_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_zaqfycp.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_zaqfycp.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_zaqfycp.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_zaqfycp.scala:30:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 to tuple_type_list_length - 1) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510560,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4f7zssha.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4f7zssha.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4f7zssha.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppbnez_wl.scala:10:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbnez_wl.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbnez_wl.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbnez_wl.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        if (tuple_type_list_length == 1) {\n            return true\n        }\n        else {\n            val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n            val tuple_type_list_last_length = tuple_type_list_last.length\n            val tuple_type_list_last_new = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n            val tuple_type_list_last_new_length = tuple_type_list_last_new.length\n            val tuple_type_list_last_new_new = tuple_type_list_last_new.substring(0, tuple_type_list_last_new_length - 1)\n            if (tuple_type_list_last_new_new == \"java.lang.Integer\") {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp03gzxon2.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp03gzxon2.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp03gzxon2.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val type_list = tuple_list.map(x => x.getClass)\n        val type_set = type_list.toSet\n        if (type_set.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpglxumapy.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpglxumapy.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpglxumapy.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2on5wbb9.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2on5wbb9.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2on5wbb9.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val t = test_tuple.asInstanceOf[Product]\n        val len = t.productArity\n        var flag = true\n        for (i <- 0 until len) {\n            if (t.productElement(i).getClass != t.productElement(0).getClass) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcfkrigtv.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcfkrigtv.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcfkrigtv.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoubnvew5.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoubnvew5.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoubnvew5.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type == \"scala.Tuple2\") {\n            val tuple_type_1 = test_tuple.asInstanceOf[Tuple2[Any, Any]]._1.getClass.getName\n            val tuple_type_2 = test_tuple.asInstanceOf[Tuple2[Any, Any]]._2.getClass.getName\n            if (tuple_type_1 == tuple_type_2) true\n            else false\n        }\n        else if (tuple_type == \"scala.Tuple3\") {\n            val tuple_type_1 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._1.getClass.getName\n            val tuple_type_2 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._2.getClass.getName\n            val tuple_type_3 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._3.getClass.getName\n            if (tuple_type_1 == tuple_type_2 && tuple_type_2 == tuple_type_3) true\n            else false\n        }\n        else if (tuple_type == \"scala.Tuple4\") {\n            val tuple_type_1 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._1.getClass.getName\n            val tuple_type_2 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._2.getClass.getName\n            val tuple_type_3 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._3.getClass.getName\n            val tuple_type_4 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._4.getClass.getName\n            if (tuple_type_1 == tuple_type_2 && tuple_type_2 == tuple_type_3 && tuple_type_3 == tuple_type_4\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123593,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpci85dh3e.scala:26:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpci85dh3e.scala:34:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpci85dh3e.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpci85dh3e.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpci85dh3e.scala:30:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpci85dh3e.scala:33:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpci85dh3e.scala:27:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m27 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        val type_list = new ArrayBuffer[String]()\n        for (i <- 1 until tuple_type_list_size) {\n            val type_name = tuple_type_list(i).split(\"\\\\]\")(0)\n            type_list += type_name\n        }\n        val type_list_set = type_list.toSet\n        if (type_list_set.size == 1) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa78ri295.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa78ri295.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa78ri295.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getName != data_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv9svus3u.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv9svus3u.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != data_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv9svus3u.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv9svus3u.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv9svus3u.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_len = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_len - 1)\n        val tuple_type_list_last_len = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_len - 1)\n        if (tuple_type_list_last_last == \"java.lang.Integer\") {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123586,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf9jhk6_g.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf9jhk6_g.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf9jhk6_g.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_array = tuple_type.split(\"\\\\[\")\n        val tuple_type_array_length = tuple_type_array.length\n        val tuple_type_array_last = tuple_type_array(tuple_type_array_length - 1)\n        val tuple_type_array_last_length = tuple_type_array_last.length\n        val tuple_type_array_last_substring = tuple_type_array_last.substring(0, tuple_type_array_last_length - 1)\n        val tuple_type_array_last_substring_array = tuple_type_array_last_substring.split(\",\")\n        val tuple_type_array_last_substring_array_length = tuple_type_array_last_substring_array.length\n        val tuple_type_array_last_substring_array_first = tuple_type_array_last_substring_array(0)\n        for (i <- 1 until tuple_type_array_last_substring_array_length) {\n            if (tuple_type_array_last_substring_array(i) != tuple_type_array_last_substring_array_first) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fynjr1t.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fynjr1t.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0fynjr1t.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productIterator.toList\n        var temp_type = temp(0).getClass\n        for (i <- temp) {\n            if (i.getClass != temp_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123587,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcjyhz0k5.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcjyhz0k5.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcjyhz0k5.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n        val tuple_type_list_last_size = tuple_type_list_last.size\n        val tuple_type_list_last_new = tuple_type_list_last.slice(0, tuple_type_list_last_size - 1)\n        val tuple_type_list_last_new_list = tuple_type_list_last_new.split(\",\")\n        val tuple_type_list_last_new_list_size = tuple_type_list_last_new_list.size\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_new_list_size - 1) {\n            if (tuple_type_list_last_new_list(i) != tuple_type_list_last_new_list(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf70fqmoi.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf70fqmoi.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf70fqmoi.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.isInstanceOf[Int] && y.isInstanceOf[Int]\n            case (x, y, z) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int]\n            case (x, y, z, a) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && a.isInstanceOf[Int]\n            case (x, y, z, a, b) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && a.isInstanceOf[Int] && b.isInstanceOf[Int]\n            case (x, y, z, a, b, c) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && a.isInstanceOf[Int] && b.isInstanceOf[Int] && c.isInstanceOf[Int]\n            case (x, y, z, a, b, c, d) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && a.isInstanceOf[Int] && b.isInstanceOf[Int] && c.isInstanceOf[Int] && d.isInstanceOf[Int]\n            case (x, y, z, a, b, c, d, e) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && a.isInstanceOf[Int] && b.isInstanceOf[Int] && c.isInstanceOf[Int] && d.isInstanceOf[Int] && e.isInstanceOf[Int]\n            case (x, y, z, a, b, c, d, e, f) => x.isInstanceOf[Int] && y.isInstanceOf[Int] && z.isInstanceOf[Int] && a.isInstanceOf[Int] && b.isInstanceOf[Int] && c.isInstanceOf[Int] && d.isInstanceOf[Int] && e.isInstanceOf\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123594,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6wpbjzk0.scala:23:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6wpbjzk0.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6wpbjzk0.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6wpbjzk0.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6wpbjzk0.scala:22:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp6wpbjzk0.scala:16:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m16 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var result = true\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6vekhiic.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6vekhiic.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6vekhiic.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getSimpleName\n        if (test_tuple_type == \"Tuple2\") {\n            val tuple_type = test_tuple.asInstanceOf[Tuple2[Any, Any]]._1.getClass.getSimpleName\n            if (tuple_type == test_tuple.asInstanceOf[Tuple2[Any, Any]]._2.getClass.getSimpleName) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (test_tuple_type == \"Tuple3\") {\n            val tuple_type = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._1.getClass.getSimpleName\n            if (tuple_type == test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._2.getClass.getSimpleName && tuple_type == test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._3.getClass.getSimpleName) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (test_tuple_type == \"Tuple4\") {\n            val tuple_type = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._1.getClass.getSimpleName\n            if (tuple_type == test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._2.getClass.getSimpleName && tuple_type == test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._3.getClass.getSimpleName && tuple_type == test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._4.getClass.getSimpleName) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (test_tuple_type == \"Tuple5\") {\n            val tuple_type = test_tuple.asInstanceOf[Tuple5[Any, Any\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123592,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1pzsrw01.scala:36:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ']' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1pzsrw01.scala:44:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E023] Syntax Error: /tmp/tmp1pzsrw01.scala:35:53 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mtuple_type\u001b[0m = test_tuple.asInstanceOf[\u001b[35mTuple5\u001b[0m[\u001b[35mAny\u001b[0m, \u001b[35mAny\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                                                     ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not enough type arguments for Tuple5[T1, T2, T3, T4, T5]\n\u001b[31m   |\u001b[0m                expected: [T1, T2, T3, T4, T5]\n\u001b[31m   |\u001b[0m                actual:   [\u001b[35mAny\u001b[0m, \u001b[35mAny\u001b[0m]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1pzsrw01.scala:38:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1pzsrw01.scala:39:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1pzsrw01.scala:40:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n        val tuple_type_list_last_size = tuple_type_list_last.size\n        val tuple_type_list_last_trim = tuple_type_list_last.substring(0, tuple_type_list_last_size - 1)\n        val tuple_type_list_last_trim_list = tuple_type_list_last_trim.split(\",\")\n        val tuple_type_list_last_trim_list_size = tuple_type_list_last_trim_list.size\n        var check = true\n        for (i <- 0 until tuple_type_list_last_trim_list_size - 1) {\n            if (tuple_type_list_last_trim_list(i) != tuple_type_list_last_trim_list(i + 1)) {\n                check = false\n            }\n        }\n        return check\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy3ow481f.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy3ow481f.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy3ow481f.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_size = test_tuple.asInstanceOf[Product].productArity\n        for (i <- 0 until tuple_size) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpymq1yw51.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpymq1yw51.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpymq1yw51.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpymq1yw51.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var check = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                check = false\n            }\n        }\n        return check\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa191wbm0.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa191wbm0.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa191wbm0.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllk4irkv.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllk4irkv.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllk4irkv.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x : Int, y : Int, z : Int) => true\n            case (x : String, y : String, z : String) => true\n            case (x : Double, y : Double, z : Double) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6b0v4a4q.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6b0v4a4q.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6b0v4a4q.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var type_of_first = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        while (i < test_tuple.asInstanceOf[Product].productArity && flag) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfqc8ltxk.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfqc8ltxk.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfqc8ltxk.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n        if (tuple._1.isInstanceOf[Int] && tuple._2.isInstanceOf[Int] && tuple._3.isInstanceOf[Int])\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123586,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjb3cuojn.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjb3cuojn.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjb3cuojn.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\").toList\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n        val tuple_type_list_last_size = tuple_type_list_last.size\n        val tuple_type_list_last_sub = tuple_type_list_last.substring(0, tuple_type_list_last_size - 1)\n        if (tuple_type_list_last_sub == tuple_type_list(0)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0h9ythqz.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0h9ythqz.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0h9ythqz.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        val tuple_type_list_last_last_list_last = tuple_type_list_last_last_list(tuple_type_list_last_last_list_length - 1)\n        val tuple_type_list_last_last_list_last_list = tuple_type_list_last_last_list_last.split(\"\\\\.\")\n        val tuple_type_list_last_last_list_last_list_length = tuple_type_list_last_last_list_last_list.length\n        val tuple_type_list_last_last_list_last_list_last = tuple_type_list_last_last_list_last_list(tuple_type_list_last_last_list_last_list_length - 1)\n        val tuple_type_list_last_last_list_last_list_last_list = tuple_type_list_last_last_list_last_list_last.split(\"\\\\$\")\n        val tuple_type_list_last_last_list_last_list_last_list_length = tuple_type_list_last_last_list_last_list_last_list.length\n        val tuple_type_list_last_last_list_last_list_last_list_last = tuple_type_list_last_last_list_last_list_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123591,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnw3gzdij.scala:20:70 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_type_list_last_last_list_last_list_last_list_last\u001b[0m = tuple_type_list_last_last_list_last_list_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: tuple_type_list_last_last_list_last_list_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnw3gzdij.scala:21:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnw3gzdij.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnw3gzdij.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnw3gzdij.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation avai",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.toString\n        val tuple_type_split = tuple_type.split(\"\\\\[\")\n        val tuple_type_final = tuple_type_split(1).split(\"\\\\]\")(0)\n        val tuple_type_final_split = tuple_type_final.split(\",\")\n        val tuple_type_final_split_length = tuple_type_final_split.length\n        var flag = true\n        for (i <- 0 until tuple_type_final_split_length) {\n            if (tuple_type_final_split(i) != tuple_type_final_split(0)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaqil88y2.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaqil88y2.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaqil88y2.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n        val first_type = tuple._1.getClass.getName\n        val second_type = tuple._2.getClass.getName\n        val third_type = tuple._3.getClass.getName\n        if (first_type == second_type && second_type == third_type) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123586,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe21p8w6j.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe21p8w6j.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe21p8w6j.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_element = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if (type_of_element != test_tuple.asInstanceOf[Product].productElement(i).getClass) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwd2a45vd.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwd2a45vd.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwd2a45vd.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_trim = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_trim_list = tuple_type_list_last_trim.split(\",\")\n        val tuple_type_list_last_trim_list_length = tuple_type_list_last_trim_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_trim_list_length - 1) {\n            if (tuple_type_list_last_trim_list(i) != tuple_type_list_last_trim_list(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmspyn4ua.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmspyn4ua.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmspyn4ua.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoubnvew5.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoubnvew5.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpoubnvew5.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            var i = 0\n            var flag = true\n            while (i < tuple_length && flag) {\n                val element = test_tuple.asInstanceOf[Product].productElement(i)\n                val element_type = element.getClass.getName\n                if (element_type.contains(\"Tuple\")) {\n                    flag = checkType(element)\n                } else {\n                    if (i == 0) {\n                        flag = true\n                    } else {\n                        flag = (element_type == test_tuple.asInstanceOf[Product].productElement(0).getClass.getName)\n                    }\n                }\n                i += 1\n            }\n            flag\n        } else {\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphj7xy4zu.scala:31:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphj7xy4zu.scala:32:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphj7xy4zu.scala:33:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_types = test_tuple.asInstanceOf[Product].productIterator.toList.map(x => x.getClass.getSimpleName)\n        val unique_types = tuple_types.distinct\n        if (unique_types.length == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123587,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwx414fh.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwx414fh.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnwx414fh.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        for (i <- type_list.indices) {\n            if (type_list(i) != type_list(0)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123598,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4wvij3nq.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4wvij3nq.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4wvij3nq.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp_type = test_tuple.getClass.toString\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass.toString != temp_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123597,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd_9wl2zl.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd_9wl2zl.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd_9wl2zl.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_split = tuple_type.split(\"\\\\[\")\n        val tuple_type_final = tuple_type_split(1).split(\"\\\\]\")(0)\n        val tuple_type_final_split = tuple_type_final.split(\",\")\n        val tuple_type_final_split_set = tuple_type_final_split.toSet\n        if (tuple_type_final_split_set.size == 1) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4abfn63p.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4abfn63p.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4abfn63p.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppbnez_wl.scala:10:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbnez_wl.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbnez_wl.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppbnez_wl.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_length = tuple_type_list_last_last.length\n        val tuple_type_list_last_last_last = tuple_type_list_last_last.substring(0, tuple_type_list_last_last_length - 1)\n        val tuple_type_list_last_last_last_length = tuple_type_list_last_last_last.length\n        val tuple_type_list_last_last_last_last = tuple_type_list_last_last_last.substring(0, tuple_type_list_last_last_last_length - 1)\n        val tuple_type_list_last_last_last_last_length = tuple_type_list_last_last_last_last.length\n        val tuple_type_list_last_last_last_last_last = tuple_type_list_last_last_last_last.substring(0, tuple_type_list_last_last_last_last_length - 1)\n        val tuple_type_list_last_last_last_last_last_length = tuple_type_list_last_last_last_last_last.length\n        val tuple_type_list_last_last_last_last_last_last = tuple_type_list_last_last_last_last_last.substring(0, tuple_type_list_last_last_last_last_last_length - 1)\n        val tuple_type_list_last_last_last_last_last_last_length = tuple_type_list_last_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmayynin1.scala:20:67 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_type_list_last_last_last_last_last_last_length\u001b[0m = tuple_type_list_last_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Not found: tuple_type_list_last_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmayynin1.scala:21:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmayynin1.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmayynin1.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmayynin1.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        for(i <- 0 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if(test_tuple.asInstanceOf[Product].productElement(i).getClass != test_tuple.asInstanceOf[Product].productElement(0).getClass) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7h6op43g.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7h6op43g.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7h6op43g.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_final = tuple_type_list(1).split(\"\\\\]\")\n        val tuple_type_final = tuple_type_list_final(0)\n        val tuple_type_final_list = tuple_type_final.split(\",\")\n        val tuple_type_final_list_final = tuple_type_final_list.map(x => x.trim)\n        val tuple_type_final_list_final_set = tuple_type_final_list_final.toSet\n        if (tuple_type_final_list_final_set.size == 1) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3wwq37bp.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3wwq37bp.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3wwq37bp.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n        val first_type = tuple._1.getClass.getName\n        val second_type = tuple._2.getClass.getName\n        val third_type = tuple._3.getClass.getName\n        if (first_type == second_type && second_type == third_type) {\n            return true\n        } else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123599,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4t0isaba.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4t0isaba.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4t0isaba.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != temp) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp198cbl6y.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp198cbl6y.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp198cbl6y.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass.getName)\n        val test_tuple_list_type_set = test_tuple_list_type.toSet\n        if (test_tuple_list_type_set.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4nt5yg85.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4nt5yg85.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4nt5yg85.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.toString\n        }\n        for (i <- 0 until type_list.length - 1) {\n            if (type_list(i) != type_list(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjdr4buh_.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjdr4buh_.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjdr4buh_.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_split = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_split_2 = test_tuple_type_split(1).split(\"\\\\]\")\n        val test_tuple_type_split_3 = test_tuple_type_split_2(0).split(\",\")\n        val test_tuple_type_split_4 = test_tuple_type_split_3.map(x => x.trim)\n        val test_tuple_type_split_5 = test_tuple_type_split_4.map(x => x.split(\"\\\\.\")(1))\n        val test_tuple_type_split_6 = test_tuple_type_split_5.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_split_7 = test_tuple_type_split_6.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_split_8 = test_tuple_type_split_7.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_split_9 = test_tuple_type_split_8.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_split_10 = test_tuple_type_split_9.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_split_11 = test_tuple_type_split_10.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_split_12 = test_tuple_type_split_11.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_split_13 = test_tuple_type_split_12.map(x => x.split(\"\\\\$\")(0))\n        val test_tuple_type_split_14 = test_tuple_type_split_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7z7sphb_.scala:20:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_split_14\u001b[0m = test_tuple_type_split_\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: test_tuple_type_split_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7z7sphb_.scala:21:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7z7sphb_.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7z7sphb_.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7z7sphb_.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != data_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123528,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type == \"scala.Tuple2\") {\n            val t = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n            if (t._1.getClass.getName == t._2.getClass.getName) true\n            else false\n        }\n        else if (tuple_type == \"scala.Tuple3\") {\n            val t = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n            if (t._1.getClass.getName == t._2.getClass.getName && t._1.getClass.getName == t._3.getClass.getName) true\n            else false\n        }\n        else if (tuple_type == \"scala.Tuple4\") {\n            val t = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n            if (t._1.getClass.getName == t._2.getClass.getName && t._1.getClass.getName == t._3.getClass.getName && t._1.getClass.getName == t._4.getClass.getName) true\n            else false\n        }\n        else if (tuple_type == \"scala.Tuple5\") {\n            val t = test_tuple.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n            if (t._1.getClass.getName == t._2.getClass.getName && t._1.getClass.getName == t._3.getClass.getName && t._1.getClass.getName == t._4.getClass.getName && t._1.getClass.getName == t._5.getClass.getName) true\n            else false\n        }\n        else if (tuple_type == \"scala.Tuple6\") {\n            val t = test_tuple.asInstanceOf[Tuple6[Any, Any, Any, Any, Any, Any]]\n            if (t._1.getClass.getName == t._2.getClass.getName\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz5tg2dnt.scala:30:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz5tg2dnt.scala:38:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5tg2dnt.scala:32:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5tg2dnt.scala:33:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz5tg2dnt.scala:34:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz5tg2dnt.scala:37:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpz5tg2dnt.scala:31:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m31 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var first_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != first_type) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzcbq3f6l.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzcbq3f6l.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzcbq3f6l.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            val tuple_elements = test_tuple.asInstanceOf[Product].productIterator\n            var element_type = tuple_elements.next.getClass.getName\n            for (i <- 1 until tuple_length) {\n                if (element_type != tuple_elements.next.getClass.getName) {\n                    return false\n                }\n            }\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc0gzm6ik.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc0gzm6ik.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc0gzm6ik.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            var i = 0\n            var flag = true\n            while (i < tuple_length) {\n                val element_type = test_tuple.asInstanceOf[Product].productElement(i).getClass.getName\n                if (element_type != tuple_type) {\n                    flag = false\n                }\n                i += 1\n            }\n            flag\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4m0fkira.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4m0fkira.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4m0fkira.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        for (i <- type_list.indices) {\n            if (type_list(i) != type_list(0)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwlgbm1v.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwlgbm1v.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjwlgbm1v.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_split = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_split_2 = test_tuple_type_split(1).split(\"\\\\]\")\n        val test_tuple_type_final = test_tuple_type_split_2(0)\n        val test_tuple_type_final_split = test_tuple_type_final.split(\"\\\\.\")\n        val test_tuple_type_final_split_2 = test_tuple_type_final_split(1)\n        if (test_tuple_type_final_split_2 == \"Int\") {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123600,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexyj4v1u.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexyj4v1u.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpexyj4v1u.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")(1).split(\"\\\\]\")(0).split(\",\")\n        val tuple_type_set = tuple_type_list.toSet\n        if (tuple_type_set.size == 1) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6qdzz8wt.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6qdzz8wt.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6qdzz8wt.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_length = test_tuple_type_list.length\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_length - 1)\n        val test_tuple_type_list_last_list = test_tuple_type_list_last.split(\"\\\\]\")\n        val test_tuple_type_list_last_list_first = test_tuple_type_list_last_list(0)\n        val test_tuple_type_list_last_list_first_list = test_tuple_type_list_last_list_first.split(\"\\\\.\")\n        val test_tuple_type_list_last_list_first_list_length = test_tuple_type_list_last_list_first_list.length\n        val test_tuple_type_list_last_list_first_list_last = test_tuple_type_list_last_list_first_list(test_tuple_type_list_last_list_first_list_length - 1)\n        val test_tuple_type_list_last_list_first_list_last_list = test_tuple_type_list_last_list_first_list_last.split(\"\\\\$\")\n        val test_tuple_type_list_last_list_first_list_last_list_length = test_tuple_type_list_last_list_first_list_last_list.length\n        val test_tuple_type_list_last_list_first_list_last_list_last = test_tuple_type_list_last_list_first_list_last_list(test_tuple_type_list_last_list_first_list_last_list_length - 1)\n        val test_tuple_type_list_last_list_first_list_last_list_last_list = test_tuple_type_list\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123605,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjemq00uy.scala:19:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjemq00uy.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjemq00uy.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjemq00uy.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        while (i < test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != test_tuple.asInstanceOf[Product].productElement(0).getClass) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123605,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd2fz3ew6.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd2fz3ew6.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd2fz3ew6.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_array = tuple_type.split(\"\\\\[\")\n        val tuple_type_array_size = tuple_type_array.size\n        if (tuple_type_array_size == 1) {\n            return true\n        }\n        else {\n            val tuple_type_array_last = tuple_type_array(tuple_type_array_size - 1)\n            val tuple_type_array_last_array = tuple_type_array_last.split(\"\\\\]\")\n            val tuple_type_array_last_array_size = tuple_type_array_last_array.size\n            if (tuple_type_array_last_array_size == 1) {\n                return true\n            }\n            else {\n                val tuple_type_array_last_array_last = tuple_type_array_last_array(tuple_type_array_last_array_size - 1)\n                val tuple_type_array_last_array_last_array = tuple_type_array_last_array_last.split(\"\\\\$\")\n                val tuple_type_array_last_array_last_array_size = tuple_type_array_last_array_last_array.size\n                if (tuple_type_array_last_array_last_array_size == 1) {\n                    return true\n                }\n                else {\n                    val tuple_type_array_last_array_last_array_last = tuple_type_array_last_array_last_array(tuple_type_array_last_array_last_array_size - 1)\n                    val tuple_type_array_last_array_last_array_last_array = tuple_type_array_last_array_last_array_last.split(\"\\\\.\")\n                    val tuple_type_array_last_array_last_array_last_array_size = tuple_type_array_last_array_last_array_last_array.size\n                    if (tuple_type_array_last_array_last_array_last_array_size == 1) {\n                        return true\n                    }\n                    else {\n                        val tuple\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcenz6zu7.scala:35:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcenz6zu7.scala:43:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcenz6zu7.scala:37:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcenz6zu7.scala:38:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcenz6zu7.scala:39:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcenz6zu7.scala:42:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpcenz6zu7.scala:36:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m36 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            val tuple_elements = test_tuple.asInstanceOf[Product].productIterator\n            val tuple_element_types = new ArrayBuffer[String]\n            for (i <- 0 until tuple_length) {\n                tuple_element_types += tuple_elements.next.getClass.getName\n            }\n            if (tuple_element_types.distinct.length == 1) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy_mnb3qo.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy_mnb3qo.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy_mnb3qo.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => {\n                if (a.getClass == b.getClass) true\n                else false\n            }\n            case (a, b, c) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass) true\n                else false\n            }\n            case (a, b, c, d) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass) true\n                else false\n            }\n            case (a, b, c, d, e) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass) true\n                else false\n            }\n            case (a, b, c, d, e, f) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass) true\n                else false\n            }\n            case (a, b, c, d, e, f, g) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass) true\n                else false\n            }\n            case (a, b, c, d, e, f, g, h) => {\n                if (a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass) true\n                else false\n            }\n            case (a, b, c, d, e, f, g, h, i) => {\n                if (\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123524,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpv_fvi2k6.scala:36:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv_fvi2k6.scala:45:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_fvi2k6.scala:39:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_fvi2k6.scala:40:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv_fvi2k6.scala:41:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv_fvi2k6.scala:42:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling w",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        if (test_tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_size - 1)\n            val test_tuple_type_list_last_list = test_tuple_type_list_last.split(\"\\\\]\")\n            val test_tuple_type_list_last_list_size = test_tuple_type_list_last_list.size\n            if (test_tuple_type_list_last_list_size == 1) {\n                return true\n            }\n            else {\n                val test_tuple_type_list_last_list_last = test_tuple_type_list_last_list(test_tuple_type_list_last_list_size - 1)\n                if (test_tuple_type_list_last_list_last == \"\") {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5gd18ae.scala:31:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5gd18ae.scala:32:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5gd18ae.scala:33:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val t = test_tuple.asInstanceOf[Product]\n        val types = t.productIterator.toList.map(_.getClass)\n        types.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123607,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi9q1w0mi.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi9q1w0mi.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi9q1w0mi.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_size = test_tuple.asInstanceOf[Product].productArity\n            var flag = true\n            for (i <- 0 until tuple_size) {\n                if (test_tuple.productElement(i).getClass.getName != test_tuple.productElement(0).getClass.getName) {\n                    flag = false\n                    return flag\n                }\n            }\n            return flag\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123615,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjl8vvvg8.scala:11:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != test_tuple.productElement(\u001b[31m0\u001b[0m).getClass.getName) {\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl8vvvg8.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl8vvvg8.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl8vvvg8.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && a.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass && a.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass && a.getClass == f.getClass && a.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass && a.getClass == f.getClass && a.getClass == g.getClass && a.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass && a.getClass == f.getClass && a.getClass == g.getClass && a.getClass == h.getClass && a.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj7o8pq1c.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj7o8pq1c.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7o8pq1c.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7o8pq1c.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7o8pq1c.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj7o8pq1c.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpj7o8pq1c.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123556,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo16ivh3z.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo16ivh3z.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo16ivh3z.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        for(i <- 0 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if(test_tuple.asInstanceOf[Product].productElement(i).getClass != test_tuple.asInstanceOf[Product].productElement(0).getClass) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123601,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7h6op43g.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7h6op43g.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7h6op43g.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n            val tuple_type_list = tuple_list.map(x => x.getClass.getName)\n            val tuple_type_set = tuple_type_list.toSet\n            if (tuple_type_set.size == 1) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123612,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpscgqa81i.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpscgqa81i.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpscgqa81i.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_length = tuple_type_list_last_last.length\n        val tuple_type_list_last_last_last = tuple_type_list_last_last.substring(0, tuple_type_list_last_last_length - 1)\n        val tuple_type_list_last_last_last_length = tuple_type_list_last_last_last.length\n        val tuple_type_list_last_last_last_last = tuple_type_list_last_last_last.substring(0, tuple_type_list_last_last_last_length - 1)\n        val tuple_type_list_last_last_last_last_length = tuple_type_list_last_last_last_last.length\n        val tuple_type_list_last_last_last_last_last = tuple_type_list_last_last_last_last.substring(0, tuple_type_list_last_last_last_last_length - 1)\n        val tuple_type_list_last_last_last_last_last_length = tuple_type_list_last_last_last_last_last.length\n        val tuple_type_list_last_last_last_last_last_last = tuple_type_list_last_last_last_last_last.substring(0, tuple_type_list_last_last_last_last_last_length - 1)\n        val tuple_type_list_last_last_last_last_last_last_length = tuple_type_list_last_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123603,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmayynin1.scala:20:67 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_type_list_last_last_last_last_last_last_length\u001b[0m = tuple_type_list_last_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Not found: tuple_type_list_last_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmayynin1.scala:21:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmayynin1.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmayynin1.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmayynin1.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_last_list_length - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123490,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxw5afw5.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxw5afw5.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyxw5afw5.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var type_set = Set[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_set += i.getClass.getName\n        }\n        return type_set.size == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123611,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpno1rnsta.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpno1rnsta.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpno1rnsta.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_array = tuple_type.split(\"\\\\[\")\n        val tuple_type_array_length = tuple_type_array.length\n        val tuple_type_array_last = tuple_type_array(tuple_type_array_length - 1)\n        val tuple_type_array_last_array = tuple_type_array_last.split(\"\\\\]\")\n        val tuple_type_array_last_array_first = tuple_type_array_last_array(0)\n        val tuple_type_array_last_array_first_array = tuple_type_array_last_array_first.split(\",\")\n        val tuple_type_array_last_array_first_array_length = tuple_type_array_last_array_first_array.length\n        val tuple_type_array_last_array_first_array_first = tuple_type_array_last_array_first_array(0)\n        var flag = true\n        for (i <- 0 until tuple_type_array_last_array_first_array_length) {\n            if (tuple_type_array_last_array_first_array_first != tuple_type_array_last_array_first_array(i)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdvq9gtcr.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdvq9gtcr.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdvq9gtcr.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5jpg_ju8.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var data_type = test_tuple.getClass.getName\n        for (i <- 0 to test_tuple.productArity - 1) {\n            if (test_tuple.productElement(i).getClass.getName != data_type) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxc27w7tb.scala:8:34 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to test_tuple.productArity - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxc27w7tb.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != data_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxc27w7tb.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxc27w7tb.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxc27w7tb.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var type_list = List[String]()\n        for (i <- 0 to test_tuple.productArity - 1) {\n            type_list = type_list :+ test_tuple.productElement(i).getClass.getName\n        }\n        type_list.foreach(x => if (x != type_list(0)) flag = false)\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpph3d1513.scala:9:34 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to test_tuple.productArity - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpph3d1513.scala:10:48 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            type_list = type_list :+ test_tuple.productElement(i).getClass.getName\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpph3d1513.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpph3d1513.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpph3d1513.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.String\", \"java.lang.Double\")\n        if (tuple_type_list.contains(tuple_type)) {\n            true\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd1hz3nfx.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd1hz3nfx.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd1hz3nfx.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var type_list = List[Any]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = i.getClass :: type_list\n        }\n        for (i <- type_list) {\n            if (i != type_list(0)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123613,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjtu9xwg8.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjtu9xwg8.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjtu9xwg8.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first = test_tuple.getClass.getTypeName\n        for(i <- 0 to test_tuple.productArity - 1) {\n            if(test_tuple.productElement(i).getClass.getTypeName != type_of_first) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbj0d02y2.scala:8:33 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m to test_tuple.productArity - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbj0d02y2.scala:9:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m(test_tuple.productElement(i).getClass.getTypeName != type_of_first) {\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbj0d02y2.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbj0d02y2.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbj0d02y2.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        var check = true\n        for (i <- 0 until tuple_type_list_last_last_list_length - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                check = false\n            }\n        }\n        return check\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppehgramm.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppehgramm.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppehgramm.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_last_list = tuple_type_list_last_last.split(\",\")\n        val tuple_type_list_last_last_list_length = tuple_type_list_last_last_list.length\n        var flag = true\n        for (i <- 0 until tuple_type_list_last_last_list_length - 1) {\n            if (tuple_type_list_last_last_list(i) != tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510560,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm3smv0ur.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm3smv0ur.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm3smv0ur.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        var flag = true\n        for (i <- 1 until tuple_type_list_size) {\n            if (tuple_type_list(i) != tuple_type_list(i-1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123614,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv8yhoahi.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv8yhoahi.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv8yhoahi.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- 0 until test_tuple.productArity) {\n            type_list = type_list :+ test_tuple.productElement(i).getClass.getName\n        }\n        for (i <- 0 until type_list.length - 1) {\n            if (type_list(i) != type_list(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123622,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqpwerjvp.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqpwerjvp.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            type_list = type_list :+ test_tuple.productElement(i).getClass.getName\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqpwerjvp.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqpwerjvp.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqpwerjvp.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        for(i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if(test_tuple.asInstanceOf[Product].productElement(i).getClass != test_tuple.asInstanceOf[Product].productElement(0).getClass) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123616,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4mpbi4rq.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4mpbi4rq.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4mpbi4rq.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != data_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123618,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9bby1vw.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9bby1vw.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj9bby1vw.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_type = test_tuple_list.map(x => x.getClass)\n        val test_tuple_type_set = test_tuple_type.toSet\n        if (test_tuple_type_set.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl_yu2zs.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl_yu2zs.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjl_yu2zs.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        for(i <- 0 until test_tuple.productArity) {\n            if(test_tuple.productElement(i).getClass != test_tuple.productElement(0).getClass) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd17pkmhw.scala:7:36 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mfor\u001b[0m(i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd17pkmhw.scala:8:26 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m            \u001b[33mif\u001b[0m(test_tuple.productElement(i).getClass != test_tuple.productElement(\u001b[31m0\u001b[0m).getClass) {\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m               value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd17pkmhw.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd17pkmhw.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd17pkmhw.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        type_list.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123524,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp12r1mq50.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_trim = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_trim_list = tuple_type_list_last_trim.split(\",\")\n        val tuple_type_list_last_trim_list_length = tuple_type_list_last_trim_list.length\n        val tuple_type_list_last_trim_list_first = tuple_type_list_last_trim_list(0)\n        for (i <- 1 to tuple_type_list_last_trim_list_length - 1) {\n            if (tuple_type_list_last_trim_list_first != tuple_type_list_last_trim_list(i)) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123619,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs1sqmat.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs1sqmat.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgs1sqmat.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 to tuple_type_list_length - 1) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp76ytw5dv.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp76ytw5dv.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp76ytw5dv.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_length = tuple_type.length\n        val tuple_type_length_minus_1 = tuple_type_length - 1\n        val tuple_type_length_minus_2 = tuple_type_length - 2\n        val tuple_type_length_minus_3 = tuple_type_length - 3\n        val tuple_type_length_minus_4 = tuple_type_length - 4\n        val tuple_type_length_minus_5 = tuple_type_length - 5\n        val tuple_type_length_minus_6 = tuple_type_length - 6\n        val tuple_type_length_minus_7 = tuple_type_length - 7\n        val tuple_type_length_minus_8 = tuple_type_length - 8\n        val tuple_type_length_minus_9 = tuple_type_length - 9\n        val tuple_type_length_minus_10 = tuple_type_length - 10\n        val tuple_type_length_minus_11 = tuple_type_length - 11\n        val tuple_type_length_minus_12 = tuple_type_length - 12\n        val tuple_type_length_minus_13 = tuple_type_length - 13\n        val tuple_type_length_minus_14 = tuple_type_length - 14\n        val tuple_type_length_minus_15 = tuple_type_length - 15\n        val tuple_type_length_minus_16 = tuple_type_length - 16\n        val tuple_type_length_minus_17 = tuple_type_length - 17\n        val tuple_type_length_minus_18 = tuple_type_length - 18\n        val tuple_type_length_minus_19 = tuple_type_length - 19\n        val tuple_type_length_minus_20 = tuple_type_length - 20\n        val tuple_type_length_minus_21 = tuple_type_length - 21\n        val tuple_type_length_minus_22 = tuple_type_length - 22\n        val tuple_type_length_minus_23 = tuple_type_length - 23\n        val tuple_type_length_minus_24 = tuple_type_length - 24\n\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123626,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbwz82kq.scala:33:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqbwz82kq.scala:35:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqbwz82kq.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqbwz82kq.scala:37:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n            val tuple_type_list = tuple_list.map(x => x.getClass.getName)\n            val tuple_type_set = tuple_type_list.toSet\n            if (tuple_type_set.size == 1) {\n                true\n            } else {\n                false\n            }\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpia0a17gx.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpia0a17gx.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpia0a17gx.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x : Int, y : Int, z : Int) => true\n            case (x : Double, y : Double, z : Double) => true\n            case (x : String, y : String, z : String) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123516,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ai3m18p.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ai3m18p.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_ai3m18p.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510559,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh5uxma3.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh5uxma3.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnh5uxma3.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass)\n        val test_tuple_list_type_set = test_tuple_list_type.toSet\n        if (test_tuple_list_type_set.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxpacjq_.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxpacjq_.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaxpacjq_.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        while (i < test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass != test_tuple.productElement(0).getClass) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123565,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpczm2vq_8.scala:8:30 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mwhile\u001b[0m (i < test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpczm2vq_8.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass != test_tuple.productElement(\u001b[31m0\u001b[0m).getClass) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczm2vq_8.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczm2vq_8.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpczm2vq_8.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- 0 until test_tuple.productArity) {\n            type_list = type_list :+ test_tuple.productElement(i).getClass.toString\n        }\n        for (i <- 0 until type_list.length - 1) {\n            if (type_list(i) != type_list(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpblcktnbe.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpblcktnbe.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            type_list = type_list :+ test_tuple.productElement(i).getClass.toString\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                               value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpblcktnbe.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpblcktnbe.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpblcktnbe.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && a.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass && a.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass && a.getClass == f.getClass && a.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass && a.getClass == f.getClass && a.getClass == g.getClass && a.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && a.getClass == c.getClass && a.getClass == d.getClass && a.getClass == e.getClass && a.getClass == f.getClass && a.getClass == g.getClass && a.getClass == h.getClass && a.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123620,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj7o8pq1c.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj7o8pq1c.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7o8pq1c.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7o8pq1c.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj7o8pq1c.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj7o8pq1c.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpj7o8pq1c.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first_element = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first_element) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123515,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphkp0j3nb.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphkp0j3nb.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphkp0j3nb.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var first_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (first_type != test_tuple.asInstanceOf[Product].productElement(i).getClass) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp681b5jyg.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp681b5jyg.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp681b5jyg.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpodjqmls6.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, w) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass\n            case (x, y, z, w, v) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass\n            case (x, y, z, w, v, u) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass && v.getClass == u.getClass\n            case (x, y, z, w, v, u, t) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass && v.getClass == u.getClass && u.getClass == t.getClass\n            case (x, y, z, w, v, u, t, s) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass && v.getClass == u.getClass && u.getClass == t.getClass && t.getClass == s.getClass\n            case (x, y, z, w, v, u, t, s, r) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass && v.getClass == u.getClass && u.getClass == t.getClass && t.getClass == s.getClass && s.getClass == r.getClass\n            case (x, y, z, w, v, u, t, s, r, q)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123633,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfw7oozky.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfw7oozky.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw7oozky.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw7oozky.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw7oozky.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfw7oozky.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpfw7oozky.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.toString\n        }\n        for (i <- type_list) {\n            if (i != type_list(0)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123624,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpekhw2vkr.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpekhw2vkr.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpekhw2vkr.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if(tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            var i = 0\n            var type_check = true\n            while(i < tuple_length) {\n                val element_type = test_tuple.asInstanceOf[Product].productElement(i).getClass.getName\n                if(element_type != tuple_type) {\n                    type_check = false\n                    return type_check\n                }\n                i += 1\n            }\n            return type_check\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123626,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp057en_6c.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp057en_6c.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp057en_6c.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x : Int, y : Int, z : Int) => true\n            case (x : Double, y : Double, z : Double) => true\n            case (x : String, y : String, z : String) => true\n            case (x : Char, y : Char, z : Char) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123625,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwev5zq8b.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwev5zq8b.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwev5zq8b.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => {\n                if (x.getClass == y.getClass) true\n                else false\n            }\n            case (x, y, z) => {\n                if (x.getClass == y.getClass && x.getClass == z.getClass) true\n                else false\n            }\n            case (x, y, z, a) => {\n                if (x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass) true\n                else false\n            }\n            case (x, y, z, a, b) => {\n                if (x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c) => {\n                if (x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d) => {\n                if (x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass && x.getClass == d.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d, e) => {\n                if (x.getClass == y.getClass && x.getClass == z.getClass && x.getClass == a.getClass && x.getClass == b.getClass && x.getClass == c.getClass && x.getClass == d.getClass && x.getClass == e.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d, e, f) => {\n                if (\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123633,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp2t34jk1_.scala:36:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2t34jk1_.scala:45:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t34jk1_.scala:39:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t34jk1_.scala:40:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2t34jk1_.scala:41:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t34jk1_.scala:42:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling w",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => {\n                if (x.getClass == y.getClass) true\n                else false\n            }\n            case (x, y, z) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass) true\n                else false\n            }\n            case (x, y, z, a) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass) true\n                else false\n            }\n            case (x, y, z, a, b) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d, e) => {\n                if (x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass) true\n                else false\n            }\n            case (x, y, z, a, b, c, d, e, f) => {\n                if (\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123522,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpwt1p5sm9.scala:36:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m                \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwt1p5sm9.scala:45:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt1p5sm9.scala:39:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt1p5sm9.scala:40:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwt1p5sm9.scala:41:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwt1p5sm9.scala:42:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling w",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i-1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16e0rvwc.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16e0rvwc.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp16e0rvwc.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_length = test_tuple_type_list.length\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_length - 1)\n        val test_tuple_type_list_last_length = test_tuple_type_list_last.length\n        val test_tuple_type_list_last_last = test_tuple_type_list_last.substring(0, test_tuple_type_list_last_length - 1)\n        val test_tuple_type_list_last_last_list = test_tuple_type_list_last_last.split(\",\")\n        val test_tuple_type_list_last_last_list_length = test_tuple_type_list_last_last_list.length\n        var flag = true\n        for (i <- 0 until test_tuple_type_list_last_last_list_length - 1) {\n            if (test_tuple_type_list_last_last_list(i) != test_tuple_type_list_last_last_list(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3os9jn96.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3os9jn96.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3os9jn96.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        for (i <- type_list) {\n            if (i != type_list(0)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmx0q01wa.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmx0q01wa.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmx0q01wa.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        val test_tuple_type_list_size_minus_one = test_tuple_type_list_size - 1\n        val test_tuple_type_list_size_minus_two = test_tuple_type_list_size - 2\n        val test_tuple_type_list_size_minus_three = test_tuple_type_list_size - 3\n        val test_tuple_type_list_size_minus_four = test_tuple_type_list_size - 4\n        if (test_tuple_type_list_size == 2) {\n            if (test_tuple_type_list(test_tuple_type_list_size_minus_one) == \"Ljava.lang.String;\") {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (test_tuple_type_list_size == 3) {\n            if (test_tuple_type_list(test_tuple_type_list_size_minus_one) == \"Ljava.lang.String;\") {\n                return true\n            }\n            else if (test_tuple_type_list(test_tuple_type_list_size_minus_two) == \"Ljava.lang.String;\") {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (test_tuple_type_list_size == 4) {\n            if (test_tuple_type_list(test_tuple_type_list_size_minus_one) == \"Ljava.lang.String;\") {\n                return true\n            }\n            else if (test_tuple_type_list(test_tuple_type_list_size_minus_two) == \"Ljava.lang.String;\") {\n                return true\n            }\n            else if (test_t\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123636,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw997_529.scala:40:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw997_529.scala:48:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw997_529.scala:39:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m            \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (test_t\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: test_t\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw997_529.scala:42:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw997_529.scala:43:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw997_529.scala:44:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw997_529.scala:47:1 ---------------------\u001b[0m\u001b[0m\n\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => {\n                if (x.getClass == y.getClass) true\n                else false\n            }\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp94z_52oc.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val type_list = tuple_list.map(x => x.getClass)\n        val type_set = type_list.toSet\n        if (type_set.size == 1) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8dnor4i5.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8dnor4i5.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8dnor4i5.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var prev_type = test_tuple.asInstanceOf[Product].productElement(i).getClass\n        for(i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if(test_tuple.asInstanceOf[Product].productElement(i).getClass != prev_type) {\n                flag = false\n                return flag\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123633,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpva6emkv2.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpva6emkv2.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpva6emkv2.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_size - 1)\n        val test_tuple_type_list_last_split = test_tuple_type_list_last.split(\"\\\\]\")\n        val test_tuple_type_list_last_split_first = test_tuple_type_list_last_split(0)\n        val test_tuple_type_list_last_split_first_split = test_tuple_type_list_last_split_first.split(\"\\\\.\")\n        val test_tuple_type_list_last_split_first_split_last = test_tuple_type_list_last_split_first_split(test_tuple_type_list_last_split_first_split.size - 1)\n        val test_tuple_type_list_last_split_first_split_last_split = test_tuple_type_list_last_split_first_split_last.split(\"\\\\$\")\n        val test_tuple_type_list_last_split_first_split_last_split_last = test_tuple_type_list_last_split_first_split_last_split(test_tuple_type_list_last_split_first_split_last_split.size - 1)\n        val test_tuple_type_list_last_split_first_split_last_split_last_split = test_tuple_type_list_last_split_first_split_last_split_last.split(\"\\\\@\")\n        val test_tuple_type_list_last_split_first_split_last_split_last_split_last = test_tuple_type_list_last_split_first_split_last_split_last_split(test_tuple_type_list_last_split_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123637,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7n444biw.scala:18:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7n444biw.scala:17:151 -----------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_list_last_split_first_split_last_split_last_split_last\u001b[0m = test_tuple_type_list_last_split_first_split_last_split_last_split(test_tuple_type_list_last_split_\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: test_tuple_type_list_last_split_\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7n444biw.scala:18:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7n444biw.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7n444biw.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_length = test_tuple_type_list.length\n        if (test_tuple_type_list_length == 1) {\n            return true\n        }\n        else {\n            val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_length - 1)\n            val test_tuple_type_list_last_split = test_tuple_type_list_last.split(\"\\\\]\")\n            val test_tuple_type_list_last_split_first = test_tuple_type_list_last_split(0)\n            if (test_tuple_type_list_last_split_first == \"Ljava.lang.Object;\") {\n                return false\n            }\n            else {\n                return true\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3jidwi_z.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3jidwi_z.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3jidwi_z.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_split = tuple_type.split(\"\\\\[\")\n        val tuple_type_final = tuple_type_split(1).split(\"\\\\]\")(0)\n        if (tuple_type_final == \"Ljava.lang.Object;\") {\n            return false\n        }\n        else {\n            return true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123631,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6xhc96ja.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6xhc96ja.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6xhc96ja.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\", \"java.lang.Boolean\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb8zlr43p.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb8zlr43p.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb8zlr43p.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var first_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != first_type) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123571,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2etd0_3t.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2etd0_3t.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2etd0_3t.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            var flag = true\n            for (i <- 0 until tuple_length) {\n                if (test_tuple.productElement(i).getClass.getName != test_tuple.productElement(0).getClass.getName) {\n                    flag = false\n                }\n            }\n            flag\n        } else {\n            false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123638,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4hd2_715.scala:11:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != test_tuple.productElement(\u001b[31m0\u001b[0m).getClass.getName) {\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hd2_715.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hd2_715.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4hd2_715.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        var result = true\n        for (i <- 1 until tuple_type_list_size) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123633,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw0r1mbge.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw0r1mbge.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw0r1mbge.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_split = tuple_type.split(\"\\\\[\")\n        val tuple_type_final = tuple_type_split(1).split(\"\\\\]\")(0)\n        if (tuple_type_final.contains(\"String\")) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123632,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmcbvtzdz.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmcbvtzdz.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmcbvtzdz.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        while (i < test_tuple.productArity && flag) {\n            if (test_tuple.productElement(i).getClass != test_tuple.productElement(0).getClass) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm9fufndg.scala:8:30 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mwhile\u001b[0m (i < test_tuple.productArity && flag) {\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                   value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm9fufndg.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass != test_tuple.productElement(\u001b[31m0\u001b[0m).getClass) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm9fufndg.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm9fufndg.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm9fufndg.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        if (test_tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val test_tuple_type_list_1 = test_tuple_type_list(1).split(\"\\\\]\")\n            val test_tuple_type_list_1_size = test_tuple_type_list_1.size\n            if (test_tuple_type_list_1_size == 1) {\n                return true\n            }\n            else {\n                val test_tuple_type_list_1_0 = test_tuple_type_list_1(0)\n                val test_tuple_type_list_1_0_list = test_tuple_type_list_1_0.split(\"\\\\.\")\n                val test_tuple_type_list_1_0_list_size = test_tuple_type_list_1_0_list.size\n                if (test_tuple_type_list_1_0_list_size == 1) {\n                    return true\n                }\n                else {\n                    val test_tuple_type_list_1_0_list_1 = test_tuple_type_list_1_0_list(1)\n                    val test_tuple_type_list_1_0_list_1_list = test_tuple_type_list_1_0_list_1.split(\"\\\\$\")\n                    val test_tuple_type_list_1_0_list_1_list_size = test_tuple_type_list_1_0_list_1_list.size\n                    if (test_tuple_type_list_1_0_list_1_list_size == 1) {\n                        return true\n                    }\n                    else {\n                        val test_tuple_type_list_1_0_list_1_list_1 = test_t\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123642,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8nzeendf.scala:42:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8nzeendf.scala:33:69 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m                        \u001b[33mval\u001b[0m \u001b[36mtest_tuple_type_list_1_0_list_1_list_1\u001b[0m = test_t\n\u001b[31m\u001b[31m   |\u001b[0m                                                                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                       Not found: test_t\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8nzeendf.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8nzeendf.scala:37:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8nzeendf.scala:38:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8nzeendf.scala:41:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, w) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass\n            case (x, y, z, w, v) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass\n            case (x, y, z, w, v, u) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass && v.getClass == u.getClass\n            case (x, y, z, w, v, u, t) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass && v.getClass == u.getClass && u.getClass == t.getClass\n            case (x, y, z, w, v, u, t, s) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass && v.getClass == u.getClass && u.getClass == t.getClass && t.getClass == s.getClass\n            case (x, y, z, w, v, u, t, s, r) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == w.getClass && w.getClass == v.getClass && v.getClass == u.getClass && u.getClass == t.getClass && t.getClass == s.getClass && s.getClass == r.getClass\n            case (x, y, z, w, v, u, t, s, r, q)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123633,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfw7oozky.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfw7oozky.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw7oozky.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw7oozky.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfw7oozky.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfw7oozky.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpfw7oozky.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var prev_type = test_tuple.asInstanceOf[Product].productElement(i).getClass.getName\n        while(i < test_tuple.productArity) {\n            if(test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != prev_type) {\n                flag = false\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2khj65fh.scala:9:29 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mwhile\u001b[0m(i < test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                  value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2khj65fh.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2khj65fh.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2khj65fh.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_array = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_array_length = test_tuple_type_array.length\n        val test_tuple_type_array_last_element = test_tuple_type_array(test_tuple_type_array_length - 1)\n        val test_tuple_type_array_last_element_length = test_tuple_type_array_last_element.length\n        val test_tuple_type_array_last_element_last_character = test_tuple_type_array_last_element(test_tuple_type_array_last_element_length - 1)\n        if (test_tuple_type_array_last_element_last_character == ']') {\n            val test_tuple_type_array_last_element_without_last_character = test_tuple_type_array_last_element.substring(0, test_tuple_type_array_last_element_length - 1)\n            val test_tuple_type_array_last_element_without_last_character_length = test_tuple_type_array_last_element_without_last_character.length\n            val test_tuple_type_array_last_element_without_last_character_last_character = test_tuple_type_array_last_element_without_last_character(test_tuple_type_array_last_element_without_last_character_length - 1)\n            if (test_tuple_type_array_last_element_without_last_character_last_character == '$') {\n                val test_tuple_type_array_last_element_without_last_character_without_last_character = test_tuple_type_array_last_element_without_last_character.substring(0, test_tuple_type_array_last_element_without_last_character_length - 1)\n                val test_tuple_type_array_last_element_without_last_character_without_\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123639,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1543cldk.scala:19:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1543cldk.scala:27:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1543cldk.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1543cldk.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1543cldk.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp1543cldk.scala:20:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m20 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_size = test_tuple.productArity\n        var flag = true\n        for (i <- 0 until tuple_size) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj62kpvn1.scala:7:36 -------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_size\u001b[0m = test_tuple.productArity\n\u001b[31m\u001b[31m  |\u001b[0m                         ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                         value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj62kpvn1.scala:10:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj62kpvn1.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj62kpvn1.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj62kpvn1.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getSimpleName\n        if (tuple_type == \"Tuple1\") {\n            return true\n        }\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        val tuple_array = test_tuple.asInstanceOf[Product].productIterator.toArray\n        for (i <- 0 until tuple_length) {\n            if (tuple_array(i).getClass.getSimpleName != tuple_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123640,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1mo76ac.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1mo76ac.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu1mo76ac.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (x, y) => x.getClass == y.getClass\n            case (x, y, z) => x.getClass == y.getClass && y.getClass == z.getClass\n            case (x, y, z, a) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass\n            case (x, y, z, a, b) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass\n            case (x, y, z, a, b, c) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass\n            case (x, y, z, a, b, c, d) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (x, y, z, a, b, c, d, e) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (x, y, z, a, b, c, d, e, f) => x.getClass == y.getClass && y.getClass == z.getClass && z.getClass == a.getClass && a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (x, y, z, a, b, c, d, e, f, g)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123495,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp68gb_sps.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp68gb_sps.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp68gb_sps.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp68gb_sps.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName.split(\"\\\\.\").last\n        if (tuple_type == \"Tuple1\") {\n            return true\n        }\n        val tuple_length = test_tuple.productArity\n        val tuple_elements = test_tuple.productIterator\n        var type_list = List[String]()\n        for (i <- 0 until tuple_length) {\n            type_list = type_list :+ tuple_elements.next.getClass.getName.split(\"\\\\.\").last\n        }\n        val type_set = type_list.toSet\n        if (type_set.size == 1) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_2qiffka.scala:10:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_length\u001b[0m = test_tuple.productArity\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_2qiffka.scala:11:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtuple_elements\u001b[0m = test_tuple.productIterator\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            value productIterator is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2qiffka.scala:23:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2qiffka.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2qiffka.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val type_list = tuple_list.map(x => x.getClass)\n        val unique_type_list = type_list.distinct\n        if (unique_type_list.length == 1) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123642,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv85mwdlg.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv85mwdlg.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpv85mwdlg.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag : Boolean = true\n        var first_type : String = test_tuple.getClass.getSimpleName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getSimpleName != first_type) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123648,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7cqna8wj.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7cqna8wj.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getSimpleName != first_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7cqna8wj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7cqna8wj.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7cqna8wj.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123642,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcziewy2e.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcziewy2e.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcziewy2e.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var test_type = test_tuple.asInstanceOf[Product].productElement(0).getClass.toString\n        while (i < test_tuple.asInstanceOf[Product].productArity && flag) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.toString != test_type) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123643,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptq18dgp8.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptq18dgp8.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptq18dgp8.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510552,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvvmwl7pj.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val first_type = test_tuple.getClass.getName\n        val test_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        test_list.forall(x => x.getClass.getName == first_type)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2s5kg3g.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2s5kg3g.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_2s5kg3g.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_size = tuple_type_list.size\n        if (tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val tuple_type_list_last = tuple_type_list(tuple_type_list_size - 1)\n            val tuple_type_list_last_list = tuple_type_list_last.split(\"\\\\]\")\n            val tuple_type_list_last_list_size = tuple_type_list_last_list.size\n            if (tuple_type_list_last_list_size == 1) {\n                return true\n            }\n            else {\n                val tuple_type_list_last_list_last = tuple_type_list_last_list(tuple_type_list_last_list_size - 1)\n                if (tuple_type_list_last_list_last == \"\") {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptd_qbuob.scala:31:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptd_qbuob.scala:32:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptd_qbuob.scala:33:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n        val type_list = List(tuple._1.getClass.getName, tuple._2.getClass.getName, tuple._3.getClass.getName)\n        return type_list.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsw_qh15a.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsw_qh15a.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsw_qh15a.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var data_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 0 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != data_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123528,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmfnqfr3u.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_name = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getName != type_name) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123652,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnk5x_t0p.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnk5x_t0p.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != type_name) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk5x_t0p.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk5x_t0p.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk5x_t0p.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass)\n        val test_tuple_list_type_set = test_tuple_list_type.toSet\n        return test_tuple_list_type_set.size == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_lc3j8ck.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_lc3j8ck.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_lc3j8ck.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val first_type = test_tuple.getClass.getName\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass.getName != first_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123645,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqeo_9t5.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqeo_9t5.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeqeo_9t5.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_list = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_list_size = test_tuple_type_list.size\n        if (test_tuple_type_list_size == 1) {\n            return true\n        }\n        else {\n            val test_tuple_type_list_last = test_tuple_type_list(test_tuple_type_list_size - 1)\n            val test_tuple_type_list_last_list = test_tuple_type_list_last.split(\"\\\\]\")\n            val test_tuple_type_list_last_list_size = test_tuple_type_list_last_list.size\n            if (test_tuple_type_list_last_list_size == 1) {\n                return true\n            }\n            else {\n                val test_tuple_type_list_last_list_last = test_tuple_type_list_last_list(test_tuple_type_list_last_list_size - 1)\n                if (test_tuple_type_list_last_list_last == \"\") {\n                    return true\n                }\n                else {\n                    return false\n                }\n            }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123606,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5gd18ae.scala:31:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5gd18ae.scala:32:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo5gd18ae.scala:33:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productIterator.next.getClass\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            if (i.getClass != temp) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123539,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr7g__x1k.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_length - 1)\n        val tuple_type_list_last_length = tuple_type_list_last.length\n        val tuple_type_list_last_new = tuple_type_list_last.substring(0, tuple_type_list_last_length - 1)\n        val tuple_type_list_last_new_list = tuple_type_list_last_new.split(\",\")\n        val tuple_type_list_last_new_list_length = tuple_type_list_last_new_list.length\n        val tuple_type_list_last_new_list_first = tuple_type_list_last_new_list(0)\n        var flag = true\n        for (i <- 1 to tuple_type_list_last_new_list_length - 1) {\n            if (tuple_type_list_last_new_list(i) != tuple_type_list_last_new_list_first) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123646,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmre34a_0.scala:24:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmre34a_0.scala:25:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmre34a_0.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val t = test_tuple.asInstanceOf[Product]\n        val types = t.productIterator.toList.map(x => x.getClass)\n        types.distinct.size == 1\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizcfr6cp.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizcfr6cp.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpizcfr6cp.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_of_first_element = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 to test_tuple.asInstanceOf[Product].productArity - 1) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != type_of_first_element) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123647,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdqucnkl1.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdqucnkl1.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdqucnkl1.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_len = tuple_type_list.length\n        val tuple_type_list_last = tuple_type_list(tuple_type_list_len - 1)\n        val tuple_type_list_last_len = tuple_type_list_last.length\n        val tuple_type_list_last_last = tuple_type_list_last.substring(0, tuple_type_list_last_len - 1)\n        if (tuple_type_list_last_last == \"java.lang.String\") {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123649,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm0_bb63n.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm0_bb63n.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm0_bb63n.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_tuple_list_type = test_tuple_list.map(x => x.getClass)\n        val test_tuple_list_type_set = test_tuple_list_type.toSet\n        if (test_tuple_list_type_set.size == 1) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1f6hnmoi.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1f6hnmoi.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1f6hnmoi.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n                return flag\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8015_tpq.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8015_tpq.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8015_tpq.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type.contains(\"Tuple\")) {\n            val tuple_length = test_tuple.asInstanceOf[Product].productArity\n            val tuple_elements = test_tuple.asInstanceOf[Product].productIterator\n            var element_type = tuple_elements.next.getClass.getName\n            for (i <- 1 until tuple_length) {\n                if (element_type != tuple_elements.next.getClass.getName) return false\n            }\n            return true\n        }\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcjaeq57p.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcjaeq57p.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcjaeq57p.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        var flag = true\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i - 1)) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123588,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllk4irkv.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllk4irkv.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpllk4irkv.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var result = true\n        var first_type = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        for (i <- 1 until test_tuple.asInstanceOf[Product].productArity) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass != first_type) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123602,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzcbq3f6l.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzcbq3f6l.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzcbq3f6l.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_1 = tuple_type_list(1).split(\"\\\\]\")\n        val tuple_type_list_2 = tuple_type_list_1(0).split(\",\")\n        val tuple_type_list_3 = tuple_type_list_2.map(x => x.trim)\n        val tuple_type_list_4 = tuple_type_list_3.map(x => x.split(\"\\\\.\"))\n        val tuple_type_list_5 = tuple_type_list_4.map(x => x(x.length - 1))\n        val tuple_type_list_6 = tuple_type_list_5.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_7 = tuple_type_list_6.map(x => x(x.length - 1))\n        val tuple_type_list_8 = tuple_type_list_7.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_9 = tuple_type_list_8.map(x => x(x.length - 1))\n        val tuple_type_list_10 = tuple_type_list_9.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_11 = tuple_type_list_10.map(x => x(x.length - 1))\n        val tuple_type_list_12 = tuple_type_list_11.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_13 = tuple_type_list_12.map(x => x(x.length - 1))\n        val tuple_type_list_14 = tuple_type_list_13.map(x => x.split(\"\\\\$\"))\n        val tuple_type_list_15 = tuple_type_list_14.map(x => x(x.length - 1))\n        val tuple_type_list_16 = tuple_type_list_15.map(x => x.split(\"\\\\$\"))\n        val tuple\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510554,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnk43fgw9.scala:25:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnk43fgw9.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk43fgw9.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk43fgw9.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnk43fgw9.scala:29:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.String\", \"java.lang.Integer\", \"java.lang.Double\", \"java.lang.Boolean\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        else {\n            return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123652,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1t9d_zx.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1t9d_zx.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj1t9d_zx.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        val tuple_type = test_tuple.getClass.getName\n        for (i <- 0 until test_tuple.productArity) {\n            if (test_tuple.productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123523,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpotrgvu9l.scala:8:37 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until test_tuple.productArity) {\n\u001b[31m\u001b[31m  |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                          value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpotrgvu9l.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != tuple_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpotrgvu9l.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpotrgvu9l.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpotrgvu9l.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123651,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7pzwwajr.scala:11:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7pzwwajr.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7pzwwajr.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_array = tuple_type.split(\"\\\\[\")\n        val tuple_type_array_length = tuple_type_array.length\n        if (tuple_type_array_length == 1) {\n            return true\n        }\n        else {\n            val tuple_type_array_last = tuple_type_array(tuple_type_array_length - 1)\n            val tuple_type_array_last_array = tuple_type_array_last.split(\"\\\\]\")\n            val tuple_type_array_last_array_first = tuple_type_array_last_array(0)\n            val tuple_type_array_last_array_first_array = tuple_type_array_last_array_first.split(\"\\\\.\")\n            val tuple_type_array_last_array_first_array_length = tuple_type_array_last_array_first_array.length\n            val tuple_type_array_last_array_first_array_last = tuple_type_array_last_array_first_array(tuple_type_array_last_array_first_array_length - 1)\n            val tuple_type_array_last_array_first_array_last_array = tuple_type_array_last_array_first_array_last.split(\"\\\\$\")\n            val tuple_type_array_last_array_first_array_last_array_length = tuple_type_array_last_array_first_array_last_array.length\n            val tuple_type_array_last_array_first_array_last_array_last = tuple_type_array_last_array_first_array_last_array(tuple_type_array_last_array_first_array_last_array_length - 1)\n            val tuple_type_array_last_array_first_array_last_array_last_array = tuple_type_array_last_array_first_array_last_array_last.split(\"\\\\$\")\n            val tuple_type_array_last_array_first_array_last_array_last_array_length = tuple_type_array_last\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp56id9qap.scala:32:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp56id9qap.scala:26:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp56id9qap.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp56id9qap.scala:28:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp56id9qap.scala:31:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp56id9qap.scala:25:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m25 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = tuple_type.split(\"\\\\[\")\n        val tuple_type_list_length = tuple_type_list.length\n        if (tuple_type_list_length == 1) {\n            return true\n        }\n        for (i <- 1 until tuple_type_list_length) {\n            if (tuple_type_list(i) != tuple_type_list(i-1)) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6kstn99.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6kstn99.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn6kstn99.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var i = 0\n        var type_ref = test_tuple.asInstanceOf[Product].productElement(0).getClass\n        while (i < test_tuple.asInstanceOf[Product].productArity && flag) {\n            if (type_ref != test_tuple.asInstanceOf[Product].productElement(i).getClass) {\n                flag = false\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123653,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnemkl7r4.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnemkl7r4.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnemkl7r4.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_list = test_tuple.asInstanceOf[Product].productIterator.toList\n        val test_type = test_list(0).getClass\n        for (i <- test_list) {\n            if (i.getClass != test_type) {\n                return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123575,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfashtx_c.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfashtx_c.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfashtx_c.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        if (test_tuple_type == \"scala.Tuple2\") {\n            val t1 = test_tuple.asInstanceOf[Tuple2[Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            if (t1_type == t2_type) true\n            else false\n        }\n        else if (test_tuple_type == \"scala.Tuple3\") {\n            val t1 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            val t3_type = t1._3.getClass.getName\n            if (t1_type == t2_type && t2_type == t3_type) true\n            else false\n        }\n        else if (test_tuple_type == \"scala.Tuple4\") {\n            val t1 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            val t3_type = t1._3.getClass.getName\n            val t4_type = t1._4.getClass.getName\n            if (t1_type == t2_type && t2_type == t3_type && t3_type == t4_type) true\n            else false\n        }\n        else if (test_tuple_type == \"scala.Tuple5\") {\n            val t1 = test_tuple.asInstanceOf[Tuple5[Any, Any, Any, Any, Any]]\n            val t1_type = t1._1.getClass.getName\n            val t2_type = t1._2.getClass.getName\n            val t3_type = t1._\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123656,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpegotda31.scala:35:29 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mt3_type\u001b[0m = t1._\n\u001b[31m\u001b[31m   |\u001b[0m                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                             an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpegotda31.scala:44:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpegotda31.scala:38:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpegotda31.scala:39:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpegotda31.scala:40:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpegotda31.scala:43:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxawhipa0.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        if (tuple_type == \"scala.Tuple2\") {\n            val tuple_type_1 = test_tuple.asInstanceOf[Tuple2[Any, Any]]._1.getClass.getName\n            val tuple_type_2 = test_tuple.asInstanceOf[Tuple2[Any, Any]]._2.getClass.getName\n            if (tuple_type_1 == tuple_type_2) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (tuple_type == \"scala.Tuple3\") {\n            val tuple_type_1 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._1.getClass.getName\n            val tuple_type_2 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._2.getClass.getName\n            val tuple_type_3 = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]._3.getClass.getName\n            if (tuple_type_1 == tuple_type_2 && tuple_type_2 == tuple_type_3) {\n                return true\n            }\n            else {\n                return false\n            }\n        }\n        else if (tuple_type == \"scala.Tuple4\") {\n            val tuple_type_1 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._1.getClass.getName\n            val tuple_type_2 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._2.getClass.getName\n            val tuple_type_3 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._3.getClass.getName\n            val tuple_type_4 = test_tuple.asInstanceOf[Tuple4[Any, Any, Any, Any]]._4.getClass.getName\n            if (tuple_type_1 == tuple\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123656,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdsvw_4yo.scala:34:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdsvw_4yo.scala:42:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdsvw_4yo.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m            \u001b[33mif\u001b[0m (tuple_type_1 == tuple\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: tuple\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdsvw_4yo.scala:36:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdsvw_4yo.scala:37:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdsvw_4yo.scala:38:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsvw_4yo.scala:41:1 ----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_name = tuple_type.substring(tuple_type.indexOf(\"[\") + 1, tuple_type.indexOf(\";\"))\n        val tuple_type_name_short = tuple_type_name.substring(tuple_type_name.lastIndexOf(\".\") + 1)\n        val tuple_type_name_short_short = tuple_type_name_short.substring(0, 1).toLowerCase + tuple_type_name_short.substring(1)\n        val tuple_type_name_short_short_short = tuple_type_name_short_short.substring(0, tuple_type_name_short_short.length - 1)\n        val tuple_type_name_short_short_short_short = tuple_type_name_short_short_short.substring(0, 1).toUpperCase + tuple_type_name_short_short_short.substring(1)\n        val tuple_type_name_short_short_short_short_short = tuple_type_name_short_short_short_short + \"s\"\n        val tuple_type_name_short_short_short_short_short_short = tuple_type_name_short_short_short_short_short.substring(0, 1).toLowerCase + tuple_type_name_short_short_short_short_short.substring(1)\n        val tuple_type_name_short_short_short_short_short_short_short = tuple_type_name_short_short_short_short_short_short.substring(0, tuple_type_name_short_short_short_short_short_short.length - 1)\n        val tuple_type_name_short_short_short_short_short_short_short_short = tuple_type_name_short_short_short_short_short_short_short.substring(0, 1).toUpperCase + tuple_type_name_short_short_short_short_short_short_short.substring(1)\n        val tuple_type_name_short_short_short_short_short_short\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123656,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphthe48ry.scala:17:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphthe48ry.scala:17:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphthe48ry.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphthe48ry.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphthe48ry.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var type_list = List[String]()\n        for (i <- test_tuple.asInstanceOf[Product].productIterator) {\n            type_list = type_list :+ i.getClass.getName\n        }\n        for (i <- type_list) {\n            if (i != type_list(0)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123628,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmx0q01wa.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmx0q01wa.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmx0q01wa.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple = test_tuple.asInstanceOf[Tuple3[Any, Any, Any]]\n        if (tuple._1.isInstanceOf[Int] && tuple._2.isInstanceOf[Int] && tuple._3.isInstanceOf[Int])\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123586,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjb3cuojn.scala:13:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjb3cuojn.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjb3cuojn.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_type_list = List(\"java.lang.Integer\", \"java.lang.Double\", \"java.lang.String\", \"java.lang.Boolean\")\n        if (tuple_type_list.contains(tuple_type)) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123654,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjxnasvcd.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjxnasvcd.scala:15:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjxnasvcd.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var temp = test_tuple.asInstanceOf[Product].productIterator.toList\n        var temp_type = temp(0).getClass\n        for (i <- 1 until temp.length) {\n            if (temp(i).getClass != temp_type) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcp7jdca_.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcp7jdca_.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcp7jdca_.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        test_tuple match {\n            case (a, b) => a.getClass == b.getClass\n            case (a, b, c) => a.getClass == b.getClass && b.getClass == c.getClass\n            case (a, b, c, d) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass\n            case (a, b, c, d, e) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass\n            case (a, b, c, d, e, f) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass\n            case (a, b, c, d, e, f, g) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass\n            case (a, b, c, d, e, f, g, h) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass\n            case (a, b, c, d, e, f, g, h, i) => a.getClass == b.getClass && b.getClass == c.getClass && c.getClass == d.getClass && d.getClass == e.getClass && e.getClass == f.getClass && f.getClass == g.getClass && g.getClass == h.getClass && h.getClass == i.getClass\n            case (a, b, c, d, e, f, g, h, i, j)\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510561,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:16:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=>' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf0q_ucq7.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf0q_ucq7.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf0q_ucq7.scala:23:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpf0q_ucq7.scala:17:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m17 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        var flag = true\n        var prev_type = test_tuple.getClass.getName\n        for (i <- 0 to test_tuple.productArity - 1) {\n            if (test_tuple.productElement(i).getClass.getName != prev_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123656,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn8yvgekp.scala:8:34 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m to test_tuple.productArity - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m  |\u001b[0m                       ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                       value productArity is not a member of Any\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn8yvgekp.scala:9:27 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            \u001b[33mif\u001b[0m (test_tuple.productElement(i).getClass.getName != prev_type) {\n\u001b[31m\u001b[31m  |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                value productElement is not a member of Any\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn8yvgekp.scala:16:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn8yvgekp.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpn8yvgekp.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val test_tuple_type = test_tuple.getClass.getName\n        val test_tuple_type_split = test_tuple_type.split(\"\\\\[\")\n        val test_tuple_type_split_2 = test_tuple_type_split(1).split(\"\\\\]\")\n        val test_tuple_type_split_3 = test_tuple_type_split_2(0).split(\",\")\n        var flag = true\n        for (i <- 0 until test_tuple_type_split_3.length) {\n            if (test_tuple_type_split_3(i) != test_tuple_type_split_3(0)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123655,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpguwp0668.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpguwp0668.scala:20:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpguwp0668.scala:21:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if all the elements in tuple have same data type or not.\n    def checkType(test_tuple : Any) : Boolean = {\n        val tuple_type = test_tuple.getClass.getName\n        val tuple_length = test_tuple.asInstanceOf[Product].productArity\n        var flag = true\n        for (i <- 0 until tuple_length) {\n            if (test_tuple.asInstanceOf[Product].productElement(i).getClass.getName != tuple_type) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(checkType((Any((5l, 6l, 7l, 3l, 5l, 6l)))) == (true));\n    assert(checkType((Any((1l, 2l, \"4\")))) == (false));\n    assert(checkType((Any((3l, 2l, 1l, 4l, 5l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(checkType((Any((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(checkType((Any((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m\"4\"\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpsbg8gbez.scala:19:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(checkType((Any((\u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m1l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: Any\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
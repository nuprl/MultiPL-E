{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n    def isSumOfPowersOfTwo(n : Long) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(isSumOfPowersOfTwo((10l)) == (true));\n    assert(isSumOfPowersOfTwo((7l)) == (false));\n    assert(isSumOfPowersOfTwo((14l)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var nn = n\n        var i = 0\n        while (nn > 0) {\n            if (nn % 2 == 1) {\n                nn -= pow(2, i).toLong\n                if (nn < 0) return false\n            }\n            i += 1\n            nn /= 2\n        }\n        return true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        true",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var x = n\n        while (x > 0) {\n            if ((x & (x - 1)) == 0) return true\n            x -= 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            var k = (log(m) / log(2)).toInt\n            if (m == pow(2, k).toLong) return true\n            m -= pow(2, k).toLong\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (n - pow(2, i).toLong == 0) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        false",
    "        if (n == 0) return true\n        var x = n\n        while (x % 2 == 0) {\n            x /= 2\n        }\n        if (x == 1) return true\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 0) x /= 2\n            else if (x == 1) return true\n            else return false\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        return true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var i = 0\n        var nn = n\n        while (nn > 0) {\n            if (nn % 2 == 1) {\n                nn -= pow(2, i).toLong\n                if (nn < 0) return false\n            }\n            i += 1\n            nn /= 2\n        }\n        return true",
    "        var i = 0\n        var sum = 0L\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        return sum == n",
    "        var x = n\n        while (x > 0) {\n            val y = x & (x - 1)\n            if (y == 0) return true\n            x = y\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (m == 1) return true\n                else return false\n            }\n            m /= 2\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 != 0) return false\n            x /= 2\n        }\n        return true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            x /= 2\n            i += 1\n        }\n        return true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if ((x & 1) == 1) {\n                x -= 1\n            }\n            x >>= 1\n        }\n        x == 0",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        sum == n",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            x /= 2\n            i += 1\n        }\n        true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        if (n == 0) return false\n        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                x -= 1\n                if (x == 0) return true\n            }\n            x /= 2\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        return sum == n",
    "        val powers = ArrayBuffer[Long]()\n        var power = 1\n        while (power <= n) {\n            powers += power\n            power *= 2\n        }\n        powers.reverse.foreach(p => {\n            if (n - p >= 0) {\n                if (isSumOfPowersOfTwo(n - p)) return true\n            }\n        })\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 != 0) return false\n            x /= 2\n        }\n        return true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var k = n\n        var i = 0\n        while (k > 0) {\n            if (k % 2 == 1) {\n                val m = k - pow(2, i).toLong\n                if (m == 0) return true\n                if (isSumOfPowersOfTwo(m)) return true\n            }\n            k /= 2\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 0) {\n                m /= 2\n            } else {\n                m -= 1\n            }\n        }\n        m == 0",
    "        if (n == 0) return false\n        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                x -= 1\n                if (x == 0) return true\n            }\n            x /= 2\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                var k = (log(m) / log(2)).toInt\n                m -= pow(2, k).toLong\n            } else {\n                m /= 2\n            }\n        }\n        return m == 0",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 0) {\n                x /= 2\n            } else {\n                x -= 1\n            }\n        }\n        return x == 0",
    "        var s = new Stack[Long]\n        var i = 0\n        while (pow(2, i) <= n) {\n            s.push(pow(2, i).toLong)\n            i += 1\n        }\n        var sum = 0L\n        while (!s.isEmpty) {\n            val x = s.pop\n            if (sum + x == n) return true\n            else if (sum + x < n) sum += x\n        }\n        return false",
    "        var i = 0\n        while (n > 0) {\n            if (n % 2 == 1) {\n                if (i == 0) return false\n                n -= pow(2, i).toLong\n            }\n            i += 1\n        }\n        return n == 0",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1 && x != 1) return false\n            x /= 2\n        }\n        return true",
    "        if (n == 0) return false\n        var m = n\n        while (m != 0) {\n            if (m % 2 == 1) return false\n            m /= 2\n        }\n        return true",
    "        var x = n\n        var y = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (y == 0) return false\n                x -= pow(2, y).toLong\n                y = 0\n            } else {\n                x /= 2\n                y += 1\n            }\n        }\n        return x == 0",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 0) {\n                m /= 2\n            } else {\n                m -= 1\n            }\n        }\n        return m == 0",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        if (n == 0) return true\n        var i = 0\n        while (i < n) {\n            if (isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var num = n\n        var i = 0\n        while (num > 0) {\n            if (num % 2 == 1) {\n                if (num == 1) return true\n                else return false\n            }\n            num /= 2\n        }\n        return false",
    "        if (n == 0) return false\n        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) return false\n            m /= 2\n        }\n        return true",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 0) {\n                x /= 2\n            } else {\n                x -= 1\n            }\n        }\n        return x == 0",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n            }\n            else {\n                m /= 2\n            }\n        }\n        return m == 0",
    "        var i = 0\n        var sum = 0L\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 0) {\n                x /= 2\n            } else {\n                if (x == 1) return true\n                else return false\n            }\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                x -= 1\n                if (x == 0) return true\n            }\n            x /= 2\n        }\n        return false",
    "        var i = 0\n        var sum = 0L\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var k = n\n        while (k > 0) {\n            val m = k & -k\n            if (m == k) return true\n            k -= m\n        }\n        false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n                if (m == 0) return true\n            }\n            m /= 2\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 0) {\n                m /= 2\n            } else {\n                m -= 1\n            }\n        }\n        return m == 0",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong == 0) return true\n                else return isSumOfPowersOfTwo(n - pow(2, i).toLong)\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var i = 0\n        var sum = 0L\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 0) {\n                x /= 2\n            } else {\n                if (x == 1) return true\n                else return false\n            }\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        return true",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            x /= 2\n            i += 1\n        }\n        return true",
    "        var m = n\n        while (m > 0) {\n            var k = 0\n            while (m >= pow(2, k).toLong) {\n                k += 1\n            }\n            k -= 1\n            m -= pow(2, k).toLong\n        }\n        return m == 0",
    "        var i = 0\n        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                val y = x - pow(2, i).toLong\n                if (y == 0) return true\n                if (isSumOfPowersOfTwo(y)) return true\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                val y = x - pow(2, i).toLong\n                if (y == 0) return true\n                if (isSumOfPowersOfTwo(y)) return true\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) return false\n            m /= 2\n        }\n        return true",
    "        if (n == 0) return false\n        var sum = 0\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        return sum == n",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if ((x & 1) == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            x >>= 1\n            i += 1\n        }\n        true",
    "        var num = n\n        var power = 0\n        while (num > 0) {\n            if (num % 2 == 1) return false\n            num /= 2\n            power += 1\n        }\n        return true",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n != pow(2, i).toLong) return false\n                else return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x == 1) return true\n            if (x % 2 == 0) x /= 2\n            else return false\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                x -= 1\n            }\n            x /= 2\n        }\n        return x == 0",
    "        var i = 0\n        while (pow(2, i) <= n) {\n            if (isSumOfPowersOfTwo(n, i)) return true\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        if (n == 0) return false\n        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n        }\n        return true",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (m == 1) return true\n                else return false\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n                if (m == 0) return true\n            }\n            m /= 2\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        return sum == n",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        if (n == 0) return false\n        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        if (n == 0) return false\n        var num = n\n        while (num > 0) {\n            if (num % 2 == 1) return false\n            num /= 2\n        }\n        return true",
    "        val powers = new HashSet[Long]\n        var i = 0\n        while (pow(2, i) <= n) {\n            powers.add(pow(2, i).toLong)\n            i += 1\n        }\n        def isSumOfPowersOfTwo(n : Long, powers : Set[Long]) : Boolean = {\n            if (n == 0) return true\n            if (powers.contains(n)) return true\n            var result = false\n            for (power <- powers) {\n                if (power > n) return false\n                result = result || isSumOfPowersOfTwo(n - power, powers)\n            }\n            result\n        }\n        isSumOfPowersOfTwo(n, powers)",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                val y = x - pow(2, i).toLong\n                if (y == 0) return true\n                if (isSumOfPowersOfTwo(y)) return true\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) return false\n            m /= 2\n        }\n        return true",
    "        var x = n\n        while (x > 0) {\n            var y = x\n            var p = 0\n            while (y > 0) {\n                if (y % 2 == 1) {\n                    if (x == n) return true\n                    else return false\n                }\n                y /= 2\n                p += 1\n            }\n            x -= pow(2, p).toLong\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n                if (m == 0) return true\n            }\n            m /= 2\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0) {\n                    if (!isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n                }\n            }\n            m /= 2\n            i += 1\n        }\n        return true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var nn = n\n        var i = 0\n        while (nn > 0) {\n            if (nn % 2 == 1) {\n                if (nn == 1) return true\n                else return false\n            }\n            nn /= 2\n            i += 1\n        }\n        false",
    "        var i = 0\n        var sum = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var i = 0\n        while (i < n) {\n            var j = 0\n            while (j < n) {\n                if (pow(2, i).toLong + pow(2, j).toLong == n) return true\n                j += 1\n            }\n            i += 1\n        }\n        false",
    "        var s = n\n        var i = 0\n        while (s > 0) {\n            s -= pow(2, i).toLong\n            if (s == 0) return true\n            i += 1\n        }\n        return false",
    "        if (n == 0) return false\n        var x = n\n        while (x != 0) {\n            if (x % 2 != 0) return false\n            x /= 2\n        }\n        return true",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 0) {\n                x /= 2\n            } else {\n                x -= 1\n            }\n        }\n        x == 0",
    "        var s = n\n        var i = 0\n        while (s > 0) {\n            if (s % 2 == 1) {\n                s -= pow(2, i).toLong\n                if (s < 0) return false\n            }\n            i += 1\n            s /= 2\n        }\n        return true",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n                if (m == 0) return true\n            }\n            m /= 2\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 0) {\n                x /= 2\n            } else {\n                x -= 1\n            }\n        }\n        x == 0",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n            }\n            else {\n                m /= 2\n            }\n        }\n        return m == 0",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        if (n == 0) return true\n        var i = 1\n        while (i <= n) {\n            if (n - i == 0) return true\n            if (isSumOfPowersOfTwo(n - i)) return true\n            i *= 2\n        }\n        return false",
    "        var i = 0\n        var temp = n\n        while (temp > 0) {\n            if (temp % 2 == 1) {\n                temp -= pow(2, i).toLong\n                if (temp == 0) return true\n            }\n            i += 1\n            temp /= 2\n        }\n        return false",
    "        val powers = ArrayBuffer[Long]()\n        var i = 0\n        while (pow(2, i).toLong <= n) {\n            powers += pow(2, i).toLong\n            i += 1\n        }\n        def isSumOfPowersOfTwo(n : Long, powers : ArrayBuffer[Long]) : Boolean = {\n            if (n == 0) return true\n            if (powers.isEmpty) return false\n            val p = powers.last\n            if (n < p) return isSumOfPowersOfTwo(n, powers.dropRight(1))\n            return isSumOfPowersOfTwo(n - p, powers) || isSumOfPowersOfTwo(n, powers.dropRight(1))\n        }\n        return isSumOfPowersOfTwo(n, powers)",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var i = 0\n        var sum = 0L\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 0) {\n                m /= 2\n            } else {\n                m -= 1\n            }\n        }\n        return m == 0",
    "        if (n == 0) return true\n        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (n - pow(2, i).toLong == 0) return true\n                else return isSumOfPowersOfTwo(n - pow(2, i).toLong)\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var k = n\n        while (k > 0) {\n            if (k % 2 == 1) {\n                k -= 1\n                if (k == 0) return true\n            }\n            k /= 2\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        return true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (n == pow(2, i).toLong) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var i = 0\n        var sum = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var i = 0\n        var sum = 0L\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n            }\n            else {\n                m /= 2\n            }\n        }\n        m == 0",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n            }\n            else {\n                m /= 2\n            }\n        }\n        return m == 0",
    "        var nn = n\n        var i = 0\n        while (nn > 0) {\n            if (nn % 2 == 1) {\n                if (nn == 1) return true\n                else return false\n            }\n            nn /= 2\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        return sum == n",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n                if (m == 0) return true\n            }\n            m /= 2\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n            } else {\n                m /= 2\n            }\n        }\n        m == 0",
    "        var i = 0\n        while (i < n) {\n            if (isPowerOfTwo(n - i)) return true\n            i += 1\n        }\n        false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var nn = n\n        while (nn > 0) {\n            if (nn % 2 == 1) return false\n            nn /= 2\n        }\n        return true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        return sum == n",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            x /= 2\n            i += 1\n        }\n        return true",
    "        var m = n\n        while (m > 0) {\n            val x = (log(m) / log(2)).toInt\n            if (m == pow(2, x).toLong) return true\n            m -= pow(2, x).toLong\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        return sum == n",
    "        if (n == 0) return false\n        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                val y = x - pow(2, i).toLong\n                if (y == 0) return true\n                if (isSumOfPowersOfTwo(y)) return true\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 0) {\n                m /= 2\n            } else {\n                m -= 1\n            }\n        }\n        return m == 0",
    "        var s = n\n        while (s > 0) {\n            val p = log(s) / log(2)\n            if (p == p.toInt) return true\n            s -= pow(2, p).toLong\n        }\n        return false",
    "        var i = 0\n        while (pow(2, i) <= n) {\n            if (isSumOfPowersOfTwo(n - pow(2, i).toLong, i + 1)) return true\n            i += 1\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                val y = x - pow(2, i).toLong\n                if (y == 0) return true\n                if (isSumOfPowersOfTwo(y)) return true\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        if (n == 0) return false\n        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n                if (m == 0) return true\n            }\n            m /= 2\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            var i = 1\n            while (i <= m) {\n                if (i == m) return true\n                i *= 2\n            }\n            m -= i / 2\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        return true",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n                if (m == 0) return true\n            }\n            m /= 2\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            val x = (log(m) / log(2)).toLong\n            if (m == pow(2, x).toLong) return true\n            m -= pow(2, x).toLong\n        }\n        false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong == 0) return true\n                else if (isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                val x = pow(2, i).toLong\n                if (x == n) return true\n                else if (isSumOfPowersOfTwo(n - x)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        val powers = new ArrayBuffer[Long]\n        var i = 0\n        while (pow(2, i) <= n) {\n            powers += pow(2, i).toLong\n            i += 1\n        }\n        def f(n : Long, powers : ArrayBuffer[Long]) : Boolean = {\n            if (n == 0) return true\n            if (n < 0) return false\n            for (i <- 0 until powers.length) {\n                if (f(n - powers(i), powers)) return true\n            }\n            return false\n        }\n        return f(n, powers)",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) return false\n            m /= 2\n        }\n        true",
    "        var n2 = n\n        var i = 0\n        while (n2 > 0) {\n            val t = n2 - pow(2, i).toLong\n            if (t == 0) return true\n            if (t > 0) {\n                n2 = t\n                i += 1\n            } else {\n                i += 1\n            }\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        return true",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                x -= 1\n                if (x == 0) return true\n            }\n            x /= 2\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 0) {\n                m /= 2\n            } else {\n                m -= 1\n            }\n        }\n        return m == 0",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong == 0) return true\n                else return false\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                val y = x - pow(2, i).toLong\n                if (y == 0) return true\n                if (isSumOfPowersOfTwo(y)) return true\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        var i = 0\n        while (x > 0) {\n            if (x % 2 == 1) {\n                if (x == 1) return true\n                else return false\n            }\n            x /= 2\n            i += 1\n        }\n        return false",
    "        if (n == 0) return false\n        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (m == 1) return true\n                else return false\n            }\n            m /= 2\n        }\n        return false",
    "        if (n == 0) return false\n        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var i = 0\n        var sum = 0L\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        if (sum == n) return true\n        else return false",
    "        var i = 0\n        var sum = 0L\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        if (sum == n) true else false",
    "        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                m -= 1\n                if (m == 0) return true\n            }\n            m /= 2\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong == 0) return true\n                else return false\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            val y = x & (x - 1)\n            if (y == 0) return true\n            x = y\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && !isSumOfPowersOfTwo(n - pow(2, i).toLong)) return false\n            }\n            m /= 2\n            i += 1\n        }\n        true",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        false",
    "        var i = 0\n        var m = n\n        while (m > 0) {\n            if (m % 2 == 1) {\n                val k = pow(2, i).toLong\n                if (k == n) return true\n                if (isSumOfPowersOfTwo(n - k)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        return sum == n",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        if (n == 0) return false\n        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) return false\n            x /= 2\n        }\n        return true",
    "        var m = n\n        while (m > 0) {\n            var k = 0\n            while (m - pow(2, k).toLong >= 0) {\n                if (m - pow(2, k).toLong == 0) return true\n                m -= pow(2, k).toLong\n                k += 1\n            }\n        }\n        return false",
    "        var m = n\n        while (m > 0) {\n            var x = m\n            var p = 0\n            while (x % 2 == 0) {\n                x /= 2\n                p += 1\n            }\n            if (x == 1) {\n                m -= pow(2, p).toLong\n            } else {\n                return false\n            }\n        }\n        return m == 0",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            if (sum == n) return true\n            i += 1\n        }\n        return false",
    "        var m = n\n        var i = 0\n        while (m > 0) {\n            if (m % 2 == 1) {\n                if (n - pow(2, i).toLong != 0 && isSumOfPowersOfTwo(n - pow(2, i).toLong)) return true\n            }\n            m /= 2\n            i += 1\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            var y = x\n            while (y % 2 == 0) {\n                y /= 2\n            }\n            if (y == 1) return true\n            x -= y\n        }\n        return false",
    "        var x = n\n        while (x > 0) {\n            if (x % 2 == 1) {\n                x -= 1\n                if (x == 0) return true\n            }\n            x /= 2\n        }\n        return false",
    "        var sum = 0L\n        var i = 0\n        while (sum < n) {\n            sum += pow(2, i).toLong\n            i += 1\n        }\n        sum == n"
  ]
}
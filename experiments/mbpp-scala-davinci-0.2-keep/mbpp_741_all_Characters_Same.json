{
  "name": "mbpp_741_all_Characters_Same",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to check whether all the characters are same or not.\n    def allCharactersSame(s : String) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_741_all_Characters_Same.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(allCharactersSame((\"python\")) == (false));\n    assert(allCharactersSame((\"aaa\")) == (true));\n    assert(allCharactersSame((\"data\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        s.toCharArray.distinct.length == 1",
    "        if (s.length == 0) return true\n        var c = s(0)\n        for (i <- 1 until s.length) {\n            if (s(i) != c) return false\n        }\n        return true",
    "        s.distinct.length == 1",
    "        s.forall(x => x == s.head)",
    "        for (i <- 0 until s.length - 1) {\n            if (s(i) != s(i + 1)) return false\n        }\n        return true",
    "        if (s.length == 0) return true\n        val first = s(0)\n        for (i <- 1 until s.length) {\n            if (s(i) != first) return false\n        }\n        return true",
    "        if (s.length == 1) return true\n        for (i <- 1 until s.length) {\n            if (s(i) != s(i - 1)) return false\n        }\n        return true",
    "        if (s.length == 0) return true\n        val first = s(0)\n        for (i <- 1 until s.length) {\n            if (s(i) != first) return false\n        }\n        return true",
    "        val firstChar = s.charAt(0)\n        s.forall(c => c == firstChar)",
    "        if (s.length == 0) return false\n        val c = s(0)\n        for (i <- 1 until s.length) {\n            if (s(i) != c) return false\n        }\n        return true",
    "        if (s.length == 0) return true\n        for (i <- 1 until s.length) {\n            if (s(i) != s(0)) return false\n        }\n        return true",
    "        var i = 0\n        while (i < s.length - 1) {\n            if (s(i) != s(i + 1)) return false\n            i += 1\n        }\n        return true",
    "        if (s.length == 0) return true\n        val c = s(0)\n        for (i <- 1 until s.length) if (s(i) != c) return false\n        true",
    "        val set = s.toSet\n        set.size == 1",
    "        if (s.length == 1) return true\n        if (s(0) != s(1)) return false\n        return allCharactersSame(s.substring(1))",
    "        s.toCharArray.distinct.length == 1",
    "        if (s.length == 0) return true\n        val first = s.head\n        s.forall(c => c == first)",
    "        if (s.length == 0) return true\n        var c = s(0)\n        for (i <- 1 until s.length) {\n            if (s(i) != c) return false\n        }\n        return true",
    "        if (s.length == 0) return true\n        var c = s(0)\n        for (i <- 1 until s.length) {\n            if (s(i) != c) return false\n        }\n        return true",
    "        s.length == 1 || (s.head == s.last && allCharactersSame(s.tail.init))"
  ]
}
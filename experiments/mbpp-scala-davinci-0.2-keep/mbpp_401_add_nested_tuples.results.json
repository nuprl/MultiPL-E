{
  "name": "mbpp_401_add_nested_tuples",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_401_add_nested_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var tup1_list = List[Long]()\n        var tup2_list = List[Long]()\n        while (tup1 != 0) {\n            tup1_list = (tup1 % 10) :: tup1_list\n            tup1 /= 10\n        }\n        while (tup2 != 0) {\n            tup2_list = (tup2 % 10) :: tup2_list\n            tup2 /= 10\n        }\n        for (i <- 0 until tup1_list.length) {\n            sum = sum * 10 + (tup1_list(i) + tup2_list(i))\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm_si0vfn.scala:25:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm_si0vfn.scala:25:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm_si0vfn.scala:26:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            result = result * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptitpo4v4.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptitpo4v4.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptitpo4v4.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpflw8su22.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpflw8su22.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpflw8su22.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_str = test_tup1.toString\n        var test_tup2_str = test_tup2.toString\n        var test_tup1_arr = test_tup1_str.toCharArray\n        var test_tup2_arr = test_tup2_str.toCharArray\n        var test_tup1_arr_len = test_tup1_arr.length\n        var test_tup2_arr_len = test_tup2_arr.length\n        var test_tup1_arr_len_half = test_tup1_arr_len / 2\n        var test_tup2_arr_len_half = test_tup2_arr_len / 2\n        var test_tup1_arr_len_half_str = test_tup1_arr_len_half.toString\n        var test_tup2_arr_len_half_str = test_tup2_arr_len_half.toString\n        var test_tup1_arr_len_half_str_arr = test_tup1_arr_len_half_str.toCharArray\n        var test_tup2_arr_len_half_str_arr = test_tup2_arr_len_half_str.toCharArray\n        var test_tup1_arr_len_half_str_arr_len = test_tup1_arr_len_half_str_arr.length\n        var test_tup2_arr_len_half_str_arr_len = test_tup2_arr_len_half_str_arr.length\n        var test_tup1_arr_len_half_str_arr_len_half = test_tup1_arr_len_half_str_arr_len / 2\n        var test_tup2_arr_len_half_str_arr_len_half = test_tup2_arr_len_half_str_arr_len / 2\n        var test_tup1_arr_len_half_str_arr_len_half_str = test_tup1_arr_len_half_str_arr\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi885ib6.scala:23:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi885ib6.scala:25:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi885ib6.scala:25:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmi885ib6.scala:26:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(addN",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpflw8su22.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpflw8su22.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpflw8su22.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:27 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0m), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7f9u32qo.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7f9u32qo.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7f9u32qo.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            result += (test_tup1.toString.charAt(i).toInt - '0'.toInt) + (test_tup2.toString.charAt(i).toInt - '0'.toInt)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ftmihfl.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ftmihfl.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8ftmihfl.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = tup1.zip(tup2).map(x => x._1 + x._2)\n        return tup3.product\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpfbb2n4u9.scala:8:38 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup3\u001b[0m = tup1.zip(tup2).map(\u001b[36mx\u001b[0m => x._1 + x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfbb2n4u9.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m tup3.product\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue product is not a member of (Nothing, Nothing, Nothing, Nothing, Nothing)\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfbb2n4u9.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfbb2n4u9.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                             ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            result = result + (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmx8y9ywi.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmx8y9ywi.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmx8y9ywi.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            sum += (test_tup1.toString.charAt(i).toString.toInt + test_tup2.toString.charAt(i).toString.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4h247utd.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4h247utd.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4h247utd.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = (21, 22, 23, 24, 25, 26, 27, 28, 29, 30)\n        val tup4 = (31, 32, 33, 34, 35, 36, 37, 38, 39, 40)\n        val tup5 = (41, 42, 43, 44, 45, 46, 47, 48, 49, 50)\n        val tup6 = (51, 52, 53, 54, 55, 56, 57, 58, 59, 60)\n        val tup7 = (61, 62, 63, 64, 65, 66, 67, 68, 69, 70)\n        val tup8 = (71, 72, 73, 74, 75, 76, 77, 78, 79, 80)\n        val tup9 = (81, 82, 83, 84, 85, 86, 87, 88, 89, 90)\n        val tup10 = (91, 92, 93, 94, 95, 96, 97, 98, 99, 100)\n        val tup11 = (101, 102, 103, 104, 105, 106, 107, 108, 109, 110)\n        val tup12 = (111, 112, 113, 114, 115, 116, 117, 118, 119, 120)\n        val tup13 = (121, 122, 123, 124, 125, 126, 127, 128, 129, 130)\n        val tup14 = (131, 132, 133, 134, 135, 136, 137, 138, 139, 140)\n        val tup15 = (141, 142, 143, 144, 145, 146, 147, 148, 149, 150)\n        val tup16 = (151, 152, 153, 154, 155, 156, 157, 158, 159, 160)\n        val tup17 = (161, 162, 163, 164, 165, 166, 167, 168, 169, 170)\n        val tup18 = (171, 172, 173, 174, 175, 176, 177, 178, 179, 180)\n        val tup19 = (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpmxrwk0vj.scala:24:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup19\u001b[0m = (\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxrwk0vj.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxrwk0vj.scala:27:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxrwk0vj.scala:27:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 != 0 || tup2 != 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_s_slcka.scala:19:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_s_slcka.scala:19:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_s_slcka.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Long] + x._2.asInstanceOf[Long]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcovo409r.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcovo409r.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcovo409r.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Long] + x._2.asInstanceOf[Long])\n        tup3.toList(test_tup1.toInt) + tup3.toList(test_tup2.toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5rrxm8ct.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5rrxm8ct.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5rrxm8ct.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqsawyif.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqsawyif.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqsawyif.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).toString.toInt + test_tup2.toString.charAt(i).toString.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyrw7rts.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyrw7rts.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyrw7rts.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var sum : Long = 0\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp56uyqv6g.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp56uyqv6g.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp56uyqv6g.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Long] + x._2.asInstanceOf[Long]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int])\n        tup3.productIterator.map(x => x.asInstanceOf[Int]).reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2x2ccst7.scala:9:13 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        tup3.productIterator.map(\u001b[36mx\u001b[0m => x.asInstanceOf[\u001b[35mInt\u001b[0m]).reduceLeft(_ + _)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        value productIterator is not a member of Iterator[Int]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2x2ccst7.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2x2ccst7.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2x2ccst7.scala:13:27 --------------------\u001b[0m\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1f2305fd.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1f2305fd.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1f2305fd.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int]).toList\n        return tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_05m4uwy.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_05m4uwy.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_05m4uwy.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:27 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0m), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while(tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5v1zl8b0.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5v1zl8b0.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5v1zl8b0.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs8x7oi_.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs8x7oi_.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs8x7oi_.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int])\n        tup3.productIterator.reduce(_.asInstanceOf[Int] * _.asInstanceOf[Int])\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3cnrpblz.scala:9:13 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        tup3.productIterator.reduce(_.asInstanceOf[\u001b[35mInt\u001b[0m] * _.asInstanceOf[\u001b[35mInt\u001b[0m])\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        value productIterator is not a member of Iterator[Int]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cnrpblz.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cnrpblz.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3cnrpblz.scala:13:27 --------------------\u001b[0m\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = (11, 12, 13, 14, 15)\n        val tup4 = (16, 17, 18, 19, 20)\n        val tup5 = (21, 22, 23, 24, 25)\n        val tup6 = (26, 27, 28, 29, 30)\n        val tup7 = (31, 32, 33, 34, 35)\n        val tup8 = (36, 37, 38, 39, 40)\n        val tup9 = (41, 42, 43, 44, 45)\n        val tup10 = (46, 47, 48, 49, 50)\n        val tup11 = (51, 52, 53, 54, 55)\n        val tup12 = (56, 57, 58, 59, 60)\n        val tup13 = (61, 62, 63, 64, 65)\n        val tup14 = (66, 67, 68, 69, 70)\n        val tup15 = (71, 72, 73, 74, 75)\n        val tup16 = (76, 77, 78, 79, 80)\n        val tup17 = (81, 82, 83, 84, 85)\n        val tup18 = (86, 87, 88, 89, 90)\n        val tup19 = (91, 92, 93, 94, 95)\n        val tup20 = (96, 97, 98, 99, 100)\n        val tup21 = (101, 102, 103, 104, 105)\n        val tup22 = (106, 107, 108, 109, 110)\n        val tup23 = (111, 112, 113, 114, 115)\n        val tup24 = (116, 117, 118, 119, 120)\n        val tup25 = (121, 122, 123, 124, 125)\n        val tup26 = (126, 127, 128, 129, 130)\n        val tup27 = (131, 132, 133, 134, 135)\n        val tup28 = (136, 137, 138, 139, 140)\n        val tup29 = (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpqf5ppdzo.scala:34:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup29\u001b[0m = (\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf5ppdzo.scala:35:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf5ppdzo.scala:37:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf5ppdzo.scala:37:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 && tup2 != 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbj2j31u.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbj2j31u.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbj2j31u.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var test_tup1_list = List[Long]()\n        var test_tup2_list = List[Long]()\n        var test_tup1_list_rev = List[Long]()\n        var test_tup2_list_rev = List[Long]()\n        var test_tup1_list_rev_str = \"\"\n        var test_tup2_list_rev_str = \"\"\n        var test_tup1_list_rev_int = 0\n        var test_tup2_list_rev_int = 0\n        var test_tup1_list_rev_int_str = \"\"\n        var test_tup2_list_rev_int_str = \"\"\n        var test_tup1_list_rev_int_str_rev = \"\"\n        var test_tup2_list_rev_int_str_rev = \"\"\n        var test_tup1_list_rev_int_str_rev_int = 0\n        var test_tup2_list_rev_int_str_rev_int = 0\n        var test_tup1_list_rev_int_str_rev_int_str = \"\"\n        var test_tup2_list_rev_int_str_rev_int_str = \"\"\n        var test_tup1_list_rev_int_str_rev_int_str_rev = \"\"\n        var test_tup2_list_rev_int_str_rev_int_str_rev = \"\"\n        var test_tup1_list_rev_int_str_rev_int_str_rev_int = 0\n        var test_tup2_list_rev_int_str_rev_int_str_rev_int = 0\n        var test_tup1_list_rev_int_str_rev_int_str_rev_int_str = \"\"\n        var test_tup2_list_rev_int_str_rev_int_str_rev_int_str = \"\"\n        var test_tup1_list_rev_int_str_rev_int_str_rev_int_str_rev = \"\"\n        var test_tup2_list_rev\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2zubkmui.scala:30:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2zubkmui.scala:30:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2zubkmui.scala:32:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2zubkmui.scala:32:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6)\n        val tup2 = (7, 8, 9, 10, 11, 12)\n        val tup3 = tup1.zip(tup2)\n        var sum = 0L\n        for (i <- 0 until tup3.length) {\n            sum += tup3(i)._1 + tup3(i)._2\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp267rthd5.scala:10:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until tup3.length) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue length is not a member of ((Int, Int), (Int, Int), (Int, Int), (Int, Int), (Int, Int), (Int, Int))\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp267rthd5.scala:11:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            sum += tup3(i)._1 + tup3(i)._2\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp267rthd5.scala:11:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            sum += tup3(i)._1 + tup3(i)._2\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue _1 is not a member of (i : Int)\u001b[33m match \u001b[0m{\n\u001b[31m   |\u001b[0m  case (\u001b[31m0\u001b[0m : Int) => (Int, Int)\n\u001b[31m   |\u001b[0m  case scala.compiletime.ops.int.S[n1] => \n\u001b[31m   |\u001b[0m    scala.Tuple.Elem[(Int, Int) *: (Int, Int) *: (Int, Int) *: (Int, Int) *: (\n\u001b[31m   |\u001b[0m      Int\n\u001b[31m   |\u001b[0m    , Int) *: EmptyTuple, n1]\n\u001b[31m   |\u001b[0m}\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp267rthd5.scala:16:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp267rthd5.scala:16:70 -----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.toList.map(_.toString.toLong)\n        val tup2 = test_tup2.toString.toList.map(_.toString.toLong)\n        val tup3 = tup1.zip(tup2).map(x => x._1 + x._2)\n        tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx_5pwvnz.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx_5pwvnz.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx_5pwvnz.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:27 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0m), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzj8lfbf9.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzj8lfbf9.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzj8lfbf9.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, 3))\n        val tup2 = (4, (5, 6))\n        val tup3 = (tup1._1 + tup2._1, (tup1._2._1 + tup2._2._1, tup1._2._2 + tup2._2._2))\n        tup3._1 + tup3._2._1 + tup3._2._2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1icpupx.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1icpupx.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv1icpupx.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var tup1_size = 0\n        var tup2_size = 0\n        while (tup1 > 0) {\n            tup1_size += 1\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            tup2_size += 1\n            tup2 /= 10\n        }\n        var tup1_arr = new Array[Int](tup1_size)\n        var tup2_arr = new Array[Int](tup2_size)\n        tup1 = test_tup1\n        tup2 = test_tup2\n        for (i <- 0 until tup1_size) {\n            tup1_arr(i) = (tup1 % 10).toInt\n            tup1 /= 10\n        }\n        for (i <- 0 until tup2_size) {\n            tup2_arr(i) = (tup2 % 10).toInt\n            tup2 /= 10\n        }\n        var tup_size = max(tup1_size, tup2_size)\n        var tup_arr = new Array[Int](tup_size)\n        for (i <- 0 until tup_size) {\n            if (i < tup1_size && i < tup2_size) tup_arr(i) = tup1_arr(i) + tup2_arr(i)\n            else if (i < tup1_size) tup_arr(i) = tup1_arr(i)\n            else tup_arr(i) = tup2_arr(i)\n        }\n        for (i <- 0 until tup_size) {\n            sum = sum * 10 + tup_arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfis2tkjn.scala:44:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfis2tkjn.scala:44:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfis2tkjn.scala:45:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122849,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppb2hdluc.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppb2hdluc.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppb2hdluc.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : List[Long] = List()\n        var tup2 : List[Long] = List()\n        var tup3 : List[Long] = List()\n        var tup4 : List[Long] = List()\n        var tup5 : List[Long] = List()\n        var tup6 : List[Long] = List()\n        var tup7 : List[Long] = List()\n        var tup8 : List[Long] = List()\n        var tup9 : List[Long] = List()\n        var tup10 : List[Long] = List()\n        var tup11 : List[Long] = List()\n        var tup12 : List[Long] = List()\n        var tup13 : List[Long] = List()\n        var tup14 : List[Long] = List()\n        var tup15 : List[Long] = List()\n        var tup16 : List[Long] = List()\n        var tup17 : List[Long] = List()\n        var tup18 : List[Long] = List()\n        var tup19 : List[Long] = List()\n        var tup20 : List[Long] = List()\n        var tup21 : List[Long] = List()\n        var tup22 : List[Long] = List()\n        var tup23 : List[Long] = List()\n        var tup24 : List[Long] = List()\n        var tup25 : List[Long] = List()\n        var tup26 : List[Long] = List()\n        var tup27 : List[Long] = List()\n        var tup28 : List[Long] = List()\n        var tup29 : List[Long] = List()\n        var tup30 : List[Long] = List()\n        var tup31 : List[Long] = List()\n        var tup32 : List[Long] = List()\n        var tup33 : List[Long] = List()\n        var tup34 : List[Long] = List()\n        var tup35 : List[Long] = List()\n        var tup36 : List[Long] = List()\n        var tup37 : List\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E056] Syntax Error: /tmp/tmpheye0mk8.scala:42:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mtup37\u001b[0m : \u001b[35mList\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Missing type parameter for List\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheye0mk8.scala:43:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheye0mk8.scala:45:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpheye0mk8.scala:45:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5la_61iv.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5la_61iv.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5la_61iv.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var power = 0\n        while (tup1 != 0 || tup2 != 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            sum += (digit1 + digit2) * pow(10, power).toLong\n            power += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf5jtffgr.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf5jtffgr.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf5jtffgr.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            result += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, i).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122896,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9pi3jwe3.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9pi3jwe3.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9pi3jwe3.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdcwd6fe.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdcwd6fe.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdcwd6fe.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.zip(tup2).map(x => x._1 + x._2)\n        tup3.product\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpau93hye6.scala:8:38 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup3\u001b[0m = tup1.zip(tup2).map(\u001b[36mx\u001b[0m => x._1 + x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpau93hye6.scala:9:13 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        tup3.product\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue product is not a member of (Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing\n\u001b[31m  |\u001b[0m  , \n\u001b[31m  |\u001b[0mNothing)\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpau93hye6.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpau93hye6.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        val tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        val tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        for (i <- 0 to tup1.length - 1) {\n            sum += tup1(i) + tup2(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdzckgp4.scala:15:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdzckgp4.scala:15:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqdzckgp4.scala:16:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplab5jsq7.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplab5jsq7.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplab5jsq7.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0uf3yyt.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0uf3yyt.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0uf3yyt.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Long] + x._2.asInstanceOf[Long]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7wy7e16n.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = (21, 22, 23, 24, 25, 26, 27, 28, 29, 30)\n        val tup4 = (31, 32, 33, 34, 35, 36, 37, 38, 39, 40)\n        val tup5 = (41, 42, 43, 44, 45, 46, 47, 48, 49, 50)\n        val tup6 = (51, 52, 53, 54, 55, 56, 57, 58, 59, 60)\n        val tup7 = (61, 62, 63, 64, 65, 66, 67, 68, 69, 70)\n        val tup8 = (71, 72, 73, 74, 75, 76, 77, 78, 79, 80)\n        val tup9 = (81, 82, 83, 84, 85, 86, 87, 88, 89, 90)\n        val tup10 = (91, 92, 93, 94, 95, 96, 97, 98, 99, 100)\n        val tup11 = (tup1, tup2, tup3, tup4, tup5, tup6, tup7, tup8, tup9, tup10)\n        val tup12 = (tup1, tup2, tup3, tup4, tup5, tup6, tup7, tup8, tup9, tup10)\n        val tup13 = (tup11, tup12)\n        val tup14 = (tup11, tup12)\n        val tup15 = (tup13, tup14)\n        val tup16 = (tup13, tup14)\n        val tup17 = (tup15, tup16)\n        val tup18 = (tup15, tup16)\n        val tup19 = (tup17, tup18)\n        val tup20 = (tup17, tup18)\n        val tup21 = (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpg1w1l9vm.scala:26:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup21\u001b[0m = (\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1w1l9vm.scala:27:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1w1l9vm.scala:29:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg1w1l9vm.scala:29:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = (11, 12, 13, 14, 15)\n        val tup4 = (16, 17, 18, 19, 20)\n        val tup5 = (21, 22, 23, 24, 25)\n        val tup6 = (26, 27, 28, 29, 30)\n        val tup7 = (31, 32, 33, 34, 35)\n        val tup8 = (36, 37, 38, 39, 40)\n        val tup9 = (41, 42, 43, 44, 45)\n        val tup10 = (46, 47, 48, 49, 50)\n        val tup11 = (51, 52, 53, 54, 55)\n        val tup12 = (56, 57, 58, 59, 60)\n        val tup13 = (61, 62, 63, 64, 65)\n        val tup14 = (66, 67, 68, 69, 70)\n        val tup15 = (71, 72, 73, 74, 75)\n        val tup16 = (76, 77, 78, 79, 80)\n        val tup17 = (81, 82, 83, 84, 85)\n        val tup18 = (86, 87, 88, 89, 90)\n        val tup19 = (91, 92, 93, 94, 95)\n        val tup20 = (96, 97, 98, 99, 100)\n        val tup21 = (101, 102, 103, 104, 105)\n        val tup22 = (106, 107, 108, 109, 110)\n        val tup23 = (111, 112, 113, 114, 115)\n        val tup24 = (116, 117, 118, 119, 120)\n        val tup25 = (121, 122, 123, 124, 125)\n        val tup26 = (126, 127, 128, 129, 130)\n        val tup27 = (131, 132, 133, 134, 135)\n        val tup28 = (136, 137, 138, 139, 140)\n        val tup29 = (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpqf5ppdzo.scala:34:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup29\u001b[0m = (\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf5ppdzo.scala:35:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf5ppdzo.scala:37:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqf5ppdzo.scala:37:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var tup1_list = ListBuffer[Long]()\n        var tup2_list = ListBuffer[Long]()\n        while (tup1 > 0) {\n            tup1_list += tup1 % 10\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            tup2_list += tup2 % 10\n            tup2 /= 10\n        }\n        var result = 0L\n        for (i <- 0 until tup1_list.length) {\n            result = result * 10 + (tup1_list(i) + tup2_list(i))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwdkn349n.scala:25:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwdkn349n.scala:25:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwdkn349n.scala:26:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).toString.toInt + test_tup2.toString.charAt(i).toString.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyrw7rts.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyrw7rts.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoyrw7rts.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0 || tup2 > 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwoq_uhps.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwoq_uhps.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwoq_uhps.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:27 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0m), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : Tuple2[Tuple2[Long, Long], Tuple2[Long, Long]] = Tuple2(Tuple2(test_tup1, test_tup1), Tuple2(test_tup1, test_tup1))\n        var tup2 : Tuple2[Tuple2[Long, Long], Tuple2[Long, Long]] = Tuple2(Tuple2(test_tup2, test_tup2), Tuple2(test_tup2, test_tup2))\n        var tup3 : Tuple2[Tuple2[Long, Long], Tuple2[Long, Long]] = Tuple2(Tuple2(0, 0), Tuple2(0, 0))\n        for (i <- 0 to 1) {\n            for (j <- 0 to 1) {\n                tup3._1._1 += tup1._1._1\n                tup3._1._2 += tup1._1._2\n                tup3._2._1 += tup1._2._1\n                tup3._2._2 += tup1._2._2\n            }\n        }\n        return tup3._1._1\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcmt9spbx.scala:11:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                tup3._1._1 += tup1._1._1\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean _1.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcmt9spbx.scala:12:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                tup3._1._2 += tup1._1._2\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean _2.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcmt9spbx.scala:13:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                tup3._2._1 += tup1._2._1\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean _1.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcmt9spbx.scala:14:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                tup3._2._2 += tup1._2._2\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Long - did you mean _2.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmt9spbx.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcmt9spbx.scala:20:70 --------------------\u001b[0m\u001b[0m\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = (21, 22, 23, 24, 25, 26, 27, 28, 29, 30)\n        val tup4 = (31, 32, 33, 34, 35, 36, 37, 38, 39, 40)\n        val tup5 = (41, 42, 43, 44, 45, 46, 47, 48, 49, 50)\n        val tup6 = (51, 52, 53, 54, 55, 56, 57, 58, 59, 60)\n        val tup7 = (61, 62, 63, 64, 65, 66, 67, 68, 69, 70)\n        val tup8 = (71, 72, 73, 74, 75, 76, 77, 78, 79, 80)\n        val tup9 = (81, 82, 83, 84, 85, 86, 87, 88, 89, 90)\n        val tup10 = (91, 92, 93, 94, 95, 96, 97, 98, 99, 100)\n        val nested_tup1 = (tup1, tup2, tup3, tup4, tup5)\n        val nested_tup2 = (tup6, tup7, tup8, tup9, tup10)\n        val nested_tup3 = (nested_tup1, nested_tup2)\n        val nested_tup4 = (nested_tup3, nested_tup3)\n        val nested_tup5 = (nested_tup4, nested_tup4)\n        val nested_tup6 = (nested_tup5, nested_tup5)\n        val nested_tup7 = (nested_tup6, nested_tup6)\n        val nested_tup8 = (nested_tup7, nested_tup7)\n        val nested_tup9 = (nested_tup8, nested_tup8)\n        val nested_tup10 = (n\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp67pl4ws4.scala:26:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp67pl4ws4.scala:25:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mnested_tup10\u001b[0m = (n\n\u001b[31m\u001b[31m   |\u001b[0m                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                            Not found: n\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp67pl4ws4.scala:26:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp67pl4ws4.scala:28:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp67pl4ws4.scala:28:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var pow = 0\n        while (tup1 > 0 || tup2 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            sum += (digit1 + digit2) * pow(10, pow)\n            tup1 /= 10\n            tup2 /= 10\n            pow += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx00h_djd.scala:13:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            sum += (digit1 + digit2) * pow(\u001b[31m10\u001b[0m, pow)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Long - did you mean Long.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpx00h_djd.scala:13:39 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            sum += (digit1 + digit2) * pow(\u001b[31m10\u001b[0m, pow)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                   \u001b[33mvariable\u001b[0m \u001b[35mpow\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx00h_djd.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx00h_djd.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:19:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:19:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            sum += (digit1 + digit2) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17a_azmp.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17a_azmp.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17a_azmp.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        for(i <- 0 to test_tup1.toString.length - 1) {\n            result += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, i).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uu0w4vc.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uu0w4vc.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uu0w4vc.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs8x7oi_.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs8x7oi_.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxs8x7oi_.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 && tup2 > 0) {\n            result += (tup1 % 10 + tup2 % 10) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpngnvy_kh.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpngnvy_kh.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpngnvy_kh.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:27 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0m), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = tup1.zip(tup2)\n        val tup4 = tup3.map(x => x._1 + x._2)\n        val tup5 = tup4.productIterator.toList.map(_.toString.toLong)\n        val tup6 = tup5.reduceLeft(_ + _)\n        return tup6\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp118t3s3n.scala:9:28 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup4\u001b[0m = tup3.map(\u001b[36mx\u001b[0m => x._1 + x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                            ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp118t3s3n.scala:15:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp118t3s3n.scala:15:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Misma",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup3 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup4 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup5 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup6 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup7 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup8 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup9 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup10 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup11 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup12 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup13 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup14 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup15 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup16 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup17 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup18 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup19 = (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpkoqfqhym.scala:24:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup19\u001b[0m = (\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkoqfqhym.scala:25:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkoqfqhym.scala:27:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkoqfqhym.scala:27:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprzx0f37x.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprzx0f37x.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprzx0f37x.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcet110rg.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcet110rg.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcet110rg.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx3ynpds.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx3ynpds.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx3ynpds.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int])\n        tup3.productIterator.map(x => x.asInstanceOf[Int]).reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpethrt60t.scala:9:13 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        tup3.productIterator.map(\u001b[36mx\u001b[0m => x.asInstanceOf[\u001b[35mInt\u001b[0m]).reduceLeft(_ + _)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        value productIterator is not a member of Iterator[Int]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpethrt60t.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpethrt60t.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpethrt60t.scala:13:27 --------------------\u001b[0m\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50)\n        val tup2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Long] + x._2.asInstanceOf[Long]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4x68dbp5.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4x68dbp5.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4x68dbp5.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = (sum << 8) + ((tup1 & 0xFF) + (tup2 & 0xFF))\n            tup1 = tup1 >> 8\n            tup2 = tup2 >> 8\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw1qer025.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw1qer025.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw1qer025.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 || tup2 > 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uf2fl72.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uf2fl72.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uf2fl72.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 > 0) {\n            var num1 = tup1 % 10\n            var num2 = tup2 % 10\n            sum += (num1 + num2) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqb3rmjn6.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqb3rmjn6.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqb3rmjn6.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsbii4wpp.scala:19:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsbii4wpp.scala:19:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsbii4wpp.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 until test_tup1.toString.length) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj1oxfs5f.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj1oxfs5f.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj1oxfs5f.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 && tup2 != 0) {\n            sum += ((tup1 % 10) + (tup2 % 10)) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn13iwtcd.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn13iwtcd.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn13iwtcd.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            sum += (digit1 + digit2) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17a_azmp.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17a_azmp.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17a_azmp.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0uf3yyt.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0uf3yyt.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl0uf3yyt.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            result = result * 10 + (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjij0xrdy.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjij0xrdy.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjij0xrdy.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas4m44l_.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas4m44l_.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas4m44l_.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var tup1_len = 0\n        var tup2_len = 0\n        while (tup1 != 0) {\n            tup1_len += 1\n            tup1 /= 10\n        }\n        while (tup2 != 0) {\n            tup2_len += 1\n            tup2 /= 10\n        }\n        var tup1_arr = Array.ofDim[Int](tup1_len)\n        var tup2_arr = Array.ofDim[Int](tup2_len)\n        tup1 = test_tup1\n        tup2 = test_tup2\n        for (i <- 0 until tup1_len) {\n            tup1_arr(i) = (tup1 % 10).toInt\n            tup1 /= 10\n        }\n        for (i <- 0 until tup2_len) {\n            tup2_arr(i) = (tup2 % 10).toInt\n            tup2 /= 10\n        }\n        var tup_len = max(tup1_len, tup2_len)\n        var tup_arr = Array.ofDim[Int](tup_len)\n        for (i <- 0 until tup_len) {\n            if (i < tup1_len && i < tup2_len) tup_arr(i) = tup1_arr(i) + tup2_arr(i)\n            else if (i < tup1_len) tup_arr(i) = tup1_arr(i)\n            else tup_arr(i) = tup2_arr(i)\n        }\n        for (i <- 0 until tup_len) {\n            sum = sum * 10 + tup_arr(i)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt_zbx_cd.scala:44:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt_zbx_cd.scala:44:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt_zbx_cd.scala:45:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while(tup1 != 0 || tup2 != 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjuhcwrmh.scala:19:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjuhcwrmh.scala:19:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjuhcwrmh.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (10, 9, 8, 7, 6, 5, 4, 3, 2, 1)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int])\n        tup3.productIterator.reduceLeft(_.asInstanceOf[Long] * _.asInstanceOf[Long])\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprrim1k47.scala:9:13 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        tup3.productIterator.reduceLeft(_.asInstanceOf[\u001b[35mLong\u001b[0m] * _.asInstanceOf[\u001b[35mLong\u001b[0m])\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        value productIterator is not a member of Iterator[Int]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprrim1k47.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprrim1k47.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprrim1k47.scala:13:27 -------------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        val tup3 = new Array[Int](tup1.length)\n        for (i <- 0 until tup1.length) {\n            tup3(i) = tup1(i) + tup2(i)\n        }\n        tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc3yww17.scala:15:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc3yww17.scala:15:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptc3yww17.scala:16:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0) {\n            result = result * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1lnijtf9.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1lnijtf9.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1lnijtf9.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:19:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:19:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt)\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt)\n        val tup3 = tup1.zip(tup2).map(x => x._1 + x._2)\n        tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvpweswq.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvpweswq.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvpweswq.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toLong)\n        val tup2 = test_tup2.toString.split(\"\").map(_.toLong)\n        val tup3 = tup1.zip(tup2).map(x => x._1 + x._2)\n        tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122851,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_hw2me70.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_hw2me70.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_hw2me70.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:27 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0m), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 != 0) {\n            result = result + ((tup1 % 10) + (tup2 % 10)) * pow(10, log10(tup1).toInt).toLong\n            tup1 = tup1 / 10\n            tup2 = tup2 / 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0brc8qem.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0brc8qem.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0brc8qem.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, test_tup1.toString.length - 1 - i).toLong\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122931,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppu63thir.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppu63thir.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppu63thir.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var tup1_list = List[Long]()\n        var tup2_list = List[Long]()\n        while (tup1 != 0) {\n            tup1_list = (tup1 % 10) :: tup1_list\n            tup1 /= 10\n        }\n        while (tup2 != 0) {\n            tup2_list = (tup2 % 10) :: tup2_list\n            tup2 /= 10\n        }\n        var result = 0L\n        for (i <- 0 until tup1_list.length) {\n            result = result * 10 + (tup1_list(i) + tup2_list(i))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122930,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwg6lchw.scala:25:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwg6lchw.scala:25:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwg6lchw.scala:26:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122930,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qzmp23p.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qzmp23p.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8qzmp23p.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while(tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpadk4kjug.scala:19:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpadk4kjug.scala:19:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpadk4kjug.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 && tup2 != 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbj2j31u.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbj2j31u.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqbj2j31u.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int])\n        tup3.productIterator.map(x => x.asInstanceOf[Int]).reduceLeft(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2x2ccst7.scala:9:13 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        tup3.productIterator.map(\u001b[36mx\u001b[0m => x.asInstanceOf[\u001b[35mInt\u001b[0m]).reduceLeft(_ + _)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        value productIterator is not a member of Iterator[Int]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2x2ccst7.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2x2ccst7.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2x2ccst7.scala:13:27 --------------------\u001b[0m\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        for (i <- 0 until tup1.length) {\n            sum += tup1(i) + tup2(i)\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122930,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphgq41_od.scala:15:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphgq41_od.scala:15:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphgq41_od.scala:16:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        var tup1 : List[Long] = List()\n        var tup2 : List[Long] = List()\n        var tup3 : List[Long] = List()\n        var tup4 : List[Long] = List()\n        var tup5 : List[Long] = List()\n        var tup6 : List[Long] = List()\n        var tup7 : List[Long] = List()\n        var tup8 : List[Long] = List()\n        var tup9 : List[Long] = List()\n        var tup10 : List[Long] = List()\n        var tup11 : List[Long] = List()\n        var tup12 : List[Long] = List()\n        var tup13 : List[Long] = List()\n        var tup14 : List[Long] = List()\n        var tup15 : List[Long] = List()\n        var tup16 : List[Long] = List()\n        var tup17 : List[Long] = List()\n        var tup18 : List[Long] = List()\n        var tup19 : List[Long] = List()\n        var tup20 : List[Long] = List()\n        var tup21 : List[Long] = List()\n        var tup22 : List[Long] = List()\n        var tup23 : List[Long] = List()\n        var tup24 : List[Long] = List()\n        var tup25 : List[Long] = List()\n        var tup26 : List[Long] = List()\n        var tup27 : List[Long] = List()\n        var tup28 : List[Long] = List()\n        var tup29 : List[Long] = List()\n        var tup30 : List[Long] = List()\n        var tup31 : List[Long] = List()\n        var tup32 : List[Long] = List()\n        var tup33 : List[Long] = List()\n        var tup34 : List[Long] = List()\n        var tup35 : List[Long] = List()\n        var tup36 : List[Long] = List()\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122931,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuylc6h7.scala:43:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuylc6h7.scala:45:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuylc6h7.scala:45:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnuylc6h7.scala:46:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    assert(addN",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.zip(tup2)\n        val tup4 = tup3.map(x => x._1 + x._2)\n        tup4.product\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp9u3ttw0k.scala:9:28 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup4\u001b[0m = tup3.map(\u001b[36mx\u001b[0m => x._1 + x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                            ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9u3ttw0k.scala:10:13 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        tup4.product\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue product is not a member of (Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing\n\u001b[31m   |\u001b[0m  , \n\u001b[31m   |\u001b[0mNothing)\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9u3ttw0k.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9u3ttw0k.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m          ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).toInt - '0'.toInt) + (test_tup2.toString.charAt(i).toInt - '0'.toInt)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpob6mtu35.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpob6mtu35.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpob6mtu35.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122898,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplab5jsq7.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplab5jsq7.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplab5jsq7.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 || tup2 > 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122833,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uf2fl72.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uf2fl72.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9uf2fl72.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var tup1_length = 0\n        var tup2_length = 0\n        while (tup1 > 0) {\n            tup1_length += 1\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            tup2_length += 1\n            tup2 /= 10\n        }\n        var tup1_list = List[Int]()\n        var tup2_list = List[Int]()\n        tup1 = test_tup1\n        tup2 = test_tup2\n        for (i <- 0 until tup1_length) {\n            tup1_list = (tup1 % 10).toInt :: tup1_list\n            tup1 /= 10\n        }\n        for (i <- 0 until tup2_length) {\n            tup2_list = (tup2 % 10).toInt :: tup2_list\n            tup2 /= 10\n        }\n        var tup1_index = 0\n        var tup2_index = 0\n        while (tup1_index < tup1_list.length || tup2_index < tup2_list.length) {\n            if (tup1_index < tup1_list.length && tup2_index < tup2_list.length) {\n                sum = sum * 10 + (tup1_list(tup1_index) + tup2_list(tup2_index))\n                tup1_index += 1\n                tup2_index += 1\n            }\n            else if (tup1_index < tup1_list.length) {\n                sum = sum * 10 + tup1_list(tup1_index)\n                tup1_index += 1\n            }\n            else {\n                sum = sum * 10 + tup2_list(tup2_index)\n                tup2_index += 1\n            }\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122931,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1spzl_v3.scala:51:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1spzl_v3.scala:51:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1spzl_v3.scala:52:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:27 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:9:70 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m  |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpowrdcngc.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0m), ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0\n        while(tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpepo7cvp0.scala:10:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            sum += (tup1 % \u001b[31m10\u001b[0m + tup2 % \u001b[31m10\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepo7cvp0.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepo7cvp0.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepo7cvp0.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTu",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 != 0 || tup2 != 0) {\n            var tup1_elem = tup1 % 10\n            var tup2_elem = tup2 % 10\n            sum += (tup1_elem + tup2_elem) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1n50jh25.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1n50jh25.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1n50jh25.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var tup_sum : Long = 0\n        while (tup1 > 0) {\n            tup_sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return tup_sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84ijdppr.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84ijdppr.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp84ijdppr.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var tup1_len = 0\n        var tup2_len = 0\n        while (tup1 > 0) {\n            tup1_len += 1\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            tup2_len += 1\n            tup2 /= 10\n        }\n        tup1 = test_tup1\n        tup2 = test_tup2\n        var i = 0\n        while (i < max(tup1_len, tup2_len)) {\n            var tup1_elem = 0\n            var tup2_elem = 0\n            if (tup1_len > i) {\n                tup1_elem = (tup1 % 10).toInt\n                tup1 /= 10\n            }\n            if (tup2_len > i) {\n                tup2_elem = (tup2 % 10).toInt\n                tup2 /= 10\n            }\n            sum = sum * 10 + (tup1_elem + tup2_elem)\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rewe180.scala:39:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rewe180.scala:39:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9rewe180.scala:40:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = (sum * 10) + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwxvsp3rf.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwxvsp3rf.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwxvsp3rf.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpram418tf.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpram418tf.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpram418tf.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx3ynpds.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx3ynpds.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbx3ynpds.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 > 0) {\n            var t1 = tup1 % 10\n            var t2 = tup2 % 10\n            result += pow(10, i).toLong * (t1 + t2)\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn2yjp9wx.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn2yjp9wx.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn2yjp9wx.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpekh_0g_0.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 until test_tup1.toString.length) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxm_c_2n.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var tup3 : Long = 0\n        var tup4 : Long = 0\n        var tup5 : Long = 0\n        var tup6 : Long = 0\n        var tup7 : Long = 0\n        var tup8 : Long = 0\n        var tup9 : Long = 0\n        var tup10 : Long = 0\n        var tup11 : Long = 0\n        var tup12 : Long = 0\n        var tup13 : Long = 0\n        var tup14 : Long = 0\n        var tup15 : Long = 0\n        var tup16 : Long = 0\n        var tup17 : Long = 0\n        var tup18 : Long = 0\n        var tup19 : Long = 0\n        var tup20 : Long = 0\n        var tup21 : Long = 0\n        var tup22 : Long = 0\n        var tup23 : Long = 0\n        var tup24 : Long = 0\n        var tup25 : Long = 0\n        var tup26 : Long = 0\n        var tup27 : Long = 0\n        var tup28 : Long = 0\n        var tup29 : Long = 0\n        var tup30 : Long = 0\n        var tup31 : Long = 0\n        var tup32 : Long = 0\n        var tup33 : Long = 0\n        var tup34 : Long = 0\n        var tup35 : Long = 0\n        var tup36 : Long = 0\n        var tup37 : Long = 0\n        var tup38 : Long = 0\n        var tup39 : Long = 0\n        var tup40 : Long = 0\n        var tup41 : Long = 0\n        var tup42 : Long = 0\n        var tup43 : Long = 0\n        var tup44 : Long = 0\n        var tup45 : Long = 0\n        var tup46 : Long = 0\n        var tup47 : Long = 0\n        var tup48 : Long = 0\n        var tup49 : Long = 0\n        var tup50 : Long = 0\n        var t\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpie5gq450.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie5gq450.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie5gq450.scala:59:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie5gq450.scala:59:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122897,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdcwd6fe.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdcwd6fe.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgdcwd6fe.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            result = result * 10 + (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpal2j_c04.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpal2j_c04.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpal2j_c04.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, test_tup1.toString.length - 1 - i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2087m_ty.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2087m_ty.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2087m_ty.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas4m44l_.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas4m44l_.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpas4m44l_.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmby838mq.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmby838mq.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmby838mq.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc7caqjn9.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc7caqjn9.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc7caqjn9.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        while (tup1 != 0) {\n            result = result * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpywi8w09g.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpywi8w09g.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpywi8w09g.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122831,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:19:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:19:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptdwmx_6f.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzj8lfbf9.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzj8lfbf9.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzj8lfbf9.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var result = 0L\n        var i = 0\n        while (tup1 != 0 || tup2 != 0) {\n            var t1 = tup1 % 10\n            var t2 = tup2 % 10\n            result += (t1 + t2) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15is2rwh.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15is2rwh.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp15is2rwh.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int]).toList\n        tup3.sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9h7_i2uz.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9h7_i2uz.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9h7_i2uz.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var sum : Long = 0\n        var i : Int = 0\n        while (tup1 > 0) {\n            sum += (tup1 % 10 + tup2 % 10) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmy6nk7kl.scala:19:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmy6nk7kl.scala:19:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmy6nk7kl.scala:20:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.productIterator.zip(tup2.productIterator).map(x => x._1.asInstanceOf[Int] + x._2.asInstanceOf[Int]).toList\n        tup3(test_tup1.toInt - 1) + tup3(test_tup2.toInt - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv5zyvmkm.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 != 0L || tup2 != 0L) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqz5buld9.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqz5buld9.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqz5buld9.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup3 = tup1.zip(tup2).map(x => x._1 + x._2)\n        return tup3.product\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmptzruzzy9.scala:8:38 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup3\u001b[0m = tup1.zip(tup2).map(\u001b[36mx\u001b[0m => x._1 + x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptzruzzy9.scala:9:20 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m tup3.product\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue product is not a member of (Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing\n\u001b[31m  |\u001b[0m  , \n\u001b[31m  |\u001b[0mNothing)\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptzruzzy9.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptzruzzy9.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1e_3_v42.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1,2,3,4,5)\n        val tup2 = (6,7,8,9,10)\n        val tup3 = tup1.zip(tup2)\n        val tup4 = tup3.map(x => x._1 + x._2)\n        val tup5 = tup4.productIterator.toList\n        val tup6 = tup5.map(x => x.toString.toLong)\n        val tup7 = tup6.sum\n        return tup7\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp4fggfa3f.scala:9:28 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup4\u001b[0m = tup3.map(\u001b[36mx\u001b[0m => x._1 + x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                            ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4fggfa3f.scala:16:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4fggfa3f.scala:16:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Misma",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit) * pow(10, test_tup1.toString.length - 1 - i).toLong\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2087m_ty.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2087m_ty.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2087m_ty.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum += ((tup1 % 10) + (tup2 % 10)) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmwcu2c5h.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmwcu2c5h.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmwcu2c5h.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0) {\n            sum += (tup1 % 10) + (tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122832,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmby838mq.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmby838mq.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmby838mq.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var tup3 : Long = 0\n        var tup4 : Long = 0\n        var tup5 : Long = 0\n        var tup6 : Long = 0\n        var tup7 : Long = 0\n        var tup8 : Long = 0\n        var tup9 : Long = 0\n        var tup10 : Long = 0\n        var tup11 : Long = 0\n        var tup12 : Long = 0\n        var tup13 : Long = 0\n        var tup14 : Long = 0\n        var tup15 : Long = 0\n        var tup16 : Long = 0\n        var tup17 : Long = 0\n        var tup18 : Long = 0\n        var tup19 : Long = 0\n        var tup20 : Long = 0\n        var tup21 : Long = 0\n        var tup22 : Long = 0\n        var tup23 : Long = 0\n        var tup24 : Long = 0\n        var tup25 : Long = 0\n        var tup26 : Long = 0\n        var tup27 : Long = 0\n        var tup28 : Long = 0\n        var tup29 : Long = 0\n        var tup30 : Long = 0\n        var tup31 : Long = 0\n        var tup32 : Long = 0\n        var tup33 : Long = 0\n        var tup34 : Long = 0\n        var tup35 : Long = 0\n        var tup36 : Long = 0\n        var tup37 : Long = 0\n        var tup38 : Long = 0\n        var tup39 : Long = 0\n        var tup40 : Long = 0\n        var tup41 : Long = 0\n        var tup42 : Long = 0\n        var tup43 : Long = 0\n        var tup44 : Long = 0\n        var tup45 : Long = 0\n        var tup46 : Long = 0\n        var tup47 : Long = 0\n        var tup48 : Long = 0\n        var tup49 : Long = 0\n        var tup50 : Long = 0\n        var t\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122814,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpie5gq450.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie5gq450.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie5gq450.scala:59:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpie5gq450.scala:59:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum : Long = 0\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        while (tup1 > 0 || tup2 > 0) {\n            sum = sum * 10 + (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122933,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2b9mtab0.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2b9mtab0.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2b9mtab0.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, (2, (3, (4, (5, (6, (7, (8, (9, (10, (11, (12, (13, (14, (15, (16, (17, (18, (19, (20, (21, (22, (23, (24, (25, (26, (27, (28, (29, (30, (31, (32, (33, (34, (35, (36, (37, (38, (39, (40, (41, (42, (43, (44, (45, (46, (47, (48, (49, (50, (51, (52, (53, (54, (55, (56, (57, (58, (59, (60, (61, (62, (63, (64, (65, (66, (67, (68, (69, (70, (71, (72, (73, (74, (75, (76, (77, (78, (79, (80, (81, (82, (83, (84, (85, (86, (87, (88, (89, (90, (91, (92, (93, (94, (95, (96, (97, (98, (99, (100, (101, (102, (103, (104, (105, (106, (107, (108, (109, (110, (111, (112, (113, (114, (115, (116, (117, (118, (119, (120, (121, (122, (123, (124, (125, (126, (127, (128, (129, (130, (131, (132, (133, (134, (135, (136, (137, (138, (139, (140, (141, (142, (143, (144, (145, (146, (147, (148, (149, (150, (151, (152, (153, (154, (155, (156, (157, (158, (159, (160, (161, (162, (163, (164, (165, (166, (167, (168, (\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509896,
      "stdout": "java.lang.StackOverflowError while compiling /tmp/tmpw88yq25h.scala\n",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:7:4 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m    }\n\u001b[31m\u001b[31m  |\u001b[0m    ^\u001b[0m\n\u001b[31m  |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw88yq25h.scala:8:0 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m  |\u001b[0m^^^\u001b[0m\n\u001b[31m  |\u001b[0m'}' expected, but 'end of statement' found\nException in thread \"main\" java.lang.StackOverflowError\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1517)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeAccumulator.foldMoreCases(untpd.scala:747)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.foldOver(Trees.scala:1625)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.traverseChildren(untpd.scala:786)\n\tat dotty.tools.dotc.printing.SyntaxHighlighting$TreeHighlighter$2$.traverse(SyntaxHighlighting.scala:123)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.untpd$UntypedTreeTraverser.apply(untpd.scala:785)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.fold$1(Trees.scala:1516)\n\tat dotty.tools.dotc.ast.Trees$Instance$TreeAccumulator.apply(Trees.scala:1518)\n\tat dotty.tools.dotc.ast.",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup3 = tup1.zip(tup2).map(x => x._1 + x._2)\n        tup3.product\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122849,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp9fruhtmo.scala:8:38 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup3\u001b[0m = tup1.zip(tup2).map(\u001b[36mx\u001b[0m => x._1 + x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                      ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9fruhtmo.scala:9:13 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        tup3.product\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mvalue product is not a member of (Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing\n\u001b[31m  |\u001b[0m  , \n\u001b[31m  |\u001b[0mNothing)\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fruhtmo.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fruhtmo.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = 0L\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        while (tup1 > 0 || tup2 > 0) {\n            result = result * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc8tzd4dy.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc8tzd4dy.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc8tzd4dy.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : Tuple2[Long, Long] = (test_tup1, test_tup2)\n        var tup2 : Tuple2[Long, Long] = (test_tup1, test_tup2)\n        var tup3 : Tuple2[Long, Long] = (tup1._1 + tup2._1, tup1._2 + tup2._2)\n        return tup3._1 + tup3._2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppex96u5e.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppex96u5e.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppex96u5e.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1.toString.split(\"\").map(_.toInt).toList\n        val tup2 = test_tup2.toString.split(\"\").map(_.toInt).toList\n        val tup3 = (tup1 zip tup2).map(x => x._1 + x._2)\n        tup3.mkString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1uj4ear.scala:12:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1uj4ear.scala:12:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo1uj4ear.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum += (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnypwvzia.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 > 0 && tup2 > 0) {\n            sum = sum + (tup1 % 10 + tup2 % 10) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122940,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0ff8ge2.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0ff8ge2.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc0ff8ge2.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 : Long = test_tup1\n        var tup2 : Long = test_tup2\n        var sum : Long = 0\n        while (tup1 > 0 || tup2 > 0) {\n            sum = sum * 10 + (tup1 % 10 + tup2 % 10)\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122941,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8_thdqud.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8_thdqud.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8_thdqud.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 10 + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122815,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwqpyrrn1.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 > 0 || tup2 > 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            sum += (digit1 + digit2) * pow(10, i).toLong\n            i += 1\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122879,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjbknd_z2.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjbknd_z2.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjbknd_z2.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 && tup2 != 0) {\n            sum += ((tup1 % 10) + (tup2 % 10)) * pow(10, log10(tup1).toInt).toLong\n            tup1 /= 10\n            tup2 /= 10\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn13iwtcd.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn13iwtcd.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn13iwtcd.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var sum = 0L\n        for (i <- 0 to test_tup1.toString.length - 1) {\n            sum += (test_tup1.toString.charAt(i).asDigit + test_tup2.toString.charAt(i).asDigit)\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:13:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9kdrllv.scala:14:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3)\n        val tup2 = (4, 5, 6)\n        val tup3 = (tup1, tup2)\n        val tup4 = (tup2, tup1)\n        val tup5 = (tup3, tup4)\n        val tup6 = (tup4, tup3)\n        val tup7 = (tup5, tup6)\n        val tup8 = (tup6, tup5)\n        val tup9 = (tup7, tup8)\n        val tup10 = (tup8, tup7)\n        val tup11 = (tup9, tup10)\n        val tup12 = (tup10, tup9)\n        val tup13 = (tup11, tup12)\n        val tup14 = (tup12, tup11)\n        val tup15 = (tup13, tup14)\n        val tup16 = (tup14, tup13)\n        val tup17 = (tup15, tup16)\n        val tup18 = (tup16, tup15)\n        val tup19 = (tup17, tup18)\n        val tup20 = (tup18, tup17)\n        val tup21 = (tup19, tup20)\n        val tup22 = (tup20, tup19)\n        val tup23 = (tup21, tup22)\n        val tup24 = (tup22, tup21)\n        val tup25 = (tup23, tup24)\n        val tup26 = (tup24, tup23)\n        val tup27 = (tup25, tup26)\n        val tup28 = (tup26, tup25)\n        val tup29 = (tup27, tup28)\n        val tup30 = (tup28, tup27)\n        val tup31 = (tup29, tup30)\n        val tup32 = (tup30, tup29)\n        val t\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122941,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuyrubayz.scala:39:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyrubayz.scala:39:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyrubayz.scala:41:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyrubayz.scala:41:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var tup1_list = List[Long]()\n        var tup2_list = List[Long]()\n        while (tup1 != 0) {\n            tup1_list = (tup1 % 10) :: tup1_list\n            tup1 /= 10\n        }\n        while (tup2 != 0) {\n            tup2_list = (tup2 % 10) :: tup2_list\n            tup2 /= 10\n        }\n        var result = 0L\n        for (i <- 0 until tup1_list.length) {\n            result = result * 10 + (tup1_list(i) + tup2_list(i))\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122930,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwg6lchw.scala:25:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwg6lchw.scala:25:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqwg6lchw.scala:26:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = sum * 100 + (tup1 % 100 + tup2 % 100)\n            tup1 /= 100\n            tup2 /= 100\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122941,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkbs4qbf.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkbs4qbf.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdkbs4qbf.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (6, 7, 8, 9, 10)\n        val tup3 = tup1.zip(tup2)\n        val tup4 = tup3.map(x => x._1 + x._2)\n        val tup5 = tup4.productIterator.toList\n        val tup6 = tup5.map(_.toString.toLong)\n        val tup7 = tup6.productIterator.toList\n        val tup8 = tup7.map(_.toString.toLong)\n        val tup9 = tup8.productIterator.toList\n        val tup10 = tup9.map(_.toString.toLong)\n        val tup11 = tup10.productIterator.toList\n        val tup12 = tup11.map(_.toString.toLong)\n        val tup13 = tup12.productIterator.toList\n        val tup14 = tup13.map(_.toString.toLong)\n        val tup15 = tup14.productIterator.toList\n        val tup16 = tup15.map(_.toString.toLong)\n        val tup17 = tup16.productIterator.toList\n        val tup18 = tup17.map(_.toString.toLong)\n        val tup19 = tup18.productIterator.toList\n        val tup20 = tup19.map(_.toString.toLong)\n        val tup21 = tup20.productIterator.toList\n        val tup22 = tup21.map(_.toString.toLong)\n        val tup23 = tup22.productIterator.toList\n        val tup24 = tup23.map(_.toString.toLong)\n        val tup25 = tup24.productIterator.toList\n        val tup26 = tup25.map(_.toString.toLong)\n        val tup27 = tup26.productIterator.toList\n        val tup28 = tup27.map(_.toString.toLong)\n        val t\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122941,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbked_iiv.scala:35:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpbked_iiv.scala:9:28 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup4\u001b[0m = tup3.map(\u001b[36mx\u001b[0m => x._1 + x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                            ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbked_iiv.scala:12:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup7\u001b[0m = tup6.productIterator.toList\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value productIterator is not a member of List[Long]\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbked_iiv.scala:35:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbked_iiv.scala:37:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        while (tup1 != 0 || tup2 != 0) {\n            sum = (sum * 10) + ((tup1 % 10) + (tup2 % 10))\n            tup1 /= 10\n            tup2 /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122941,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4svemg7s.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4svemg7s.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4svemg7s.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 + test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:10:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:10:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsk47he6e.scala:11:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var sum = 0L\n        var i = 0\n        while (tup1 != 0 || tup2 != 0) {\n            var digit1 = tup1 % 10\n            var digit2 = tup2 % 10\n            sum += (digit1 + digit2) * pow(10, i).toLong\n            tup1 /= 10\n            tup2 /= 10\n            i += 1\n        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1665509914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl2v13zp.scala:21:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl2v13zp.scala:21:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl2v13zp.scala:22:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var res = 0L\n        while (tup1 != 0 && tup2 != 0) {\n            res = res * 100 + ((tup1 % 100) + (tup2 % 100))\n            tup1 /= 100\n            tup2 /= 100\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122941,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwlsn95fb.scala:17:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwlsn95fb.scala:17:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwlsn95fb.scala:18:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(addNestedTuples(((\u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m11l\u001b[0m)), ((\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m4l\u001b[0m))) == ((\u001b[31m9l\u001b[0m, \u001b[31m12l\u001b[0m), (\u001b[31m9l\u001b[0m, \u001b[31m16l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to perform index wise addition of tuple elements in the given two nested tuples.\n    def addNestedTuples(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var tup1 = test_tup1\n        var tup2 = test_tup2\n        var tup_sum = 0L\n        var tup1_len = 0\n        var tup2_len = 0\n        while (tup1 > 0) {\n            tup1_len += 1\n            tup1 /= 10\n        }\n        while (tup2 > 0) {\n            tup2_len += 1\n            tup2 /= 10\n        }\n        var tup1_arr = Array.fill(tup1_len)(0)\n        var tup2_arr = Array.fill(tup2_len)(0)\n        tup1 = test_tup1\n        tup2 = test_tup2\n        for (i <- 0 until tup1_len) {\n            tup1_arr(i) = tup1 % 10\n            tup1 /= 10\n        }\n        for (i <- 0 until tup2_len) {\n            tup2_arr(i) = tup2 % 10\n            tup2 /= 10\n        }\n        var tup_len = max(tup1_len, tup2_len)\n        var tup_arr = Array.fill(tup_len)(0)\n        for (i <- 0 until tup_len) {\n            if (i < tup1_len && i < tup2_len) tup_arr(i) = tup1_arr(i) + tup2_arr(i)\n            else if (i < tup1_len) tup_arr(i) = tup1_arr(i)\n            else tup_arr(i) = tup2_arr(i)\n        }\n        for (i <- 0 until tup_len) {\n            tup_sum = tup_sum * 10 + tup_arr(i)\n        }\n        return tup_sum\n    }\n    def main(args: Array[String]) = {\n    assert(addNestedTuples(((1l, 3l), (4l, 5l), (2l, 9l), (1l, 10l)), ((6l, 7l), (3l, 9l), (1l, 1l), (7l, 3l))) == ((7l, 10l), (7l, 14l), (3l, 10l), (8l, 13l)));\n    assert(addNestedTuples(((2l, 4l), (5l, 6l), (3l, 10l), (2l, 11l)), ((7l, 8l), (4l, 10l), (2l, 2l), (8l, 4l))) == ((9l, 12l), (9l, 16l), (5l, 12l), (10l, 15l)));\n    assert(addNestedTuples(((3l, 5l), (6l, 7l), (4l, 11l), (3l, 12l)), ((8l, 9l), (5l, 11l), (3l, 3l), (9l, 5l))) == ((11l, 14l), (11l, 18l), (7l, 14l), (12l, 17l)));\n    }\n\n}\n",
      "timestamp": 1666122941,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsr2amm1r.scala:24:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m            tup1_arr(i) = tup1 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    Long\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsr2amm1r.scala:28:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m            tup2_arr(i) = tup2 % \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    Long\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsr2amm1r.scala:44:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m8l\u001b[0m, \u001b[31m13l\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      Found:    ((Long, Long), (Long, Long), (Long, Long), (Long, Long))\n\u001b[31m   |\u001b[0m      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsr2amm1r.scala:44:70 --------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    assert(addNestedTuples(((\u001b[31m1l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m), (\u001b[31m2l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m10l\u001b[0m)), ((\u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m), (\u001b[31m3l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m1l\u001b[0m, \u001b[31m1l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m3l\u001b[0m))) == ((\u001b[31m7l\u001b[0m, \u001b[31m10l\u001b[0m), (\u001b[31m7l\u001b[0m, \u001b[31m14l\u001b[0m), (\u001b[31m3l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
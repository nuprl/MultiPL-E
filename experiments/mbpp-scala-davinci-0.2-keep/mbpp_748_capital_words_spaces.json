{
  "name": "mbpp_748_capital_words_spaces",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to put spaces between words starting with capital letters in a given string.\n    def capitalWordsSpaces(str1 : String) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_748_capital_words_spaces.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(capitalWordsSpaces((\"Python\")).equals((\"Python\")));\n    assert(capitalWordsSpaces((\"PythonProgrammingExamples\")).equals((\"Python Programming Examples\")));\n    assert(capitalWordsSpaces((\"GetReadyToBeCodingFreak\")).equals((\"Get Ready To Be Coding Freak\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n            i += 1\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=\\\\p{Upper})\").mkString(\" \")\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i > 0 && str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            }\n            else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            }\n            else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (i > 0 && str(i).isUpper) {\n                str = str.substring(0, i) + \" \" + str.substring(i)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper && str1(i - 1).isLower) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper && str1(i - 1).isLower) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\" \").map(x => if (x.head.isUpper) \" \" + x else x).mkString(\"\")\n        str2.trim",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        //val str2 = str1.split(\"(?=[A-Z])\")\n        //str2.mkString(\" \")\n        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper && !str1(i - 1).isUpper) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1).isLower) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        return str2.trim()",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n            i += 1\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                    str2 += str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n            i += 1\n        }\n        str2",
    "        var str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2 = str2.trim\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim",
    "        val str = str1.toCharArray\n        var result = \"\"\n        for (i <- 0 until str.length) {\n            if (i != 0 && str(i).isUpper) {\n                result += \" \"\n            }\n            result += str(i)\n        }\n        result",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\" \").map(x => x.capitalize).mkString(\" \")\n        val str3 = str2.split(\" \").map(x => if (x.head.isUpper) \" \" + x else x).mkString(\"\")\n        str3.trim",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        var prev = ' '\n        for (c <- str1) {\n            if (prev.isUpper && c.isUpper) str2 += \" \"\n            str2 += c\n            prev = c\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper && str1(i - 1).isLower) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper && str1(i - 1).isLower) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper && str1(i-1).isLower) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\" \").map(x => x.head.isUpper match {\n            case true => \" \" + x\n            case false => x\n        }).mkString(\"\")\n        str2.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i > 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n            i += 1\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str = str1.toCharArray\n        val str2 = new StringBuilder\n        str2.append(str(0))\n        for (i <- 1 until str.length) {\n            if (str(i).isUpper) {\n                str2.append(\" \")\n            }\n            str2.append(str(i))\n        }\n        str2.toString",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n            i += 1\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (str(i).isUpper) {\n                str = str.substring(0, i) + \" \" + str.substring(i)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (i > 0 && str(i).isUpper) {\n                str = str.substring(0, i) + \" \" + str.substring(i)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2 = str2.replaceAll(\"\\\\s+\", \" \")\n        str2 = str2.trim\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim()",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\" \").map(x => if (x.head.isUpper) \" \" + x else x).mkString\n        str2.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        val str2 = str1.split(\" \").map(x => x.capitalize).mkString(\" \")\n        val str3 = str2.split(\" \").map(x => if (x.head.isUpper) x + \" \" else x).mkString(\"\")\n        str3.trim",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else {\n                if (str1(i).isUpper && str1(i - 1).isLower) {\n                    str2 += \" \"\n                }\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str = str1.toCharArray\n        var result = new StringBuilder\n        for (i <- 0 until str.length) {\n            if (i == 0) {\n                result.append(str(i))\n            } else if (str(i).isUpper) {\n                result.append(\" \")\n                result.append(str(i))\n            } else {\n                result.append(str(i))\n            }\n        }\n        result.toString",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\" \").map(x => x.capitalize).mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        str1.split(\"(?=[A-Z])\").mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for(i <- 0 until str1.length) {\n            if(i != 0 && str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        return str2",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (i != 0 && str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n            i += 1\n        }\n        str2",
    "        val str2 = str1.split(\" \").map(x => x.split(\"(?=[A-Z])\")).flatten.mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        var str3 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        return str2",
    "        val str2 = str1.split(\" \").map(x => x.toList).map(x => x.map(y => if (y.isUpper) \" \" + y else y.toString)).map(x => x.mkString).mkString\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        var result = \"\"\n        var prev = ' '\n        for (c <- str1) {\n            if (c.isUpper && prev.isLower) result += \" \"\n            result += c\n            prev = c\n        }\n        result",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper && str1(i - 1) != ' ') {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        var i = 0\n        while (i < str1.length) {\n            if (str1(i).isUpper) {\n                str2 += \" \"\n            }\n            str2 += str1(i)\n            i += 1\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 to str1.length - 1) {\n            if (i == 0) {\n                str2 += str1(i).toUpper\n            } else {\n                if (str1(i).isUpper) {\n                    str2 += \" \" + str1(i)\n                } else {\n                    str2 += str1(i)\n                }\n            }\n        }\n        return str2",
    "        val str2 = str1.toCharArray\n        var str3 = \"\"\n        for (i <- 0 until str2.length) {\n            if (i == 0) {\n                str3 += str2(i)\n            } else if (str2(i).isUpper && str2(i - 1).isLower) {\n                str3 += \" \" + str2(i)\n            } else {\n                str3 += str2(i)\n            }\n        }\n        str3",
    "        var str2 = str1.toList\n        var str3 = new ListBuffer[Char]()\n        for (i <- 0 until str2.length) {\n            if (i == 0) {\n                str3 += str2(i)\n            } else {\n                if (str2(i).isUpper) {\n                    str3 += ' '\n                }\n                str3 += str2(i)\n            }\n        }\n        return str3.mkString",
    "        var str = str1\n        var i = 0\n        while (i < str.length) {\n            if (i != 0 && str(i).isUpper) {\n                str = str.substring(0, i) + \" \" + str.substring(i, str.length)\n                i += 1\n            }\n            i += 1\n        }\n        str",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        str2",
    "        val str2 = str1.replaceAll(\"([A-Z])\", \" $1\")\n        str2.trim",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) str2 += str1(i)\n            else if (str1(i).isUpper && !str1(i-1).isUpper) str2 += \" \" + str1(i)\n            else str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        val str2 = str1.split(\"(?=[A-Z])\")\n        str2.mkString(\" \")",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i == 0) {\n                str2 += str1(i)\n            } else if (str1(i).isUpper) {\n                str2 += \" \" + str1(i)\n            } else {\n                str2 += str1(i)\n            }\n        }\n        return str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        str2",
    "        val str2 = str1.split(\"(?=[A-Z])\").mkString(\" \")\n        str2",
    "        var str2 = \"\"\n        for (i <- 0 until str1.length) {\n            if (i != 0 && str1(i).isUpper) str2 += \" \"\n            str2 += str1(i)\n        }\n        return str2"
  ]
}
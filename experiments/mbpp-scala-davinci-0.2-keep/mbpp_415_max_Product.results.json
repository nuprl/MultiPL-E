{
  "name": "mbpp_415_max_Product",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_415_max_Product.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpkzpcs9s5.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * max2, min * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkzpcs9s5.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkzpcs9s5.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkzpcs9s5.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max\n                max = i\n            } else if (i > max2) {\n                max2 = i\n            }\n            if (i < min) {\n                min2 = min\n                min = i\n            } else if (i < min2) {\n                min2 = i\n            }\n        }\n        max(max * max2, min * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmph6z2wkmw.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * max2, min * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmph6z2wkmw.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph6z2wkmw.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph6z2wkmw.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:30:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:31:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpput45ldq.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpput45ldq.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpput45ldq.scala:25:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(0) * sorted(1), sorted(n - 1) * sorted(n - 2))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpn1jghxtr.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn1jghxtr.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn1jghxtr.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        max(a * b * c * d * e * f * g * h * i * j, a * b * c * d * e * f * g * h * i * sorted(0))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp85neoyv3.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp85neoyv3.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp85neoyv3.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val last = sorted.last\n        val secondLast = sorted(sorted.length - 2)\n        last * secondLast\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp6q6thgmm.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6q6thgmm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6q6thgmm.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpsc93m_8n.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpsdyk2r4o.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsdyk2r4o.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsdyk2r4o.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        if (max2 > max) {\n            val temp = max\n            max = max2\n            max2 = temp\n        }\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpas6cm9k5.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpas6cm9k5.scala:25:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpas6cm9k5.scala:26:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpsc93m_8n.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp81c2c5dj.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * secondMax, min * secondMin)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                maxProduct = maxProduct.max(arr(i) * min)\n                max = arr(i)\n            }\n            else if (arr(i) < min) {\n                maxProduct = maxProduct.max(arr(i) * max)\n                min = arr(i)\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpydznuagi.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpydznuagi.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpydznuagi.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = arr.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76cf7jxl.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76cf7jxl.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp76cf7jxl.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp76cf7jxl.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp76cf7jxl.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n1 = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfdr9qjh7.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfdr9qjh7.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfdr9qjh7.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfdr9qjh7.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfdr9qjh7.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp09uz29bv.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = arr.length\n        val max = sorted(n - 1) * sorted(n - 2)\n        val min = sorted(0) * sorted(1)\n        max max min\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmi_iyklf.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmi_iyklf.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmi_iyklf.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp3yfwgiq4.scala:21:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = sorted(n - \u001b[31m14\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3yfwgiq4.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3yfwgiq4.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3yfwgiq4.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3yfwgiq4.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpsdyk2r4o.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsdyk2r4o.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsdyk2r4o.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val product1 = sorted(n - 1) * sorted(n - 2)\n        val product2 = sorted(0) * sorted(1)\n        if (product1 > product2) product1 else product2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpn6n25qxk.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn6n25qxk.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn6n25qxk.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        (sorted(n - 1) * sorted(n - 2)) max (sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = arr.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val secondFirst = sorted(1)\n        val first = sorted(0)\n        if (last < 0) last * secondLast\n        else if (first < 0 && secondFirst < 0) last * secondLast\n        else last * secondFirst\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxd7d_205.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxd7d_205.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxd7d_205.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        for (i <- arr) {\n            if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max1 * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzztqr7mt.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        max(a * b * c, a * d * e)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(1)\n        var maxProduct = max * secondMax\n        for (i <- 2 until arr.length) {\n            val product = max * arr(i)\n            if (product > maxProduct) {\n                maxProduct = product\n                secondMax = max\n                max = arr(i)\n            } else if (product > secondMax * arr(i)) {\n                secondMax = arr(i)\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkqnmgahm.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkqnmgahm.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkqnmgahm.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val penultimate = sorted(n - 3)\n        val antepenultimate = sorted(n - 4)\n        val lastProduct = last * secondLast\n        val penultimateProduct = penultimate * antepenultimate\n        if (lastProduct > penultimateProduct) lastProduct else penultimateProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp3kfe_dww.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3kfe_dww.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3kfe_dww.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var maxProduct = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7mk87ow0.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7mk87ow0.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7mk87ow0.scala:17:25 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            maxProduct = max(maxProduct, max)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7mk87ow0.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7mk87ow0.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val o = sorted(n - 14)\n        val p = sorted(n - 15)\n        val q = sorted(n - 16)\n        val r = sorted(n - 17)\n        val s = sorted(n - 18)\n        val t = sorted(n - 19)\n        val u = sorted(n - 20)\n        val v = sorted(n - 21)\n        val w = sorted(n - 22)\n        val x = sorted(n - 23)\n        val y = sorted(n - 24)\n        val z = sorted(n - 25)\n        val aa = sorted(n - 26)\n        val bb = sorted(n - 27)\n        val cc = sorted(n - 28)\n        val dd = sorted(n - 29)\n        val ee = sorted(n - 30)\n        val ff = sorted(n - 31)\n        val gg = sorted(n - 32)\n        val hh = sorted(n - 33)\n        val ii = sorted(n - 34)\n        val jj = sorted(n - 35)\n        val kk = sorted(n - 36)\n        val ll = sorted(n - 37)\n        val mm = sorted(n - 38)\n        val oo = sorted(n - 39)\n        val pp = sorted(n - 40)\n        val qq = sorted(n - 41)\n        val rr = sorted(n - 42)\n        val ss = sorted(n - 43)\n        val tt = sorted(n - 44)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxjgpfc_y.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxjgpfc_y.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxjgpfc_y.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxjgpfc_y.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdn_bgdj5.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdn_bgdj5.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmp3yfwgiq4.scala:21:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = sorted(n - \u001b[31m14\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3yfwgiq4.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3yfwgiq4.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3yfwgiq4.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3yfwgiq4.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpw5hkfgfw.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * max2, min * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw5hkfgfw.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw5hkfgfw.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw5hkfgfw.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = arr.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        a * b\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxbmy82p4.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxbmy82p4.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxbmy82p4.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp81c2c5dj.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * secondMax, min * secondMin)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            }\n            else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpnij3rsch.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpnij3rsch.scala:25:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpnij3rsch.scala:26:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var max2 = arr.filter(_ != max).max\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpo5eoo9mo.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpo5eoo9mo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpo5eoo9mo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        max(a * b * c, a * d * e)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            val a = arr(i)\n            val b = max * a\n            val c = min * a\n            max = max(max(b, c), a)\n            min = min(min(b, c), a)\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123725,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            max = max(max(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            max = max(max(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:14:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            min = min(min(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:14:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            min = min(min(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:15:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hvol0mu.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.to",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        max(a * b * c, a * b * d)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123725,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmplo_3lj_b.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplo_3lj_b.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplo_3lj_b.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val ab = sorted(n - 28)\n        val ac = sorted(n - 29)\n        val ad = sorted(n - 30)\n        val ae = sorted(n - 31)\n        val af = sorted(n - 32)\n        val ag = sorted(n - 33)\n        val ah = sorted(n - 34)\n        val ai = sorted(n - 35)\n        val aj = sorted(n - 36)\n        val ak = sorted(n - 37)\n        val al = sorted(n - 38)\n        val am = sorted(n - 39)\n        val an = sorted(n - 40)\n        val ao = sorted(n - 41)\n        val ap = sorted(n - 42)\n        val aq = sorted(n - 43)\n        val ar = sorted(n - 44)\n        val as =\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmphenwql_1.scala:52:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mas\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmphenwql_1.scala:21:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn\u001b[0m = sorted(n - \u001b[31m14\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mn is already defined as \u001b[33mvalue\u001b[0m \u001b[35mn\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphenwql_1.scala:53:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmphenwql_1.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphenwql_1.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = arr.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9no2lu5j.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9no2lu5j.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9no2lu5j.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = result(max, min)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpeb9i7nwy.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpeb9i7nwy.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpeb9i7nwy.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = result(max, min)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mresult\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeb9i7nwy.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeb9i7nwy.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvr_we4ma.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvr_we4ma.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvr_we4ma.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var max2 = arr.filter(_ != max).max\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpo5eoo9mo.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpo5eoo9mo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpo5eoo9mo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = arr.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        max(a * b * c, a * d * e, a * d * f, a * e * f, a * b * d, a * b * e, a * b * f, a * c * d, a * c * e, a * c * f)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmp2p04l1yx.scala:14:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        max(a * b * c, a * d * e, a * d * f, a * e * f, a * b * d, a * b * e, a * b * f, a * c * d, a * c * e, a * c * f)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mmax\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mscala.math\u001b[0m with types\n\u001b[31m   |\u001b[0m (x: Double, y: Double): Double\n\u001b[31m   |\u001b[0m (x: Float, y: Float): Float\n\u001b[31m   |\u001b[0m (x: Long, y: Long): Long\n\u001b[31m   |\u001b[0m (x: Int, y: Int): Int\n\u001b[31m   |\u001b[0mmatch arguments (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2p04l1yx.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2p04l1yx.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2p04l1yx.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0) * arr(1)\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkjtvmd7u.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkjtvmd7u.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkjtvmd7u.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val penultimate = sorted(n - 3)\n        val antepenultimate = sorted(n - 4)\n        val max1 = last * secondLast\n        val max2 = penultimate * antepenultimate\n        if (max1 > max2) max1 else max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwmg4dld7.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwmg4dld7.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwmg4dld7.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpgfl0gnw8.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * secondMax, min * secondMin)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgfl0gnw8.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgfl0gnw8.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgfl0gnw8.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = max * arr(i)\n            val b = min * arr(i)\n            max = max(a, b, arr(i))\n            min = min(a, b, arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7agpl844.scala:12:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            max = max(a, b, arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7agpl844.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            min = min(a, b, arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7agpl844.scala:14:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7agpl844.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7agpl844.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            val temp = max\n            max = max(max * arr(i), min * arr(i), arr(i))\n            min = min(temp * arr(i), min * arr(i), arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu2inm1su.scala:11:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            max = max(max * arr(i), min * arr(i), arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu2inm1su.scala:12:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            min = min(temp * arr(i), min * arr(i), arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpu2inm1su.scala:13:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu2inm1su.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu2inm1su.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpsc93m_8n.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val max = sorted(n - 1)\n        val secondMax = sorted(n - 2)\n        val min = sorted(0)\n        val secondMin = sorted(1)\n        if (max < 0) max * secondMax\n        else if (min > 0) max * secondMax\n        else max * secondMin\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpend8tpej.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpend8tpej.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpend8tpej.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzztqr7mt.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        return max(sorted(0) * sorted(1), sorted(sorted.length - 1) * sorted(sorted.length - 2))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpdz8a8vct.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdz8a8vct.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdz8a8vct.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = arr(i)\n            if (a > max) {\n                max2 = max\n                max = a\n            } else if (a > max2) {\n                max2 = a\n            }\n            if (a < min) {\n                min2 = min\n                min = a\n            } else if (a < min2) {\n                min2 = a\n            }\n        }\n        max(max * max2, min * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmphbeaehx2.scala:25:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m        max(max * max2, min * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmphbeaehx2.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphbeaehx2.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphbeaehx2.scala:30:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:30:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:31:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        max(sorted.last * sorted(sorted.length - 2), sorted.head * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptxudi6tg.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptxudi6tg.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptxudi6tg.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            }\n            else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmprt2v3ie8.scala:19:25 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            maxProduct = max(maxProduct, max)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmprt2v3ie8.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmprt2v3ie8.scala:25:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmprt2v3ie8.scala:26:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val len = arr.length\n        val a = sorted(len - 1)\n        val b = sorted(len - 2)\n        a * b\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvhhwhyf_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvhhwhyf_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvhhwhyf_.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzztqr7mt.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzztqr7mt.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = arr.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp76cf7jxl.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76cf7jxl.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp76cf7jxl.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp76cf7jxl.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp76cf7jxl.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val temp = max\n            max = max(max * arr(i), min * arr(i), arr(i))\n            min = min(temp * arr(i), min * arr(i), arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpgla5cwsz.scala:11:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            max = max(max * arr(i), min * arr(i), arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpgla5cwsz.scala:12:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            min = min(temp * arr(i), min * arr(i), arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpgla5cwsz.scala:13:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgla5cwsz.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgla5cwsz.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmapm0eer.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmapm0eer.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmapm0eer.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            var product = arr(i) * max\n            if (product > maxProduct) {\n                maxProduct = product\n                max = arr(i)\n            }\n            product = arr(i) * min\n            if (product > maxProduct) {\n                maxProduct = product\n                min = arr(i)\n            }\n        }\n        return maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpslqhhxg0.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpslqhhxg0.scala:25:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpslqhhxg0.scala:26:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                maxProduct = maxProduct.max(arr(i) * min)\n                max = arr(i)\n            }\n            else if (arr(i) < min) {\n                maxProduct = maxProduct.max(arr(i) * max)\n                min = arr(i)\n            }\n        }\n        return maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpok05md65.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpok05md65.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpok05md65.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = max * arr(i)\n            val b = min * arr(i)\n            max = max(a, b, arr(i))\n            min = min(a, b, arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7agpl844.scala:12:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            max = max(a, b, arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7agpl844.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            min = min(a, b, arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp7agpl844.scala:14:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7agpl844.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7agpl844.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpw5hkfgfw.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * max2, min * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw5hkfgfw.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw5hkfgfw.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw5hkfgfw.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            }\n            else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            }\n            else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp33w5_m0h.scala:26:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m        max(max * secondMax, min * secondMin)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp33w5_m0h.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp33w5_m0h.scala:30:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp33w5_m0h.scala:31:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp09uz29bv.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        max(a * b * c, a * d * e, a * d * f, a * e * f, a * b * d, a * b * e, a * b * f, a * c * d, a * c * e, a * c * f, b * c * d, b * c * e, b * c * f, b * d * e, b * d * f, b * e * f, c * d * e, c * d * f, c * e * f, d * e * f)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpgi6snqg3.scala:14:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m        max(a * b * c, a * d * e, a * d * f, a * e * f, a * b * d, a * b * e, a * b * f, a * c * d, a * c * e, a * c * f, b * c * d, b * c * e, b * c * f, b * d * e, b * d * f, b * e * f, c * d * e, c * d * f, c * e * f, d * e * f)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mmax\u001b[0m in \u001b[33mpackage\u001b[0m \u001b[35mscala.math\u001b[0m with types\n\u001b[31m   |\u001b[0m (x: Double, y: Double): Double\n\u001b[31m   |\u001b[0m (x: Float, y: Float): Float\n\u001b[31m   |\u001b[0m (x: Long, y: Long): Long\n\u001b[31m   |\u001b[0m (x: Int, y: Int): Int\n\u001b[31m   |\u001b[0mmatch arguments (Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long, Long)\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgi6snqg3.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgi6snqg3.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgi6snqg3.scala:19:11 ----------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val product1 = sorted(n - 1) * sorted(n - 2)\n        val product2 = sorted(0) * sorted(1)\n        max(product1, product2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp6uyrq76b.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6uyrq76b.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6uyrq76b.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2i2ln_i8.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2i2ln_i8.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2i2ln_i8.scala:25:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        (sorted(n - 1) * sorted(n - 2)) max (sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var maxProduct = arr(0)\n        for (i <- 1 until arr.length) {\n            val curr = arr(i)\n            val tempMax = max\n            max = max(max * curr, min * curr, curr)\n            min = min(tempMax * curr, min * curr, curr)\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpns4bcueq.scala:12:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            max = max(max * curr, min * curr, curr)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpns4bcueq.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            min = min(tempMax * curr, min * curr, curr)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpns4bcueq.scala:14:25 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            maxProduct = max(maxProduct, max)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpns4bcueq.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpns4bcueq.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n        }\n        max * secondMax\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp3ez0sluf.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3ez0sluf.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3ez0sluf.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        for (i <- arr) {\n            if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max1 * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_uni6ldy.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_uni6ldy.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_uni6ldy.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        return max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var maxIndex = arr.indexOf(max)\n        arr.remove(maxIndex)\n        var max2 = arr.max\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3hglcz0c.scala:8:12 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        arr.remove(maxIndex)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m     value remove is not a member of List[Long] - did you mean arr.reduce?\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3hglcz0c.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3hglcz0c.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3hglcz0c.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0) * arr(1)\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkjtvmd7u.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkjtvmd7u.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkjtvmd7u.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        for (i <- arr) {\n            if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max1 * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length - 1\n        max(sorted(n) * sorted(n - 1), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123755,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4fqovwq6.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4fqovwq6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4fqovwq6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val lastTwo = last * secondLast\n        val first = sorted(0)\n        val second = sorted(1)\n        val firstTwo = first * second\n        if (lastTwo > firstTwo) lastTwo else firstTwo\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkirp_ohj.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkirp_ohj.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkirp_ohj.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val last = sorted.last\n        val secondLast = sorted(sorted.length - 2)\n        val first = sorted.head\n        val second = sorted(1)\n        max(last * secondLast, first * second)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpw8gr7w5k.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw8gr7w5k.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw8gr7w5k.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        return max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        max(a * b * c, a * d * e)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val len = sorted.length\n        val a = sorted(len - 1)\n        val b = sorted(len - 2)\n        val c = sorted(len - 3)\n        val d = sorted(len - 4)\n        val e = sorted(len - 5)\n        val f = sorted(len - 6)\n        val g = sorted(len - 7)\n        val h = sorted(len - 8)\n        val i = sorted(len - 9)\n        val j = sorted(len - 10)\n        val k = sorted(len - 11)\n        val l = sorted(len - 12)\n        val m = sorted(len - 13)\n        val n = sorted(len - 14)\n        val o = sorted(len - 15)\n        val p = sorted(len - 16)\n        val q = sorted(len - 17)\n        val r = sorted(len - 18)\n        val s = sorted(len - 19)\n        val t = sorted(len - 20)\n        val u = sorted(len - 21)\n        val v = sorted(len - 22)\n        val w = sorted(len - 23)\n        val x = sorted(len - 24)\n        val y = sorted(len - 25)\n        val z = sorted(len - 26)\n        val aa = sorted(len - 27)\n        val bb = sorted(len - 28)\n        val cc = sorted(len - 29)\n        val dd = sorted(len - 30)\n        val ee = sorted(len - 31)\n        val ff = sorted(len - 32)\n        val gg = sorted(len - 33)\n        val hh = sorted(len - 34)\n        val ii = sorted(len - 35)\n        val jj = sorted(len - 36)\n        val kk = sorted(len - 37)\n        val ll = sorted(len - 38)\n        val mm = sorted(len - 39)\n        val nn = sorted(len - 40)\n        val oo = sorted(len - 41)\n        val pp = sorted(len - 42)\n        val qq = sorted(len - 43)\n        val rr = sorted(len - 44)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjokm0k8r.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjokm0k8r.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjokm0k8r.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjokm0k8r.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n        }\n        max * secondMax\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpu_gbha05.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu_gbha05.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu_gbha05.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val last = sorted.last\n        val secondLast = sorted(sorted.length - 2)\n        last * secondLast\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp6q6thgmm.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6q6thgmm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6q6thgmm.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(0)\n        var min = arr(0)\n        var secondMin = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123755,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpvwgcsuu_.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * secondMax, min * secondMin)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvwgcsuu_.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvwgcsuu_.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvwgcsuu_.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxlo7wiz4.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val secondFirst = sorted(1)\n        val first = sorted(0)\n        if (last * secondLast > secondFirst * first) last * secondLast else secondFirst * first\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            val a = arr(i)\n            val b = max * a\n            val c = min * a\n            max = max(max(b, c), a)\n            min = min(min(b, c), a)\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123725,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            max = max(max(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:13:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            max = max(max(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:14:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            min = min(min(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:14:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            min = min(min(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp8hvol0mu.scala:15:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hvol0mu.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.to",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var maxProduct = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = max * arr(i)\n            val b = min * arr(i)\n            max = max(a, b, arr(i))\n            min = min(a, b, arr(i))\n            maxProduct = max(maxProduct, max)\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpexsknema.scala:12:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m            max = max(a, b, arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpexsknema.scala:13:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m            min = min(a, b, arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpexsknema.scala:14:25 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            maxProduct = max(maxProduct, max)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpexsknema.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpexsknema.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        arr.sortWith(_ > _).take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:9:11 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m    Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        arr.sortWith(_ > _).take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:9:11 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m    Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = 0L\n        var max1 = 0L\n        var max2 = 0L\n        var min1 = 0L\n        var min2 = 0L\n        for (i <- arr) {\n            if (i > max) {\n                max2 = max1\n                max1 = max\n                max = i\n            } else if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n            if (i < min1) {\n                min2 = min1\n                min1 = i\n            } else if (i < min2) {\n                min2 = i\n            }\n        }\n        max(max1 * max2, min1 * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123755,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpt5giwy5e.scala:29:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m        max(max1 * max2, min1 * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt5giwy5e.scala:32:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt5giwy5e.scala:33:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt5giwy5e.scala:34:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp09uz29bv.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdn_bgdj5.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdn_bgdj5.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(1)\n        var min = arr(0)\n        var secondMin = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            } else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n            if (arr(i) < min) {\n                secondMin = min\n                min = arr(i)\n            } else if (arr(i) < secondMin) {\n                secondMin = arr(i)\n            }\n        }\n        max(max * secondMax, min * secondMin)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp81c2c5dj.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * secondMax, min * secondMin)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp81c2c5dj.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > maxProduct) {\n                    maxProduct = product\n                    max = max(arr(i), arr(j))\n                    min = min(arr(i), arr(j))\n                }\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpizci8xo8.scala:14:26 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                    max = max(arr(i), arr(j))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpizci8xo8.scala:15:26 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                    min = min(arr(i), arr(j))\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpizci8xo8.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpizci8xo8.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpizci8xo8.scala:24:11 -----------------------------------------\u001b[0m\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123755,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpw5sr742g.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw5sr742g.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpw5sr742g.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        return max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiiychvg9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = result(max, min)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123726,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpeb9i7nwy.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpeb9i7nwy.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpeb9i7nwy.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = result(max, min)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mresult\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeb9i7nwy.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeb9i7nwy.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(0) * sorted(1), sorted(n - 1) * sorted(n - 2))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpn1jghxtr.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn1jghxtr.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn1jghxtr.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvr_we4ma.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvr_we4ma.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvr_we4ma.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val o = sorted(n - 14)\n        val p = sorted(n - 15)\n        val q = sorted(n - 16)\n        val r = sorted(n - 17)\n        val s = sorted(n - 18)\n        val t = sorted(n - 19)\n        val u = sorted(n - 20)\n        val v = sorted(n - 21)\n        val w = sorted(n - 22)\n        val x = sorted(n - 23)\n        val y = sorted(n - 24)\n        val z = sorted(n - 25)\n        val aa = sorted(n - 26)\n        val bb = sorted(n - 27)\n        val cc = sorted(n - 28)\n        val dd = sorted(n - 29)\n        val ee = sorted(n - 30)\n        val ff = sorted(n - 31)\n        val gg = sorted(n - 32)\n        val hh = sorted(n - 33)\n        val ii = sorted(n - 34)\n        val jj = sorted(n - 35)\n        val kk = sorted(n - 36)\n        val ll = sorted(n - 37)\n        val mm = sorted(n - 38)\n        val nn = sorted(n - 39)\n        val oo = sorted(n - 40)\n        val pp = sorted(n - 41)\n        val qq = sorted(n - 42)\n        val rr = sorted(n - 43)\n        val ss = sorted(n - 44)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjq0gecjr.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjq0gecjr.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjq0gecjr.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjq0gecjr.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        if (arr.length == 0) return 0\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            val a = arr(i)\n            val b = max * a\n            val c = min * a\n            max = max(max(b, c), a)\n            min = min(min(b, c), a)\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123756,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp77446095.scala:14:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            max = max(max(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp77446095.scala:14:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m            max = max(max(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp77446095.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            min = min(min(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp77446095.scala:15:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            min = min(min(b, c), a)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp77446095.scala:16:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp77446095.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.to",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:30:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:31:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpsc93m_8n.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var secondMax = arr(1)\n        if (arr(1) > arr(0)) {\n            max = arr(1)\n            secondMax = arr(0)\n        }\n        for (i <- 2 to arr.length - 1) {\n            if (arr(i) > max) {\n                secondMax = max\n                max = arr(i)\n            }\n            else if (arr(i) > secondMax) {\n                secondMax = arr(i)\n            }\n        }\n        max * secondMax\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqjxjhxgu.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqjxjhxgu.scala:25:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqjxjhxgu.scala:26:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                maxProduct = maxProduct.max(arr(i) * min)\n                max = arr(i)\n            } else if (arr(i) < min) {\n                maxProduct = maxProduct.max(arr(i) * max)\n                min = arr(i)\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp5uzl5iob.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp5uzl5iob.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp5uzl5iob.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        (sorted(n - 1) * sorted(n - 2)) max (sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpi31m3gij.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdn_bgdj5.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdn_bgdj5.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpsc93m_8n.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > 0) {\n                maxProduct = max(maxProduct, maxProduct / min * arr(i))\n                min = min(min, arr(i))\n            } else {\n                maxProduct = max(maxProduct, maxProduct / max * arr(i))\n                max = max(max, arr(i))\n            }\n        }\n        maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpuuz0g0hv.scala:11:29 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                maxProduct = max(maxProduct, maxProduct / min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpuuz0g0hv.scala:12:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                min = min(min, arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpuuz0g0hv.scala:14:29 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                maxProduct = max(maxProduct, maxProduct / max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpuuz0g0hv.scala:15:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m                max = max(max, arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuuz0g0hv.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val n1 = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfdr9qjh7.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfdr9qjh7.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfdr9qjh7.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfdr9qjh7.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfdr9qjh7.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmppylcs3m4.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppylcs3m4.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until arr.length - 1) {\n            for (j <- i + 1 until arr.length) {\n                max = max max (arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxfvbaahf.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxfvbaahf.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxfvbaahf.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                maxProduct = maxProduct.max(min * arr(i))\n                max = arr(i)\n            }\n            else if (arr(i) < min) {\n                maxProduct = maxProduct.max(max * arr(i))\n                min = arr(i)\n            }\n        }\n        return maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123771,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwge071dp.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwge071dp.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwge071dp.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            }\n            else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:30:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8m4iez28.scala:31:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        max(a * b, c * d)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123770,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk6j5d537.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk6j5d537.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk6j5d537.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpkzpcs9s5.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * max2, min * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkzpcs9s5.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkzpcs9s5.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkzpcs9s5.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val secondFirst = sorted(1)\n        val first = sorted(0)\n        if (last * secondLast > secondFirst * first) last * secondLast else secondFirst * first\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) < 0) {\n                val temp = max\n                max = min\n                min = temp\n            }\n            max = max(arr(i), max * arr(i))\n            min = min(arr(i), min * arr(i))\n            result = max(result, max)\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:15:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m            max = max(arr(i), max * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:16:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            min = min(arr(i), min * arr(i))\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  \u001b[33mvariable\u001b[0m \u001b[35mmin\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpdn_bgdj5.scala:17:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            result = max(result, max)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdn_bgdj5.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdn_bgdj5.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val product = arr(i) * arr(j)\n                if (product > max) max = product\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp9p5hgl2q.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        arr.sortWith(_ > _).take(2).product\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:9:11 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m    Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4dmvxgr8.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val max = sorted(n - 1)\n        val secondMax = sorted(n - 2)\n        val min = sorted(0)\n        val secondMin = sorted(1)\n        max(max * secondMax, max * min * secondMin)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp_3nacc3d.scala:12:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        max(max * secondMax, max * min * secondMin)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvalue\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_3nacc3d.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_3nacc3d.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_3nacc3d.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        sorted(n - 1) * sorted(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp3mu59pxp.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3mu59pxp.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3mu59pxp.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp09uz29bv.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp09uz29bv.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr.max\n        var min = arr.min\n        var maxProduct = max * min\n        for (i <- 0 until arr.length) {\n            var product = arr(i) * max\n            if (product > maxProduct) maxProduct = product\n            product = arr(i) * min\n            if (product > maxProduct) maxProduct = product\n        }\n        return maxProduct\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqqxioei7.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqqxioei7.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqqxioei7.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = Long.MinValue\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, arr(i) * arr(j))\n            }\n        }\n        max\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510389,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpsc93m_8n.scala:9:22 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m                max = max(max, arr(i) * arr(j))\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsc93m_8n.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = 0L\n        var max2 = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            }\n            else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpptxx2c9r.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpptxx2c9r.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpptxx2c9r.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val nn = sorted(n - 14)\n        val o = sorted(n - 15)\n        val p = sorted(n - 16)\n        val q = sorted(n - 17)\n        val r = sorted(n - 18)\n        val s = sorted(n - 19)\n        val t = sorted(n - 20)\n        val u = sorted(n - 21)\n        val v = sorted(n - 22)\n        val w = sorted(n - 23)\n        val x = sorted(n - 24)\n        val y = sorted(n - 25)\n        val z = sorted(n - 26)\n        val aa = sorted(n - 27)\n        val bb = sorted(n - 28)\n        val cc = sorted(n - 29)\n        val dd = sorted(n - 30)\n        val ee = sorted(n - 31)\n        val ff = sorted(n - 32)\n        val gg = sorted(n - 33)\n        val hh = sorted(n - 34)\n        val ii = sorted(n - 35)\n        val jj = sorted(n - 36)\n        val kk = sorted(n - 37)\n        val ll = sorted(n - 38)\n        val mm = sorted(n - 39)\n        val nnn = sorted(n - 40)\n        val oo = sorted(n - 41)\n        val pp = sorted(n - 42)\n        val qq = sorted(n - 43)\n        val rr = sorted(n - 44\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2n8ipvzk.scala:52:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2n8ipvzk.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2n8ipvzk.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long a",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max1 = Long.MinValue\n        var max2 = Long.MinValue\n        for (i <- arr) {\n            if (i > max1) {\n                max2 = max1\n                max1 = i\n            } else if (i > max2) {\n                max2 = i\n            }\n        }\n        max1 * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpa4194lzd.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val thirdLast = sorted(n - 3)\n        val first = sorted(0)\n        val second = sorted(1)\n        val third = sorted(2)\n        val a = last * secondLast * thirdLast\n        val b = first * second * third\n        if (a > b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt43i5kut.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt43i5kut.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt43i5kut.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(0)\n        val d = sorted(1)\n        max(a * b, c * d)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123700,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_wk0udm9.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        max(a * b * c, a * d * e)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123699,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptuicc_f2.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        max(a * b * c * d * e * f * g * h * i * j, a * b * c * d * e * f * g * h * i * sorted(0))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1665510390,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp85neoyv3.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp85neoyv3.scala:22:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp85neoyv3.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(1)\n        var min = arr(0)\n        var min2 = arr(1)\n        for (i <- 2 until arr.length) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max * max2\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqz6c0n_e.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        max(sorted(0) * sorted(1), sorted(arr.length - 1) * sorted(arr.length - 2))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx51zh2vu.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx51zh2vu.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx51zh2vu.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(0)\n        val e = sorted(1)\n        val f = sorted(2)\n        max(a * b * c, a * d * e)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqk6hlu5u.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqk6hlu5u.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqk6hlu5u.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        max(sorted(n - 1) * sorted(n - 2), sorted(0) * sorted(1))\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpka0_0995.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var max2 = arr(0)\n        var min = arr(0)\n        var min2 = arr(0)\n        for (i <- 1 to arr.length - 1) {\n            if (arr(i) > max) {\n                max2 = max\n                max = arr(i)\n            } else if (arr(i) > max2) {\n                max2 = arr(i)\n            }\n            if (arr(i) < min) {\n                min2 = min\n                min = arr(i)\n            } else if (arr(i) < min2) {\n                min2 = arr(i)\n            }\n        }\n        max(max * max2, min * min2)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123772,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpgrjy6yit.scala:24:8 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        max(max * max2, min * min2)\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^\u001b[0m\n\u001b[31m   |\u001b[0m        \u001b[33mvariable\u001b[0m \u001b[35mmax\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgrjy6yit.scala:27:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgrjy6yit.scala:28:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgrjy6yit.scala:29:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val a = sorted(n - 1)\n        val b = sorted(n - 2)\n        val c = sorted(n - 3)\n        val d = sorted(n - 4)\n        val e = sorted(n - 5)\n        val f = sorted(n - 6)\n        val g = sorted(n - 7)\n        val h = sorted(n - 8)\n        val i = sorted(n - 9)\n        val j = sorted(n - 10)\n        val k = sorted(n - 11)\n        val l = sorted(n - 12)\n        val m = sorted(n - 13)\n        val o = sorted(n - 14)\n        val p = sorted(n - 15)\n        val q = sorted(n - 16)\n        val r = sorted(n - 17)\n        val s = sorted(n - 18)\n        val t = sorted(n - 19)\n        val u = sorted(n - 20)\n        val v = sorted(n - 21)\n        val w = sorted(n - 22)\n        val x = sorted(n - 23)\n        val y = sorted(n - 24)\n        val z = sorted(n - 25)\n        val aa = sorted(n - 26)\n        val bb = sorted(n - 27)\n        val cc = sorted(n - 28)\n        val dd = sorted(n - 29)\n        val ee = sorted(n - 30)\n        val ff = sorted(n - 31)\n        val gg = sorted(n - 32)\n        val hh = sorted(n - 33)\n        val ii = sorted(n - 34)\n        val jj = sorted(n - 35)\n        val kk = sorted(n - 36)\n        val ll = sorted(n - 37)\n        val mm = sorted(n - 38)\n        val oo = sorted(n - 39)\n        val pp = sorted(n - 40)\n        val qq = sorted(n - 41)\n        val rr = sorted(n - 42)\n        val ss = sorted(n - 43)\n        val tt = sorted(n - 44)\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123701,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxjgpfc_y.scala:52:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxjgpfc_y.scala:54:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxjgpfc_y.scala:55:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxjgpfc_y.scala:56:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        var max = arr(0)\n        var min = arr(0)\n        var result = arr(0)\n        for (i <- 1 until arr.length) {\n            if (arr(i) > 0) {\n                max = max * arr(i)\n                min = min * arr(i)\n            } else {\n                val temp = max\n                max = min * arr(i)\n                min = temp * arr(i)\n            }\n            if (max > result) result = max\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2i2ln_i8.scala:23:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2i2ln_i8.scala:24:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2i2ln_i8.scala:25:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find a pair with highest product from a given array of integers.\n    def maxProduct(arr : List[Long]) : Long = {\n        val sorted = arr.sorted\n        val n = sorted.length\n        val last = sorted(n - 1)\n        val secondLast = sorted(n - 2)\n        val secondFirst = sorted(1)\n        val first = sorted(0)\n        if (last * secondLast > secondFirst * first) last * secondLast else secondFirst * first\n    }\n    def main(args: Array[String]) = {\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 7l.toLong, 0l.toLong, 8l.toLong, 4l.toLong))) == (7l, 8l));\n    assert(maxProduct((List[Long](0l.toLong, -1l.toLong, -2l.toLong, -4l.toLong, 5l.toLong, 0l.toLong, -6l.toLong))) == (-4l, -6l));\n    assert(maxProduct((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (2l, 3l));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong, \u001b[31m7l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, \u001b[31m8l\u001b[0m.toLong, \u001b[31m4l\u001b[0m.toLong))) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m0l\u001b[0m.toLong, -\u001b[31m1l\u001b[0m.toLong, -\u001b[31m2l\u001b[0m.toLong, -\u001b[31m4l\u001b[0m.toLong, \u001b[31m5l\u001b[0m.toLong, \u001b[31m0l\u001b[0m.toLong, -\u001b[31m6l\u001b[0m.toLong))) == (-\u001b[31m4l\u001b[0m, -\u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt17gdvgq.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(maxProduct((List[\u001b[35mLong\u001b[0m](\u001b[31m1l\u001b[0m.toLong, \u001b[31m2l\u001b[0m.toLong, \u001b[31m3l\u001b[0m.toLong))) == (\u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m  Values of types Long and (Long, Long) cannot be compared with == or !=\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_751_check_min_heap",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if the given array represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-array-represents-a-binary-heap/\n    def checkMinHeap(arr : List[Long]) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkMinHeap((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 10l.toLong, 15l.toLong))) == (true));\n    assert(checkMinHeap((List[Long](2l.toLong, 10l.toLong, 4l.toLong, 5l.toLong, 3l.toLong, 15l.toLong))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def helper(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                helper(left) && helper(right)\n            }\n        }\n        helper(0)",
    "        val n = arr.length\n        for (i <- 0 until n) {\n            if (2 * i + 1 < n && arr(i) > arr(2 * i + 1)) return false\n            if (2 * i + 2 < n && arr(i) > arr(2 * i + 2)) return false\n        }\n        return true",
    "        def checkMinHeap(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        val n = arr.length\n        for (i <- 1 until n) {\n            val parent = (i - 1) / 2\n            if (arr(i) < arr(parent)) return false\n        }\n        true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def checkMinHeap(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) false\n                else if (right < arr.length && arr(index) > arr(right)) false\n                else checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length) {\n                if (arr(i) > arr(i * 2 + 1)) false\n                else check(i * 2 + 1)\n            }\n            else if (i * 2 + 2 < arr.length) {\n                if (arr(i) > arr(i * 2 + 2)) false\n                else check(i * 2 + 2)\n            }\n            else true\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        var i = 0\n        while (i < arr.length) {\n            if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) return false\n            if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) return false\n            i += 1\n        }\n        return true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        for (i <- 1 until arr.length) {\n            val parent = (i - 1) / 2\n            if (arr(i) < arr(parent)) return false\n        }\n        return true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(left) < arr(i)) return false\n            if (right < n && arr(right) < arr(i)) return false\n        }\n        return true",
    "        def checkMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def checkMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        if (arr.length == 0) return true\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        if (arr.length == 0) return true\n        for (i <- 0 until arr.length / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n        }\n        return true",
    "        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            return check(arr, left) && check(arr, right)\n        }\n        return check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def checkMinHeap(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        if (arr.size == 1) return true\n        for (i <- 0 until arr.size / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.size && arr(left) < arr(i)) return false\n            if (right < arr.size && arr(right) < arr(i)) return false\n        }\n        return true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(left) < arr(i)) return false\n            if (right < n && arr(right) < arr(i)) return false\n        }\n        return true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) false\n                else if (right < arr.length && arr(index) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = i * 2 + 1\n                val right = i * 2 + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        if (arr.length == 0) return true\n        for (i <- 1 until arr.length) {\n            if (arr(i) < arr((i - 1) / 2)) return false\n        }\n        return true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        var i = 0\n        while (i < arr.length / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            i += 1\n        }\n        true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        val n = arr.length\n        for (i <- 0 until n) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        return true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = index * 2 + 1\n                val right = index * 2 + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = index * 2 + 1\n                val right = index * 2 + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i == 0) check(i + 1)\n            else if (arr(i) >= arr(i / 2)) check(i + 1)\n            else false\n        }\n        check(0)",
    "        def isMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            isMinHeap(arr, left) && isMinHeap(arr, right)\n        }\n        isMinHeap(arr, 0)",
    "        def isMinHeap(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                isMinHeap(left) && isMinHeap(right)\n            }\n        }\n        isMinHeap(0)",
    "        var i = 0\n        while (i < arr.length) {\n            if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) return false\n            if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) return false\n            i += 1\n        }\n        return true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) false\n                else if (right < arr.length && arr(i) > arr(right)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        for (i <- 1 until arr.length) {\n            val parent = (i - 1) / 2\n            if (arr(i) < arr(parent)) return false\n        }\n        true",
    "        if (arr.length == 0) return true\n        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            val leftValid = if (left >= arr.length) true else arr(i) <= arr(left)\n            val rightValid = if (right >= arr.length) true else arr(i) <= arr(right)\n            leftValid && rightValid && check(arr, left) && check(arr, right)\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                val leftValid = if (left < arr.length) arr(i) <= arr(left) else true\n                val rightValid = if (right < arr.length) arr(i) <= arr(right) else true\n                leftValid && rightValid && check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 >= arr.length) true\n            else if (i * 2 + 2 >= arr.length) arr(i) <= arr(i * 2 + 1) && check(i * 2 + 1)\n            else arr(i) <= arr(i * 2 + 1) && arr(i) <= arr(i * 2 + 2) && check(i * 2 + 1) && check(i * 2 + 2)\n        }\n        check(0)",
    "        def isMinHeap(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                isMinHeap(arr, left) && isMinHeap(arr, right)\n            }\n        }\n        isMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(left) < arr(index)) return false\n                if (right < arr.length && arr(right) < arr(index)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(i) > arr(left)) return false\n            if (right < arr.length && arr(i) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        val n = arr.length\n        for (i <- 0 until n) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (2 * i + 1 >= arr.length) return true\n            if (2 * i + 2 >= arr.length) {\n                if (arr(i) > arr(2 * i + 1)) return false\n                return true\n            }\n            if (arr(i) > arr(2 * i + 1) || arr(i) > arr(2 * i + 2)) return false\n            return check(2 * i + 1) && check(2 * i + 2)\n        }\n        return check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = i * 2 + 1\n                val right = i * 2 + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def checkMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i > arr.length / 2 - 1) true\n            else if (2 * i + 1 < arr.length && arr(i) > arr(2 * i + 1)) false\n            else if (2 * i + 2 < arr.length && arr(i) > arr(2 * i + 2)) false\n            else check(2 * i + 1) && check(2 * i + 2)\n        }\n        check(0)",
    "        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i) > arr(i * 2 + 1)) false\n            else if (i * 2 + 2 < arr.length && arr(i) > arr(i * 2 + 2)) false\n            else check(i + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                val leftValid = if (left < arr.length) arr(left) >= arr(i) else true\n                val rightValid = if (right < arr.length) arr(right) >= arr(i) else true\n                leftValid && rightValid && check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i == 0) check(arr, i + 1)\n            else if (arr(i) >= arr((i - 1) / 2)) check(arr, i + 1)\n            else false\n        }\n        check(arr, 0)",
    "        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) return false\n                if (right < arr.length && arr(index) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(arr : List[Long], index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else {\n                val left = 2 * index + 1\n                val right = 2 * index + 2\n                if (left < arr.length && arr(index) > arr(left)) false\n                else if (right < arr.length && arr(index) > arr(right)) false\n                else check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.size) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.size && arr(left) < arr(i)) return false\n                if (right < arr.size && arr(right) < arr(i)) return false\n                check(arr, left) && check(arr, right)\n            }\n        }\n        check(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        if (arr.length == 0) return true\n        val n = arr.length\n        for (i <- 0 until n / 2) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(i) > arr(left)) return false\n            if (right < n && arr(i) > arr(right)) return false\n        }\n        return true",
    "        for (i <- 1 until arr.length) {\n            val parent = (i - 1) / 2\n            if (arr(parent) > arr(i)) return false\n        }\n        true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i * 2 + 1 < arr.length && arr(i * 2 + 1) < arr(i)) false\n            else if (i * 2 + 2 < arr.length && arr(i * 2 + 2) < arr(i)) false\n            else check(i * 2 + 1) && check(i * 2 + 2)\n        }\n        check(0)",
    "        def checkMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                checkMinHeap(arr, left) && checkMinHeap(arr, right)\n            }\n        }\n        checkMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(index : Int) : Boolean = {\n            if (index >= arr.length) true\n            else if (index * 2 + 1 < arr.length && arr(index) > arr(index * 2 + 1)) false\n            else if (index * 2 + 2 < arr.length && arr(index) > arr(index * 2 + 2)) false\n            else check(index + 1)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) return true\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < arr.length && arr(left) < arr(i)) return false\n            if (right < arr.length && arr(right) < arr(i)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        val n = arr.length\n        for (i <- (0 until n / 2)) {\n            val left = 2 * i + 1\n            val right = 2 * i + 2\n            if (left < n && arr(left) < arr(i)) return false\n            if (right < n && arr(right) < arr(i)) return false\n        }\n        true",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) return false\n                if (right < arr.length && arr(right) < arr(i)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                val leftValid = if (left < arr.length) arr(i) <= arr(left) else true\n                val rightValid = if (right < arr.length) arr(i) <= arr(right) else true\n                leftValid && rightValid && check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def checkMinHeap(arr : List[Long], i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else if (i == 0) checkMinHeap(arr, 1)\n            else if (i * 2 + 1 < arr.length) {\n                if (arr(i) < arr(i / 2) && arr(i) < arr(i * 2) && arr(i) < arr(i * 2 + 1)) checkMinHeap(arr, i + 1)\n                else false\n            }\n            else if (i * 2 < arr.length) {\n                if (arr(i) < arr(i / 2) && arr(i) < arr(i * 2)) checkMinHeap(arr, i + 1)\n                else false\n            }\n            else true\n        }\n        checkMinHeap(arr, 0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(left) < arr(i)) false\n                else if (right < arr.length && arr(right) < arr(i)) false\n                else check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(index : Int) : Boolean = {\n            if (index >= arr.length) return true\n            val left = 2 * index + 1\n            val right = 2 * index + 2\n            if (left < arr.length && arr(index) > arr(left)) return false\n            if (right < arr.length && arr(index) > arr(right)) return false\n            check(left) && check(right)\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)",
    "        def check(i : Int) : Boolean = {\n            if (i >= arr.length) true\n            else {\n                val left = 2 * i + 1\n                val right = 2 * i + 2\n                if (left < arr.length && arr(i) > arr(left)) return false\n                if (right < arr.length && arr(i) > arr(right)) return false\n                check(left) && check(right)\n            }\n        }\n        check(0)"
  ]
}
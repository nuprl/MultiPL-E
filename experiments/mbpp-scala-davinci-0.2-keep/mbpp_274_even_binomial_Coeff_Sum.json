{
  "name": "mbpp_274_even_binomial_Coeff_Sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function that takes in a positive integer n and finds the sum of even index binomial coefficients.\n    def evenBinomialCoeffSum(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_274_even_binomial_Coeff_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(evenBinomialCoeffSum((4l)) == (8l));\n    assert(evenBinomialCoeffSum((6l)) == (32l));\n    assert(evenBinomialCoeffSum((2l)) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        val dp = Array.fill(n.toInt + 1)(0L)\n        dp(0) = 1\n        for (i <- 1 to n.toInt) {\n            for (j <- min(i, n.toInt) to 1 by -1) {\n                dp(j) += dp(j - 1)\n            }\n        }\n        dp.filter(_ % 2 == 0).sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        val dp = Array.fill(n.toInt + 1)(0L)\n        dp(0) = 1\n        for (i <- 1 to n.toInt) {\n            for (j <- i to 1 by -1) {\n                dp(j) += dp(j - 1)\n            }\n        }\n        dp.zipWithIndex.filter(x => x._2 % 2 == 0).map(x => x._1).sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n.toInt by 2) {\n            sum += binomialCoeff(n, i)\n        }\n        return sum"
  ]
}
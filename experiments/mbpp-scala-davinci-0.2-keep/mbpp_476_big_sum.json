{
  "name": "mbpp_476_big_sum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the sum of the largest and smallest value in a given array.\n    def bigSum(nums : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_476_big_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(bigSum((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (4l));\n    assert(bigSum((List[Long](-1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))) == (3l));\n    assert(bigSum((List[Long](2l.toLong, 3l.toLong, 6l.toLong))) == (8l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        var min = Long.MaxValue\n        var max = Long.MinValue\n        for (num <- nums) {\n            if (num < min) min = num\n            if (num > max) max = num\n        }\n        min + max",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        nums.max + nums.min",
    "        nums.max + nums.min",
    "        nums.max + nums.min",
    "        val min = nums.min\n        val max = nums.max\n        min + max",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val min = nums.min\n        val max = nums.max\n        min + max",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sortWith(_ < _)\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted(0) + sorted(sorted.length - 1)",
    "        var min = Long.MaxValue\n        var max = Long.MinValue\n        for (num <- nums) {\n            if (num < min) min = num\n            if (num > max) max = num\n        }\n        max + min",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        nums.max + nums.min",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sortWith(_ < _)\n        sorted(0) + sorted(sorted.length - 1)",
    "        val sorted = nums.sorted\n        sorted(sorted.length - 1) + sorted(0)",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        nums.max + nums.min",
    "        var max = nums(0)\n        var min = nums(0)\n        for (i <- 1 until nums.length) {\n            if (nums(i) > max) max = nums(i)\n            if (nums(i) < min) min = nums(i)\n        }\n        max + min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sortedNums = nums.sorted\n        sortedNums.head + sortedNums.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        nums.max + nums.min",
    "        nums.max + nums.min",
    "        var min = Long.MaxValue\n        var max = Long.MinValue\n        for (num <- nums) {\n            if (num < min) min = num\n            if (num > max) max = num\n        }\n        max + min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sortWith(_ < _)\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        nums.max + nums.min",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        var max = Long.MinValue\n        var min = Long.MaxValue\n        for (i <- 0 until nums.length) {\n            if (nums(i) > max) max = nums(i)\n            if (nums(i) < min) min = nums(i)\n        }\n        return max + min",
    "        nums.max + nums.min",
    "        val min = nums.min\n        val max = nums.max\n        min + max",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted(sorted.length - 1) + sorted(0)",
    "        val sorted = nums.sorted\n        sorted(sorted.length - 1) + sorted(0)",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        var max = nums(0)\n        var min = nums(0)\n        for (num <- nums) {\n            if (num > max) max = num\n            if (num < min) min = num\n        }\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        var min = Long.MaxValue\n        var max = Long.MinValue\n        for (num <- nums) {\n            if (num < min) min = num\n            if (num > max) max = num\n        }\n        return max + min",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        val sorted = nums.sortWith(_ < _)\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        nums.max + nums.min",
    "        val min = nums.min\n        val max = nums.max\n        min + max",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sortWith(_ < _)\n        sorted.head + sorted.last",
    "        val min = nums.min\n        val max = nums.max\n        min + max",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted(sorted.length - 1) + sorted(0)",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val min = nums.min\n        val max = nums.max\n        min + max",
    "        nums.sortWith(_ < _).head + nums.sortWith(_ > _).head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        var min = nums(0)\n        var max = nums(0)\n        for (i <- 1 until nums.length) {\n            if (nums(i) < min) min = nums(i)\n            if (nums(i) > max) max = nums(i)\n        }\n        max + min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        var max = Long.MinValue\n        var min = Long.MaxValue\n        for (num <- nums) {\n            if (num > max) max = num\n            if (num < min) min = num\n        }\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        nums.max + nums.min",
    "        var max = Long.MinValue\n        var min = Long.MaxValue\n        for (num <- nums) {\n            if (num > max) max = num\n            if (num < min) min = num\n        }\n        max + min",
    "        val sorted = nums.sorted\n        sorted(sorted.length - 1) + sorted(0)",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted(sorted.length - 1) + sorted(0)",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        nums.max + nums.min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.last + sorted.head",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val max = nums.max\n        val min = nums.min\n        max + min",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last",
    "        val sorted = nums.sorted\n        sorted.head + sorted.last"
  ]
}
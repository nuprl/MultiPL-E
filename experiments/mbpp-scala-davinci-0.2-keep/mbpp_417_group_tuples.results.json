{
  "name": "mbpp_417_group_tuples",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_417_group_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val key = tuple.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ tuple\n            } else {\n                map(key) = List(tuple)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70bi3trp.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70bi3trp.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp70bi3trp.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map += (Input(i) -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = result :+ k\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxc3k7zdw.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxc3k7zdw.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxc3k7zdw.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => (x.split(\" \")(0), x.split(\" \")(1)))\n        val map = new HashMap[String, List[String]]\n        for (tuple <- list) {\n            if (map.contains(tuple._1)) {\n                map(tuple._1) = map(tuple._1) :+ tuple._2\n            } else {\n                map(tuple._1) = List(tuple._2)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += (k + \" \" + v.mkString(\" \"))\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510213,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnia5gv19.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnia5gv19.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnia5gv19.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        var result = List[String]()\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq55q1utc.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq55q1utc.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq55q1utc.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510213,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map += (i -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuq8q26qg.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuq8q26qg.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuq8q26qg.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementsGrouped = firstElements.groupBy(x => x)\n        val firstElementsGroupedFiltered = firstElementsGrouped.filter(x => x._2.length > 1)\n        val firstElementsGroupedFilteredSorted = firstElementsGroupedFiltered.toList.sortBy(x => x._1)\n        firstElementsGroupedFilteredSorted.map(x => x._1)\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp5i4uajz.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp5i4uajz.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp5i4uajz.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val firstElementsGrouped = firstElements.groupBy(x => x)\n        val firstElementsGroupedFiltered = firstElementsGrouped.filter(x => x._2.length > 1)\n        val firstElementsGroupedFilteredSorted = firstElementsGroupedFiltered.toList.sortBy(x => x._1)\n        val result = firstElementsGroupedFilteredSorted.map(x => x._1)\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zziqejj.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zziqejj.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7zziqejj.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groupedTuples = tuples.groupBy(x => x.head)\n        val result = groupedTuples.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\"|\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e2tbapd.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e2tbapd.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7e2tbapd.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => (x._1, x._2.map(y => y._2))).map(x => x._1 + \" \" + x._2.mkString(\" \")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph1zca8dl.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph1zca8dl.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph1zca8dl.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        firstElements.distinct\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj65wvesa.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj65wvesa.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj65wvesa.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]()\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcgcogrrx.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcgcogrrx.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcgcogrrx.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmaw2wn36.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmaw2wn36.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmaw2wn36.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0sik2do5.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0sik2do5.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0sik2do5.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (i <- 0 until Input.size) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for (i <- 0 until Input.size) {\n            if (map(Input(i)) > 1) {\n                result += Input(i)\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510213,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv0pkm0x.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv0pkm0x.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdv0pkm0x.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_fi9p1e.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_fi9p1e.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi_fi9p1e.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val list = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                list += k\n            }\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpemgnrjsr.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpemgnrjsr.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpemgnrjsr.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val map = new HashMap[String, List[String]]\n        for (l <- list) {\n            if (map.contains(l.head)) {\n                map(l.head) = map(l.head) ::: l.tail\n            } else {\n                map(l.head) = l.tail\n            }\n        }\n        map.toList.map(x => x._1 + \",\" + x._2.mkString(\",\")).sorted\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17vflx_f.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17vflx_f.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17vflx_f.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val groups = firstElements.groupBy(x => x)\n        val result = groups.map(x => x._1 + \",\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqb3zps74.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqb3zps74.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqb3zps74.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val grouped = Input.groupBy(x => x.split(\" \")(0))\n        var output = List[String]()\n        for ((k, v) <- grouped) {\n            output = output :+ k + \" \" + v.length\n        }\n        output\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2txtm0jg.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2txtm0jg.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2txtm0jg.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        val list = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) list += k\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl3rl6rsb.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl3rl6rsb.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl3rl6rsb.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, List[String]]()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) = map(i.split(\",\")(0)) :+ i.split(\",\")(1)\n            } else {\n                map(i.split(\",\")(0)) = List(i.split(\",\")(1))\n            }\n        }\n        var result = List[String]()\n        for (i <- map) {\n            result = result :+ i._1 + \",\" + i._2.mkString(\",\")\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepidn9yv.scala:21:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepidn9yv.scala:21:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpepidn9yv.scala:21:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val groupedElements = firstElements.groupBy(x => x)\n        val result = groupedElements.filter(x => x._2.size > 1).map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkj1l0yv2.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkj1l0yv2.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkj1l0yv2.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var output = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                output = output :+ k\n            }\n        }\n        output\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphle97f23.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphle97f23.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphle97f23.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, List[String]]()\n        for (tuple <- Input) {\n            val first = tuple.split(\",\")(0)\n            if (map.contains(first)) {\n                map(first) = map(first) :+ tuple\n            } else {\n                map(first) = List(tuple)\n            }\n        }\n        var result = List[String]()\n        for (key <- map.keys) {\n            result = result :+ key + \":\" + map(key).mkString(\",\")\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122927,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl1maakl.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl1maakl.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjl1maakl.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        val result = groups.map(x => x._1 + \" \" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj2wkvub3.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj2wkvub3.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj2wkvub3.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val input = Input.map(x => x.split(\",\"))\n        val output = input.groupBy(x => x(0)).map(x => x._1 + \":\" + x._2.map(y => y(1)).mkString(\",\")).toList\n        output\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgfs4enlg.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgfs4enlg.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgfs4enlg.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(y => y._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ezf6ahc.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ezf6ahc.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9ezf6ahc.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => (x._1, x._2.map(_._2).toList)).toList.sortBy(_._1)\n        result.map(x => x._1 + \":\" + x._2.mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqo_axyg5.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqo_axyg5.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqo_axyg5.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510213,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList).groupBy(x => x.head).map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\",\")).toList\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnigqjl0z.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnigqjl0z.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnigqjl0z.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(_.split(\" \")(0)).mapValues(_.size).toList.sortBy(_._2)\n        result.map(_._1)\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gp41iku.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gp41iku.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_gp41iku.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var res = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (!map.contains(i.split(\",\")(0))) {\n                map += (i.split(\",\")(0) -> 1)\n            } else {\n                map(i.split(\",\")(0)) += 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                res += i._1\n            }\n        }\n        return res.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjlyi96t.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjlyi96t.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdjlyi96t.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, List[String]]()\n        for (i <- Input) {\n            val temp = i.split(\" \")\n            if (map.contains(temp(0))) {\n                map(temp(0)) = map(temp(0)) :+ temp(1)\n            } else {\n                map(temp(0)) = List(temp(1))\n            }\n        }\n        val result = ListBuffer[String]()\n        for (i <- map) {\n            result += i._1 + \" \" + i._2.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp076ohykw.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp076ohykw.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp076ohykw.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, List[String]]()\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ i\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5zvbk_sg.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5zvbk_sg.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5zvbk_sg.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val commonElements = firstElements.filter(x => firstElements.count(_ == x) > 1)\n        commonElements.distinct\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd93mtcs9.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd93mtcs9.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd93mtcs9.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x(0))\n        val firstElementsMap = firstElements.groupBy(x => x).map(x => (x._1, x._2.size)).toList\n        val max = firstElementsMap.map(x => x._2).max\n        firstElementsMap.filter(x => x._2 == max).map(x => x._1)\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71qjilp_.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71qjilp_.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71qjilp_.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, List[String]]()\n        for (i <- Input) {\n            var key = i.split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ i\n            } else {\n                map += (key -> List(i))\n            }\n        }\n        var result = List[String]()\n        for (i <- map.keys) {\n            result = result :+ i + \":\" + map(i).mkString(\",\")\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmf1cd2me.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmf1cd2me.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmf1cd2me.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val map = new HashMap[String, List[String]]\n        for (i <- list) {\n            if (map.contains(i.head)) {\n                map(i.head) = map(i.head) ::: i.tail\n            } else {\n                map(i.head) = i.tail\n            }\n        }\n        map.toList.map(x => x._1 + \",\" + x._2.mkString(\",\"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122952,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk80tu9e6.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk80tu9e6.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk80tu9e6.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val x = Input.map(x => x.split(\",\").toList)\n        val y = x.map(x => x.map(x => x.split(\" \").toList))\n        val z = y.map(x => x.map(x => x.map(x => x.split(\"-\").toList)))\n        val a = z.map(x => x.map(x => x.map(x => x.map(x => x.split(\"/\").toList))))\n        val b = a.map(x => x.map(x => x.map(x => x.map(x => x.map(x => x.map(x => x.mkString(\"\")))))))\n        val c = b.map(x => x.map(x => x.map(x => x.map(x => x.map(x => x.map(x => x.mkString(\"\")))))))\n        val d = c.map(x => x.map(x => x.map(x => x.map(x => x.map(x => x.mkString(\"\"))))))\n        val e = d.map(x => x.map(x => x.map(x => x.map(x => x.mkString(\"\")))))\n        val f = e.map(x => x.map(x => x.map(x => x.mkString(\"\"))))\n        val g = f.map(x => x.map(x => x.mkString(\"\")))\n        val h = g.map(x => x.mkString(\"\"))\n        val i = h.map(x => x.split(\" \").toList)\n        val j = i.map(x => x.map(x => x.split(\"-\").toList))\n        val k = j.map(x => x.map(x => x.map(x => x.split(\"/\").toList)))\n        val l = k.map(x => x.map(x => x.map(x => x.map(x => x.map(x => x.mkString(\"\"))))))\n        val m = l.map(x => x.map(x => x.map(x => x.map(\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpskumarro.scala:21:55 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = l.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpskumarro.scala:10:84 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mb\u001b[0m = a.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.mkString(\u001b[31m\"\"\u001b[0m)))))))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                  ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m       value mkString is not a member of Char - did you mean x.toString?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpskumarro.scala:11:73 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mc\u001b[0m = b.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.map(\u001b[36mx\u001b[0m => x.mkString(\u001b[31m\"\"\u001b[0m)))))))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                       ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue map is not a member of Nothing, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val map = new HashMap[String, List[String]]\n        for (i <- list) {\n            if (map.contains(i(0))) {\n                val l = map(i(0))\n                map.put(i(0), i(1) :: l)\n            } else {\n                map.put(i(0), List(i(1)))\n            }\n        }\n        val result = new ListBuffer[String]\n        for (i <- map) {\n            result += i._1 + \":\" + i._2.mkString(\",\")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpym2h09dk.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpym2h09dk.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpym2h09dk.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map += (Input(i) -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm4w54yi.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm4w54yi.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm4w54yi.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map += (Input(i) -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122953,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm4w54yi.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm4w54yi.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkm4w54yi.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \").map(y => y.toInt).toList)\n        val grouped = tuples.groupBy(x => x.head)\n        val result = grouped.map(x => x._1.toString + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4ofs3i2.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4ofs3i2.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi4ofs3i2.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => (x.split(\" \")(0), x.split(\" \")(1)))\n        val map = Map[String, List[String]]()\n        for (tuple <- tuples) {\n            if (map.contains(tuple._1)) {\n                map(tuple._1) = tuple._2 :: map(tuple._1)\n            } else {\n                map(tuple._1) = List(tuple._2)\n            }\n        }\n        val result = ListBuffer[String]()\n        for (key <- map.keys) {\n            result += key + \" \" + map(key).mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj0zlnelt.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj0zlnelt.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj0zlnelt.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n      val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n      result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplja9yb7p.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplja9yb7p.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplja9yb7p.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val map = new HashMap[String, List[String]]\n        tuples.foreach(x => {\n            if (map.contains(x(0))) {\n                map(x(0)) = map(x(0)) :+ x(1)\n            } else {\n                map(x(0)) = List(x(1))\n            }\n        })\n        map.toList.map(x => x._1 + \":\" + x._2.mkString(\",\")).sorted\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gpb2p4z.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gpb2p4z.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2gpb2p4z.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x(0))\n        val firstElementGroups = firstElements.groupBy(x => x)\n        val firstElementGroupsFiltered = firstElementGroups.filter(x => x._2.length > 1)\n        val firstElementGroupsFilteredSorted = firstElementGroupsFiltered.toList.sortBy(x => x._1)\n        val firstElementGroupsFilteredSortedMapped = firstElementGroupsFilteredSorted.map(x => x._1)\n        firstElementGroupsFilteredSortedMapped\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_xjkg6ij.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_xjkg6ij.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_xjkg6ij.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fnx6_ne.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val l = Input.map(x => x.split(\" \").toList).groupBy(x => x.head).map(x => x._2.map(y => y.tail.mkString(\" \"))).toList\n        l.map(x => x.mkString(\" \"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_784tkyd.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_784tkyd.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_784tkyd.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map(i.split(\" \")(0)) = 1\n            }\n        }\n        val result = new ListBuffer[String]\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoolg24tl.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoolg24tl.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoolg24tl.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwgj6mh2i.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwgj6mh2i.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwgj6mh2i.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, String]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            val value = i.split(\" \")(1)\n            if (map.contains(key)) {\n                val oldValue = map(key)\n                map(key) = oldValue + \" \" + value\n            } else {\n                map(key) = value\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += (k + \" \" + v)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fszn_c6.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fszn_c6.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5fszn_c6.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \").toList).groupBy(x => x.head).map(x => x._2.map(y => y.tail).flatten).toList\n        val res = list.map(x => x.head + \" \" + x.tail.mkString(\" \"))\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd9aafp4i.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd9aafp4i.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd9aafp4i.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val grouped = first.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => (x._1, x._2.map(_._2))).map(x => x._1 + \":\" + x._2.mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgj6liy1.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgj6liy1.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdgj6liy1.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val key = tuple.split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ tuple\n            } else {\n                map(key) = List(tuple)\n            }\n        }\n        val result = new ListBuffer[String]\n        for (key <- map.keys) {\n            result += key + \":\" + map(key).mkString(\",\")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6x5aqudj.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6x5aqudj.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6x5aqudj.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(x => x.head)\n        grouped.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\";\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9yho622.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9yho622.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9yho622.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                result = Input(i) :: result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122970,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rvdadzh.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rvdadzh.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rvdadzh.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementMap = firstElements.groupBy(x => x)\n        val firstElementList = firstElementMap.map(x => (x._1, x._2.length)).toList\n        val max = firstElementList.maxBy(x => x._2)\n        val result = firstElementList.filter(x => x._2 == max._2).map(x => x._1)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1eh4l7.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1eh4l7.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1eh4l7.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val grouped = first.groupBy(x => x)\n        val result = grouped.map(x => (x._1, x._2.length)).toList.sortBy(x => x._2).reverse.map(x => x._1)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyktmk5xn.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyktmk5xn.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyktmk5xn.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val res = ListBuffer[String]()\n        for ((k, v) <- map) {\n            if (v > 1) {\n                res += k\n            }\n        }\n        return res.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfm2qi5zu.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfm2qi5zu.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfm2qi5zu.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val map = new HashMap[String, List[String]]\n        for (i <- list) {\n            if (map.contains(i(0))) {\n                map(i(0)) = map(i(0)) :+ i(1)\n            } else {\n                map(i(0)) = List(i(1))\n            }\n        }\n        map.toList.map(x => x._1 + \":\" + x._2.mkString(\",\")).sorted\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yezxg6d.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yezxg6d.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yezxg6d.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \"))\n        val map = new HashMap[String, List[String]]\n        for (i <- list) {\n            if (map.contains(i(0))) {\n                map(i(0)) = map(i(0)) :+ i(1)\n            } else {\n                map(i(0)) = List(i(1))\n            }\n        }\n        map.map(x => x._1 + \" \" + x._2.mkString(\" \")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqw741i9a.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqw741i9a.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqw741i9a.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ i\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val groups = first.groupBy(x => x).map(x => (x._1, x._2.length))\n        val max = groups.maxBy(x => x._2)._2\n        val result = groups.filter(x => x._2 == max).map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprcvmxa6x.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprcvmxa6x.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprcvmxa6x.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510213,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmq_nnhbm.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => (x._1, x._2.map(_._2).mkString(\",\"))).toList.sortBy(_._1)\n        result.map(x => x._1 + \",\" + x._2)\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_r4evsk5.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_r4evsk5.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_r4evsk5.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map += (i -> 1)\n            }\n        }\n        var result = List[String]()\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result.reverse\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122971,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcelxlw6q.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcelxlw6q.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcelxlw6q.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var output = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                output = Input(i) :: output\n                map(Input(i)) = 0\n            }\n        }\n        output\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1gyrmk5e.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1gyrmk5e.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1gyrmk5e.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(_._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_9qk9u_t.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_9qk9u_t.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_9qk9u_t.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        var result = List[String]()\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpni760xgv.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpni760xgv.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpni760xgv.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val grouped = firstElements.groupBy(x => x).map(x => (x._1, x._2.size))\n        val result = grouped.filter(x => x._2 > 1).map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub23h1rr.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub23h1rr.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpub23h1rr.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5p7xj51d.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5p7xj51d.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5p7xj51d.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        grouped.map(x => x._1 + \":\" + x._2.map(_._2).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzk4uez0.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzk4uez0.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvzk4uez0.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val groups = tuples.groupBy(x => x(0))\n        val result = groups.map(x => x._1 + \":\" + x._2.map(y => y(1)).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybgioqqi.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybgioqqi.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpybgioqqi.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val map = new HashMap[String, List[String]]\n        for (i <- list) {\n            if (map.contains(i(0))) {\n                map(i(0)) = map(i(0)) ::: List(i(1))\n            } else {\n                map(i(0)) = List(i(1))\n            }\n        }\n        val result = new ListBuffer[String]\n        for (i <- map) {\n            result += i._1 + \",\" + i._2.mkString(\",\")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5p67pu3.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5p67pu3.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe5p67pu3.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val ans = new ListBuffer[String]\n        for (i <- map) {\n            if (i._2 > 1) {\n                ans += i._1\n            }\n        }\n        ans.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiochc_bt.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiochc_bt.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpiochc_bt.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementGroups = firstElements.groupBy(x => x)\n        val firstElementGroupKeys = firstElementGroups.keys.toList\n        firstElementGroupKeys\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp95e6f4y0.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp95e6f4y0.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp95e6f4y0.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                val count = map(i.split(\" \")(0))\n                map.put(i.split(\" \")(0), count + 1)\n            } else {\n                map.put(i.split(\" \")(0), 1)\n            }\n        }\n        for (i <- Input) {\n            if (map(i.split(\" \")(0)) == 1) {\n                result += i\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxihxmrko.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxihxmrko.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxihxmrko.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map += (i -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9syypfxb.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9syypfxb.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9syypfxb.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \")).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        val result = groups.map(x => x._2.map(y => y._2)).map(x => x.mkString(\" \")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfva_u0s4.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfva_u0s4.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfva_u0s4.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val grouped = first.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxhsw0eze.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => x._1 + \",\" + x._2.map(x => x._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a8il06m.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a8il06m.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6a8il06m.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val sorted = grouped.toList.sortBy(x => x._1)\n        val result = sorted.map(x => x._1 + \",\" + x._2.map(y => y._2).mkString(\",\"))\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122988,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6qkpmzk4.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6qkpmzk4.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6qkpmzk4.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \").toList).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        groups.map(x => x._1 + \" \" + x._2.map(y => y._2).mkString(\" \")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr07y61nn.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr07y61nn.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr07y61nn.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (tuple <- Input) {\n            val first = tuple.split(\" \")(0)\n            if (map.contains(first)) {\n                map(first) = tuple :: map(first)\n            } else {\n                map(first) = List(tuple)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += (k + \" \" + v.mkString(\" \"))\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrhl95g5.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrhl95g5.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrhl95g5.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- 0 until Input.length) {\n            val tuple = Input(i).split(\",\")\n            if (map.contains(tuple(0))) {\n                map(tuple(0)) += 1\n            } else {\n                map += (tuple(0) -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyzqi1__a.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyzqi1__a.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyzqi1__a.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for(i <- Input) {\n            var key = i.split(\" \")(0)\n            if(!map.contains(key)) {\n                map += (key -> 1)\n                result += i\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpel42mvsi.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpel42mvsi.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpel42mvsi.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, List[String]]()\n        for (tuple <- Input) {\n            val first = tuple.split(\",\")(0)\n            if (map.contains(first)) {\n                map(first) = map(first) :+ tuple\n            } else {\n                map(first) = List(tuple)\n            }\n        }\n        val result = ListBuffer[String]()\n        for (key <- map.keys) {\n            result += key + \":\" + map(key).mkString(\",\")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122990,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7l2k5cf.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7l2k5cf.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk7l2k5cf.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map.put(Input(i), map(Input(i)) + 1)\n            } else {\n                map.put(Input(i), 1)\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                result += Input(i)\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8rz2yasr.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8rz2yasr.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8rz2yasr.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val list = new ListBuffer[String]()\n        for ((k, v) <- map) {\n            if (v > 1) {\n                list += k\n            }\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg2m84vgg.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg2m84vgg.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg2m84vgg.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\" \")(0))) {\n                map(i.split(\" \")(0)) += 1\n            } else {\n                map += (i.split(\" \")(0) -> 1)\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpausdni73.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpausdni73.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpausdni73.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var Output : List[String] = Nil\n        var map : Map[String, Int] = Map()\n        for (i <- 0 until Input.length) {\n            var tuple : List[String] = Input(i).split(\",\").toList\n            var first : String = tuple(0)\n            if (map.contains(first)) {\n                map(first) += 1\n            } else {\n                map += (first -> 1)\n            }\n        }\n        for (i <- 0 until Input.length) {\n            var tuple : List[String] = Input(i).split(\",\").toList\n            var first : String = tuple(0)\n            if (map(first) > 1) {\n                Output = first :: Output\n            }\n        }\n        return Output\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5qqqxc8m.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5qqqxc8m.scala:27:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5qqqxc8m.scala:27:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList)\n        val first = list.map(x => x.head)\n        val map = first.groupBy(x => x)\n        val result = map.map(x => x._1 + \":\" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw544453t.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw544453t.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw544453t.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val firstElementsMap = firstElements.groupBy(x => x).map(x => (x._1, x._2.length))\n        val max = firstElementsMap.maxBy(x => x._2)\n        val result = firstElementsMap.filter(x => x._2 == max._2).map(x => x._1).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4h_9tgn6.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4h_9tgn6.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4h_9tgn6.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\").toList).groupBy(x => x.head).map(x => x._1 + \":\" + x._2.map(y => y.tail).flatten.mkString(\",\")).toList\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg9h0cwpt.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg9h0cwpt.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg9h0cwpt.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map += (i -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoodubn50.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoodubn50.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpoodubn50.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElement = firstElements.head\n        val result = firstElements.filter(x => x == firstElement)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_rmv6p0.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_rmv6p0.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_rmv6p0.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- 0 until Input.length) {\n            val tuple = Input(i).split(\",\")\n            val key = tuple(0)\n            if (map.contains(key)) {\n                map(key) += 1\n            } else {\n                map(key) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            val tuple = Input(i).split(\",\")\n            val key = tuple(0)\n            if (map(key) > 1) {\n                result += Input(i)\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp130mtjh6.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp130mtjh6.scala:27:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp130mtjh6.scala:27:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, List[String]]()\n        for (i <- 0 until Input.size) {\n            var temp = Input(i).split(\" \")\n            var key = temp(0)\n            var value = temp(1)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ value\n            } else {\n                map += (key -> List(value))\n            }\n        }\n        for (i <- map.keys) {\n            result = result :+ i + \" \" + map(i).mkString(\" \")\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123008,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf2yn4l43.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf2yn4l43.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf2yn4l43.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result += i._1\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122870,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3ul4t8g.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3ul4t8g.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3ul4t8g.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            val key = Input(i).substring(0, 1)\n            if (map.contains(key)) {\n                map(key) += 1\n            } else {\n                map(key) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            val key = Input(i).substring(0, 1)\n            if (map(key) > 1) {\n                result += Input(i)\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpesed01se.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpesed01se.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpesed01se.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\",\")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        val result = new ListBuffer[String]\n        for (i <- map.keys) {\n            val value = map(i)\n            result += value.mkString(\";\")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123008,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjk2xvcxl.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjk2xvcxl.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjk2xvcxl.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp64vvs0zy.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        var result = List[String]()\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = k :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsjjwp3d.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsjjwp3d.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqsjjwp3d.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => (x._1, x._2.map(y => y._2).toList)).toList\n        result.map(x => x._1 + \" \" + x._2.mkString(\" \"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123008,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyrmqbo4.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyrmqbo4.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyyrmqbo4.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, List[String]]()\n        for (tuple <- Input) {\n            val key = tuple.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ tuple\n            } else {\n                map(key) = List(tuple)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123008,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvxxsrij.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvxxsrij.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcvxxsrij.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val first = tuples.map(x => x.head)\n        val groups = first.groupBy(x => x)\n        val result = groups.map(x => x._1 + \":\" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz477utqb.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz477utqb.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz477utqb.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = result :+ k\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88o4kc85.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88o4kc85.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp88o4kc85.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, List[String]]()\n        for (i <- 0 until Input.length) {\n            var key = Input(i).split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ Input(i)\n            } else {\n                map += (key -> List(Input(i)))\n            }\n        }\n        for (i <- map.keys) {\n            result += (i + \" \" + map(i).mkString(\" \"))\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123008,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcg2czbm7.scala:22:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcg2czbm7.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcg2czbm7.scala:22:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- 0 until Input.length) {\n            val str = Input(i)\n            if (map.contains(str)) {\n                map(str) += 1\n            } else {\n                map(str) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            val str = Input(i)\n            if (map(str) > 1) {\n                result += str\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq58wv87f.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq58wv87f.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq58wv87f.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.size).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp__xj38ah.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val grouped = tuples.groupBy(x => x.head)\n        grouped.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpue1eo8cf.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val output = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            val split = i.split(\",\")\n            val key = split(0)\n            val value = split(1).toInt\n            if (map.contains(key)) {\n                val oldValue = map(key)\n                if (value > oldValue) {\n                    map.put(key, value)\n                }\n            } else {\n                map.put(key, value)\n            }\n        }\n        for ((k, v) <- map) {\n            output += (k + \",\" + v)\n        }\n        output.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4__kyyg3.scala:27:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4__kyyg3.scala:27:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4__kyyg3.scala:27:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\",\")).map(x => (x(0), x(1))).groupBy(_._1).map(x => (x._1, x._2.map(_._2))).toList\n        list.map(x => x._1 + \":\" + x._2.mkString(\",\")).sorted\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2tq9ez_n.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2tq9ez_n.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2tq9ez_n.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            val value = i.split(\" \")(1)\n            if (map.contains(key)) {\n                val list = map(key)\n                map(key) = list :+ value\n            } else {\n                map(key) = List(value)\n            }\n        }\n        val result = new ListBuffer[String]\n        for (i <- map) {\n            result += i._1 + \" \" + i._2.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfvfw2bf.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfvfw2bf.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmfvfw2bf.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val filtered = grouped.filter(x => x._2.size > 1)\n        val result = filtered.map(x => x._1).toList\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x7p7icp.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x7p7icp.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3x7p7icp.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        val result = groups.map(x => x._1 + \":\" + x._2.map(y => y._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb2c94sdz.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb2c94sdz.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb2c94sdz.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groups = tuples.groupBy(x => x.head)\n        groups.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\";\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2xq1pvr.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2xq1pvr.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2xq1pvr.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val first = tuples.map(x => x(0))\n        val grouped = first.groupBy(x => x)\n        val result = grouped.filter(x => x._2.length > 1).map(x => x._1).toList\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppo5umhd2.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppo5umhd2.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppo5umhd2.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val firstElementsGrouped = firstElements.groupBy(x => x)\n        val firstElementsGroupedFiltered = firstElementsGrouped.filter(x => x._2.size > 1)\n        val firstElementsGroupedFilteredSorted = firstElementsGroupedFiltered.toList.sortBy(x => x._1)\n        firstElementsGroupedFilteredSorted.map(x => x._1)\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkt5jivc2.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkt5jivc2.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkt5jivc2.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ i\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((k, v) <- map) {\n            result += (k + \" \" + v.size)\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj21xeah.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj21xeah.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprj21xeah.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) += 1\n            } else {\n                map += (i.split(\",\")(0) -> 1)\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123024,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqqzr3_er.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val input = Input.map(x => x.split(\",\").toList)\n        val result = input.groupBy(x => x.head).map(x => x._1 + \":\" + x._2.map(y => y.tail).flatten.mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123026,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmeo2j_1.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmeo2j_1.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwmeo2j_1.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            var str = Input(i)\n            var key = str.split(\",\")(0)\n            if (map.contains(key)) {\n                map(key) += 1\n            } else {\n                map += (key -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8g2zrb0.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8g2zrb0.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd8g2zrb0.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \").toList).groupBy(x => x.head).map(x => x._1 + \" \" + x._2.length).toList\n        list\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123026,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcg9lcsn.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcg9lcsn.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgcg9lcsn.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \")).map(x => (x(0), x(1)))\n        val map = new HashMap[String, List[String]]\n        for (tuple <- list) {\n            val key = tuple._1\n            val value = tuple._2\n            if (map.contains(key)) {\n                val values = map(key)\n                map(key) = value :: values\n            } else {\n                map(key) = List(value)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((key, values) <- map) {\n            result += key + \" \" + values.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123026,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ubk7iu_.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ubk7iu_.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3ubk7iu_.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            val value = i.split(\" \")(1)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ value\n            } else {\n                map(key) = List(value)\n            }\n        }\n        val result = new ListBuffer[String]\n        for (i <- map) {\n            result += i._1 + \" \" + i._2.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk1eufrwn.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk1eufrwn.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk1eufrwn.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x(0))\n        val firstElementCounts = firstElements.groupBy(x => x).mapValues(x => x.length)\n        val firstElementCountsList = firstElementCounts.toList\n        val firstElementCountsListSorted = firstElementCountsList.sortBy(x => x._2)\n        val firstElementCountsListSortedDescending = firstElementCountsListSorted.reverse\n        val firstElementCountsListSortedDescendingFiltered = firstElementCountsListSortedDescending.filter(x => x._2 > 1)\n        val firstElementCountsListSortedDescendingFilteredMapped = firstElementCountsListSortedDescendingFiltered.map(x => x._1)\n        firstElementCountsListSortedDescendingFilteredMapped\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp47xmg_0v.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp47xmg_0v.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp47xmg_0v.scala:17:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firsts = tuples.map(x => x.head)\n        val groups = firsts.groupBy(x => x)\n        val result = groups.map(x => (x._1, x._2.length)).toList.sortBy(x => x._2).reverse.map(x => x._1)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123026,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3zhjcm8j.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3zhjcm8j.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3zhjcm8j.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \"))\n        val tuplesMap = tuples.groupBy(x => x(0))\n        val result = tuplesMap.map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123026,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp21qdscue.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp21qdscue.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp21qdscue.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ i\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9nooal5f.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) = map(Input(i)) + 1\n            } else {\n                map += Input(i) -> 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = result :+ k\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjpz9sk7c.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjpz9sk7c.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjpz9sk7c.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val list = new ListBuffer[String]\n        for ((k, v) <- map) {\n            if (v > 1) {\n                list += k\n            }\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122909,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr2015_m3.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr2015_m3.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr2015_m3.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) += 1\n            } else {\n                map += (i.split(\",\")(0) -> 1)\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123024,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \").toList).toList\n        val map = new HashMap[String, List[String]]\n        for (x <- list) {\n            if (map.contains(x.head)) {\n                map(x.head) = map(x.head) ::: x\n            } else {\n                map(x.head) = x\n            }\n        }\n        map.values.toList.map(x => x.mkString(\" \"))\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptnzh6atp.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptnzh6atp.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptnzh6atp.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => x.split(\" \").toList)\n        val map = new HashMap[String, List[String]]\n        for (i <- list) {\n            if (map.contains(i(0))) {\n                map(i(0)) = map(i(0)) ::: List(i(1))\n            } else {\n                map(i(0)) = List(i(1))\n            }\n        }\n        map.map(x => x._1 + \" \" + x._2.mkString(\" \")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9fi_c8y.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9fi_c8y.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu9fi_c8y.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => (x._1, x._2.map(_._2).toList)).toList\n        result.map(x => x._1 + \":\" + x._2.mkString(\",\")).sorted\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpltwsbet6.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpltwsbet6.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpltwsbet6.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \"))\n        val first = tuples.map(x => x(0))\n        first.distinct\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphqjd16fu.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphqjd16fu.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphqjd16fu.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\" \").toList)\n        val firstElements = tuples.map(x => x.head)\n        val groupedElements = firstElements.groupBy(x => x)\n        val result = groupedElements.map(x => x._1 + \" \" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprcqq2omq.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprcqq2omq.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprcqq2omq.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\" \")(0))\n        val result = groups.map(x => x._1 + \" \" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp369wthd1.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp369wthd1.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp369wthd1.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = Map[String, List[String]]()\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val value = map(key)\n                map(key) = i :: value\n            } else {\n                map(key) = List(i)\n            }\n        }\n        val result = ListBuffer[String]()\n        for (i <- map.values) {\n            result += i.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmepc7542.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmepc7542.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmepc7542.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val firstElementsGrouped = firstElements.groupBy(x => x)\n        val firstElementsGroupedFiltered = firstElementsGrouped.filter(x => x._2.length > 1)\n        val firstElementsGroupedFilteredSorted = firstElementsGroupedFiltered.toList.sortBy(x => x._1)\n        firstElementsGroupedFilteredSorted.map(x => x._1)\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl53uawuj.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl53uawuj.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl53uawuj.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (!map.contains(i)) {\n                map += (i -> 1)\n            } else {\n                map(i) += 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9xqgpjg3.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9xqgpjg3.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9xqgpjg3.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val grouped = Input.groupBy(x => x.split(\" \")(0))\n        grouped.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp27ioid62.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp27ioid62.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp27ioid62.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v == 1) {\n                result = k :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8f95z63x.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8f95z63x.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8f95z63x.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- 0 until Input.size) {\n            val str = Input(i)\n            if (map.contains(str)) map(str) += 1 else map += (str -> 1)\n        }\n        for (i <- 0 until Input.size) {\n            val str = Input(i)\n            if (map(str) > 1) result += str\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbff3nsqz.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbff3nsqz.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbff3nsqz.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) = map(Input(i)) + 1\n            } else {\n                map += (Input(i) -> 1)\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                result += Input(i)\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvgfc7kh6.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvgfc7kh6.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvgfc7kh6.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val grouped = firstElements.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510214,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp561a2xed.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val grouped = tuples.groupBy(x => x(0))\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(y => y.mkString(\",\")).mkString(\"|\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123043,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm6txa3x.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm6txa3x.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphm6txa3x.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        map.toList.sortBy(_._2).map(_._1).reverse\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zb64jgr.scala:17:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zb64jgr.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6zb64jgr.scala:17:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groups = tuples.groupBy(x => x.head)\n        groups.map(x => x._1 + \":\" + x._2.map(y => y.tail.mkString(\",\")).mkString(\";\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123010,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2xq1pvr.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2xq1pvr.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2xq1pvr.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val list = Input.map(x => (x.split(\" \")(0), x.split(\" \")(1)))\n        val map = new HashMap[String, List[String]]\n        for (tuple <- list) {\n            if (map.contains(tuple._1)) {\n                map(tuple._1) = tuple._2 :: map(tuple._1)\n            } else {\n                map(tuple._1) = List(tuple._2)\n            }\n        }\n        map.map(x => x._1 + \" \" + x._2.mkString(\" \")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123045,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb4pnjss.scala:18:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb4pnjss.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprb4pnjss.scala:18:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) += 1\n            } else {\n                map(i) = 1\n            }\n        }\n        val list = new ListBuffer[String]()\n        for (i <- map) {\n            if (i._2 > 1) {\n                list += i._1\n            }\n        }\n        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx3ad59jt.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx3ad59jt.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx3ad59jt.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length)\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123044,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb9nhiqfe.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb9nhiqfe.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb9nhiqfe.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        for (i <- 0 until Input.length) {\n            var temp = Input(i).split(\",\")\n            result += temp(0)\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123045,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyf962cn.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyf962cn.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuyf962cn.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) += 1\n            } else {\n                map += (i.split(\",\")(0) -> 1)\n            }\n        }\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123024,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptvynfx46.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]()\n        val map = new HashMap[String, Int]()\n        for (tuple <- Input) {\n            val first = tuple.split(\",\")(0)\n            if (map.contains(first)) {\n                map(first) += 1\n            } else {\n                map += (first -> 1)\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123045,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2l1n84t.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2l1n84t.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_2l1n84t.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val map = new HashMap[String, ListBuffer[String]]\n        for (tuple <- tuples) {\n            val key = tuple(0)\n            val value = tuple(1)\n            if (map.contains(key)) {\n                map(key) += value\n            } else {\n                map(key) = ListBuffer(value)\n            }\n        }\n        val result = new ListBuffer[String]\n        for ((key, value) <- map) {\n            result += key + \",\" + value.mkString(\",\")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfwi8162l.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfwi8162l.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfwi8162l.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElement = firstElements.head\n        val firstElementCount = firstElements.count(x => x == firstElement)\n        if (firstElementCount == firstElements.length) List(firstElement)\n        else List()\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphcv2bwa4.scala:14:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphcv2bwa4.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphcv2bwa4.scala:14:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groups = tuples.groupBy(x => x.head)\n        groups.keys.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg_tib5hh.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg_tib5hh.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg_tib5hh.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val firstElementMap = firstElements.groupBy(x => x)\n        val firstElementList = firstElementMap.map(x => (x._1, x._2.length)).toList\n        val max = firstElementList.maxBy(x => x._2)\n        val result = firstElementList.filter(x => x._2 == max._2).map(x => x._1)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122972,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1eh4l7.scala:15:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1eh4l7.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3n1eh4l7.scala:15:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(_.split(\" \")(0)).map(_._2.head).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122852,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpumkcon18.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpumkcon18.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpumkcon18.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => x._1 + \",\" + x._2.map(y => y._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzlddrgm.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzlddrgm.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzlddrgm.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val list = map(key)\n                map(key) = i :: list\n            } else {\n                map(key) = List(i)\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122928,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptiughc3q.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptiughc3q.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptiughc3q.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList).map(x => (x(0), x(1)))\n        val groups = tuples.groupBy(x => x._1)\n        val result = groups.map(x => (x._1, x._2.map(y => y._2))).map(x => x._1 + \",\" + x._2.mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82uv96db.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82uv96db.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82uv96db.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElems = tuples.map(x => x.head)\n        val grouped = firstElems.groupBy(x => x)\n        val result = grouped.map(x => x._1 + \":\" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pbewy5z.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pbewy5z.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2pbewy5z.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(x => x._1)\n        val result = grouped.map(x => (x._1, x._2.map(y => y._2))).map(x => x._1 + \",\" + x._2.mkString(\",\"))\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpm9hab4.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpm9hab4.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvpm9hab4.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, ListBuffer[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (!map.contains(key)) map(key) = new ListBuffer[String]\n            map(key) += i\n        }\n        val result = new ListBuffer[String]\n        for (i <- map.values) {\n            result += i.mkString(\" \")\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123046,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3oub3x3l.scala:19:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3oub3x3l.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3oub3x3l.scala:19:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]()\n        var map = new HashMap[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                result += Input(i)\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122926,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrmj2nxk.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrmj2nxk.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrmj2nxk.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(x => x.split(\" \")(0))\n        groups.map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1665510197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk91mhp6f.scala:10:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\"))\n        val firstElements = tuples.map(x => x(0))\n        val groups = firstElements.groupBy(x => x)\n        val result = groups.map(x => x._1 + \":\" + x._2.size).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6gflc7hb.scala:13:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6gflc7hb.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6gflc7hb.scala:13:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = List[String]()\n        var map = Map[String, Int]()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            if (map(Input(i)) > 1) {\n                result = result :+ Input(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyy9g27r.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyy9g27r.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcyy9g27r.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, List[String]]()\n        for (i <- Input) {\n            val split = i.split(\" \")\n            val key = split(0)\n            val value = split(1)\n            if (map.contains(key)) {\n                map(key) = map(key) :+ value\n            } else {\n                map += (key -> List(value))\n            }\n        }\n        var result = List[String]()\n        for (i <- map.keys) {\n            result = result :+ i + \" \" + map(i).mkString(\" \")\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t4pc8l2.scala:24:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t4pc8l2.scala:24:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t4pc8l2.scala:24:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val groups = Input.groupBy(_.split(\" \")(0))\n        val result = groups.map(x => x._1 + \" \" + x._2.length).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9m78w1hd.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9m78w1hd.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9m78w1hd.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val firstElements = tuples.map(x => x.head)\n        val commonFirstElements = firstElements.groupBy(x => x).filter(x => x._2.length > 1).map(x => x._1)\n        commonFirstElements.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ud6dv2v.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ud6dv2v.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1ud6dv2v.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\")).map(x => (x(0), x(1)))\n        val grouped = tuples.groupBy(_._1)\n        val result = grouped.map(x => x._1 + \":\" + x._2.map(_._2).mkString(\",\")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfez1km31.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfez1km31.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfez1km31.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val input = Input.map(x => x.split(\" \"))\n        val grouped = input.groupBy(x => x(0))\n        val result = grouped.map(x => x._1 + \" \" + x._2.map(y => y(1)).mkString(\" \")).toList\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx8jsyb8o.scala:12:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx8jsyb8o.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx8jsyb8o.scala:12:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val tuples = Input.map(x => x.split(\",\").toList)\n        val groupedTuples = tuples.groupBy(x => x.head)\n        groupedTuples.map(x => x._1 + \":\" + x._2.map(y => y.tail).flatten.mkString(\",\")).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123047,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9azr2t5.scala:11:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9azr2t5.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv9azr2t5.scala:11:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val result = new ListBuffer[String]\n        val map = new HashMap[String, Int]\n        for (i <- Input) {\n            if (map.contains(i)) {\n                map(i) = map(i) + 1\n            } else {\n                map(i) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result += k\n            }\n        }\n        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0o0bbwim.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0o0bbwim.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0o0bbwim.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result : List[String] = List()\n        var map : Map[String, Int] = Map()\n        for (i <- 0 until Input.length) {\n            if (map.contains(Input(i))) {\n                map(Input(i)) += 1\n            } else {\n                map(Input(i)) = 1\n            }\n        }\n        for ((k, v) <- map) {\n            if (v > 1) {\n                result = result :+ k\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123052,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvzev7_s.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvzev7_s.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnvzev7_s.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var map = Map[String, Int]()\n        for (i <- Input) {\n            if (map.contains(i.split(\",\")(0))) {\n                map(i.split(\",\")(0)) += 1\n            } else {\n                map(i.split(\",\")(0)) = 1\n            }\n        }\n        var result = List[String]()\n        for (i <- map) {\n            if (i._2 > 1) {\n                result = i._1 :: result\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq402kp5c.scala:23:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq402kp5c.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq402kp5c.scala:23:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        var result = new ListBuffer[String]\n        var map = new HashMap[String, Int]\n        for (i <- 0 until Input.length) {\n            var tuple = Input(i).split(\" \")\n            if (map.contains(tuple(0))) {\n                map(tuple(0)) += 1\n            } else {\n                map(tuple(0)) = 1\n            }\n        }\n        for (i <- 0 until Input.length) {\n            var tuple = Input(i).split(\" \")\n            if (map(tuple(0)) == 1) {\n                result += tuple(0)\n            }\n        }\n        return result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsig1njm.scala:25:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsig1njm.scala:25:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzsig1njm.scala:25:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        val map = new HashMap[String, List[String]]\n        for (i <- Input) {\n            val key = i.split(\" \")(0)\n            if (map.contains(key)) {\n                val newList = map(key) :+ i\n                map.put(key, newList)\n            }\n            else {\n                map.put(key, List(i))\n            }\n        }\n        map.values.toList.flatten\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666123051,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkkaq1bqn.scala:20:37 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkkaq1bqn.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m   |\u001b[0m                                              Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkkaq1bqn.scala:20:61 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m   |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                              Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find common first element in given list of tuple.\n    def groupTuples(Input : List[String]) : List[String] = {\n        Input.groupBy(x => x.split(\" \")(0)).map(x => x._1 + \" \" + x._2.length).toList\n    }\n    def main(args: Array[String]) = {\n    assert(groupTuples((List[String]((\"x\", \"y\"), (\"x\", \"z\"), (\"w\", \"t\")))).equals((List[String]((\"x\", \"y\", \"z\"), (\"w\", \"t\")))));\n    assert(groupTuples((List[String]((\"a\", \"b\"), (\"a\", \"c\"), (\"d\", \"e\")))).equals((List[String]((\"a\", \"b\", \"c\"), (\"d\", \"e\")))));\n    assert(groupTuples((List[String]((\"f\", \"g\"), (\"f\", \"g\"), (\"h\", \"i\")))).equals((List[String]((\"f\", \"g\", \"g\"), (\"h\", \"i\")))));\n    }\n\n}\n",
      "timestamp": 1666122834,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:37 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                     ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                     Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                     Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m \u001b[0mString\u001b[1m\u001b[31m)\u001b[0m\n\u001b[31m  |\u001b[0m                                                Required: String\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpehz9b6i5.scala:9:61 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(groupTuples((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m), (\u001b[31m\"x\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))).equals((List[\u001b[35mString\u001b[0m]((\u001b[31m\"x\"\u001b[0m, \u001b[31m\"y\"\u001b[0m, \u001b[31m\"z\"\u001b[0m), (\u001b[31m\"w\"\u001b[0m, \u001b[31m\"t\"\u001b[0m)))));\n\u001b[31m\u001b[31m  |\u001b[0m                                                             ^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Found:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[31mString\u001b[0m\u001b[1m\u001b[31m,\u001b[0m\u001b[1m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_70_get_equal",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_70_get_equal.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        val head = Input.head\n        val tail = Input.tail\n        if (tail.length == 0) return true\n        if (head != tail.head) return false\n        getEqual(tail)\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpskie8pkv.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpskie8pkv.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpskie8pkv.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpskie8pkv.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var i = 0\n        var flag = true\n        while(i < len - 1 && flag) {\n            if(Input(i) != Input(i + 1)) flag = false\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqw9b7mkz.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqw9b7mkz.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqw9b7mkz.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqw9b7mkz.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8e_74bl.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8e_74bl.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8e_74bl.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8e_74bl.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length) {\n            if (Input(i) != Input(0)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygmsh8q0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygmsh8q0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygmsh8q0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpygmsh8q0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var last = Input(0)\n        for (i <- 1 until Input.length) {\n            if (Input(i) != last) {\n                result = false\n            }\n            last = Input(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvj7j34e2.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvj7j34e2.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvj7j34e2.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvj7j34e2.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lhp19fb.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lhp19fb.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lhp19fb.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lhp19fb.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        val first = Input.head\n        for (i <- Input) {\n            if (i != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var equal = true\n        while(i < length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                equal = false\n                return equal\n            }\n            i += 1\n        }\n        return equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj89bisc7.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj89bisc7.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj89bisc7.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpj89bisc7.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var equal = true\n        while(i < length - 1 && equal) {\n            if(Input(i) != Input(i + 1)) equal = false\n            i += 1\n        }\n        equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwwh39z4.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwwh39z4.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwwh39z4.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjwwh39z4.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var result = true\n        for (i <- 0 until length) {\n            if (Input(i) != Input(0)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0fhrbty.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0fhrbty.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0fhrbty.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_0fhrbty.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var previous = Input(0)\n        for (i <- 1 until Input.length) {\n            if (Input(i) != previous) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwmxsok9.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwmxsok9.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwmxsok9.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprwmxsok9.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var count = 0\n        for (i <- 0 until Input.length) {\n            if (Input(i) == 0) {\n                count += 1\n            }\n        }\n        if (count == Input.length) {\n            result = false\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzxo1eqk.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzxo1eqk.scala:19:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzxo1eqk.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppzxo1eqk.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8e_74bl.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8e_74bl.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8e_74bl.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe8e_74bl.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var temp = Input(0)\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i) != temp) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tav47qp.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tav47qp.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tav47qp.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7tav47qp.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n                return flag\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyq40j2vc.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyq40j2vc.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyq40j2vc.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyq40j2vc.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var count = 0\n        for (i <- 0 to Input.length - 1) {\n            if (Input(i) % 2 == 0) count += 1\n        }\n        if (count == Input.length) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprtw0n7ax.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprtw0n7ax.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprtw0n7ax.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprtw0n7ax.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        val first = Input.head\n        for (i <- Input) {\n            if (i != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzahuzb9o.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzahuzb9o.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzahuzb9o.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzahuzb9o.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var length = Input(0).toString.length\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i).toString.length != length) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123719,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var length = Input(0).toString.length\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i).toString.length != length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4bmai1li.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4bmai1li.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4bmai1li.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4bmai1li.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        var first = Input.head\n        for (i <- Input) {\n            if (i != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmw74pzp.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmw74pzp.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmw74pzp.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmw74pzp.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1 && result) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3h7sdn_.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3h7sdn_.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3h7sdn_.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi3h7sdn_.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var prev = Input(0)\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i) != prev) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfo2ezti5.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfo2ezti5.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfo2ezti5.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfo2ezti5.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var temp = Input(0)\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i) != temp) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var j = 0\n        var flag = true\n        for (i <- 0 to length - 1) {\n            for (j <- i + 1 to length - 1) {\n                if (Input(i).toString.length != Input(j).toString.length) {\n                    flag = false\n                }\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuataqm17.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuataqm17.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuataqm17.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuataqm17.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val l = Input.length\n        val m = Input.map(x => x.toString.length).toSet\n        if (m.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsekd82z1.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsekd82z1.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsekd82z1.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsekd82z1.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var temp = Input(0)\n        for (i <- 1 until Input.length) {\n            if (Input(i) != temp) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphi6hflr6.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphi6hflr6.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphi6hflr6.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphi6hflr6.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o58mzn4.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o58mzn4.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o58mzn4.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o58mzn4.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        val first = Input.head\n        for (i <- Input) {\n            if (i != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprxx8sbjq.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        var first = Input.head\n        for (i <- Input) {\n            if (i != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmw74pzp.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmw74pzp.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmw74pzp.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjmw74pzp.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for(i <- 0 until Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4quh905r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4quh905r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4quh905r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4quh905r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58xhxnqq.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var i = 0\n        var j = 0\n        var flag = true\n        while(i < Input.length && flag) {\n            j = 0\n            while(j < Input.length && flag) {\n                if(Input(i).toString.length != Input(j).toString.length) {\n                    flag = false\n                }\n                j += 1\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuduz1nyb.scala:22:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuduz1nyb.scala:22:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuduz1nyb.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuduz1nyb.scala:23:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphsigpnt0.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var temp = Input(0)\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i) != temp) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3wgwiby7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0w3xwxp7.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 to Input.length - 2) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jbvzi6i.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jbvzi6i.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jbvzi6i.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2jbvzi6i.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val n = Input.length\n        var i = 0\n        var j = 0\n        var flag = true\n        while (i < n && flag) {\n            j = 0\n            while (j < n && flag) {\n                if (Input(i).toString.length != Input(j).toString.length) flag = false\n                j += 1\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kgb7y7j.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kgb7y7j.scala:21:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kgb7y7j.scala:22:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5kgb7y7j.scala:22:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var i = 0\n        var j = 0\n        var flag = true\n        for(i <- 0 to len - 1) {\n            for(j <- i + 1 to len - 1) {\n                if(Input(i) != Input(j)) {\n                    flag = false\n                }\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_rj9xrj.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_rj9xrj.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_rj9xrj.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe_rj9xrj.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var j = 0\n        var flag = true\n        while(i < length && flag) {\n            j = 0\n            while(j < length && flag) {\n                if(Input(i) != Input(j)) {\n                    flag = false\n                }\n                j += 1\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rvziqvd.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rvziqvd.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rvziqvd.scala:24:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0rvziqvd.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        var first = Input(0)\n        for (i <- 1 until Input.length) {\n            if (first != Input(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var result = true\n        while (i < length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy29xd0a.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy29xd0a.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy29xd0a.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvy29xd0a.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result : Boolean = true\n        var i : Int = 0\n        while(i < Input.length - 1 && result) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) result = false\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5evu_1ow.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5evu_1ow.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5evu_1ow.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5evu_1ow.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1 && result) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) result = false\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpitjvkifj.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpitjvkifj.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpitjvkifj.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpitjvkifj.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i) != Input(i + 1)) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        if (len == 0) return true\n        val first = Input(0)\n        for (i <- 1 until len) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8fk__l5.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8fk__l5.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8fk__l5.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpp8fk__l5.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var x = Input(0)\n        for (i <- 1 to Input.length - 1) {\n            if (x != Input(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuxhwnt6y.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuxhwnt6y.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuxhwnt6y.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuxhwnt6y.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        for (i <- 0 until length) {\n            if (Input(i).toString.length != length) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g8ko2md.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g8ko2md.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g8ko2md.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3g8ko2md.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i - 1) != Input(i)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123736,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe083cbhj.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe083cbhj.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe083cbhj.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe083cbhj.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i - 1) != Input(i)) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2s8ff96h.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2s8ff96h.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2s8ff96h.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2s8ff96h.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var prev = 0\n        for (i <- 0 until Input.length) {\n            if (i == 0) prev = Input(i).toString.length\n            else {\n                if (Input(i).toString.length != prev) {\n                    result = false\n                    return result\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123738,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t9qinw4.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t9qinw4.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t9qinw4.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2t9qinw4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var length = Input(0).toString.length\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i).toString.length != length) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123719,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzu8pkl4g.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var i = 0\n        var j = 0\n        var flag = true\n        while(i < len && flag) {\n            j = 0\n            while(j < len && flag) {\n                if(Input(i).toString.length != Input(j).toString.length) {\n                    flag = false\n                }\n                j += 1\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpil5j8ab7.scala:23:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpil5j8ab7.scala:23:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpil5j8ab7.scala:24:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpil5j8ab7.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510453,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpny0ssmpp.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var equal = true\n        for (i <- 0 until length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                equal = false\n            }\n        }\n        return equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn5cajt3v.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn5cajt3v.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn5cajt3v.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn5cajt3v.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i-1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpws_2zjg1.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpws_2zjg1.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpws_2zjg1.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpws_2zjg1.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var temp = Input(0)\n        for (i <- 1 until Input.length) {\n            if (temp != Input(i)) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510442,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24z6h4is.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24z6h4is.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24z6h4is.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp24z6h4is.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var equal = true\n        while (i < length - 1 && equal) {\n            if (Input(i).toString.length != Input(i + 1).toString.length)\n                equal = false\n            i += 1\n        }\n        equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7vw1jjo.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7vw1jjo.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7vw1jjo.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_7vw1jjo.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var prev = 0\n        for (i <- 0 until Input.length) {\n            if (i == 0) {\n                prev = Input(i).toString.length\n            } else {\n                if (prev != Input(i).toString.length) {\n                    result = false\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ggu0dpi.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ggu0dpi.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ggu0dpi.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ggu0dpi.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var i = 0\n        var j = 1\n        var flag = true\n        while(i < len && j < len) {\n            if(Input(i) != Input(j)) {\n                flag = false\n            }\n            i = i + 1\n            j = j + 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_uxvsqzz.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_uxvsqzz.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_uxvsqzz.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_uxvsqzz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        var i = 0\n        var flag = true\n        while(i < len - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxu0fjupm.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxu0fjupm.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxu0fjupm.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxu0fjupm.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var length = Input.length\n        for (i <- 0 until length) {\n            if (Input(i).toString.length != length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp32qq8sey.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp32qq8sey.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp32qq8sey.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp32qq8sey.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val l = Input.length\n        var i = 0\n        var j = 0\n        var flag = false\n        for(i <- 0 until l) {\n            for(j <- i+1 until l) {\n                if(Input(i) == Input(j)) {\n                    flag = true\n                }\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvc1_m8r.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvc1_m8r.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvc1_m8r.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvc1_m8r.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        if (length == 0) return true\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4_11z50z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123690,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmppkd32_2z.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var i = 0\n        var equal = true\n        while (i < length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                equal = false\n            }\n            i += 1\n        }\n        equal\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpymd1t4p_.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpymd1t4p_.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpymd1t4p_.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpymd1t4p_.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val len = Input.length\n        for (i <- 0 until len) {\n            for (j <- i + 1 until len) {\n                if (Input(i) != Input(j)) return false\n            }\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjp62c6x5.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjp62c6x5.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjp62c6x5.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjp62c6x5.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n                return flag\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyq40j2vc.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyq40j2vc.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyq40j2vc.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyq40j2vc.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var temp = Input(0)\n        for (i <- 1 until Input.length) {\n            if (Input(i) != temp) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgh82yb1z.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgh82yb1z.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgh82yb1z.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgh82yb1z.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val first = Input(0)\n        for (i <- 1 until length) {\n            if (Input(i) != first) return false\n        }\n        true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o58mzn4.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o58mzn4.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o58mzn4.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8o58mzn4.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n            i += 1\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpin27udw_.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpin27udw_.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpin27udw_.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpin27udw_.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for(i <- 1 until Input.length) {\n            if(Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwej2lbkl.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwej2lbkl.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwej2lbkl.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwej2lbkl.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        for (i <- 0 until length - 1) {\n            if (Input(i) != Input(i + 1)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj5zyj5_.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj5zyj5_.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj5zyj5_.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj5zyj5_.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val n = Input.length\n        val m = Input.map(x => x.toString.length).toSet\n        m.size == 1\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123691,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2y36_15r.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var first = Input(0)\n        for (i <- 1 until Input.length) {\n            if (Input(i) != first) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzekiz_f7.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzekiz_f7.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzekiz_f7.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzekiz_f7.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for(i <- 0 until Input.length - 1) {\n            if(Input(i) != Input(i + 1)) {\n                flag = false\n            }\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxb8w3un.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxb8w3un.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxb8w3un.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpmxb8w3un.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var prev = 0\n        for (i <- 0 until Input.length) {\n            if (i == 0) {\n                prev = Input(i).toString.length\n            } else {\n                if (prev != Input(i).toString.length) {\n                    result = false\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ggu0dpi.scala:20:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ggu0dpi.scala:20:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ggu0dpi.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ggu0dpi.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var last = Input(0)\n        for (i <- 1 to Input.length - 1) {\n            if (Input(i) != last) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb9rddych.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb9rddych.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb9rddych.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb9rddych.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        val result = Input.map(x => x.toString.length).toSet\n        if (result.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yurz9go.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yurz9go.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yurz9go.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1yurz9go.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val l = Input.length\n        for (i <- 0 until l) {\n            for (j <- i + 1 until l) {\n                if (Input(i) != Input(j)) return false\n            }\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123721,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm741mzv7.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm741mzv7.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm741mzv7.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm741mzv7.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        if (length == 0) return true\n        val first = Input.head\n        for (i <- 1 until length) {\n            if (first != Input(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp95t8p2fn.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp95t8p2fn.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp95t8p2fn.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp95t8p2fn.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 1)\n            return true\n        else {\n            if (Input.head == Input.tail.head)\n                return getEqual(Input.tail)\n            else\n                return false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgamfqe1b.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgamfqe1b.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgamfqe1b.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgamfqe1b.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val s = Input.distinct\n        if (s.length == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123753,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctw0z4vx.scala:10:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctw0z4vx.scala:10:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctw0z4vx.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpctw0z4vx.scala:11:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5m0fsxba.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123674,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcxrrfq8s.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzhmt3kei.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzhmt3kei.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzhmt3kei.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzhmt3kei.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val length = Input.length\n        var flag = true\n        for (i <- 0 until length) {\n            if (Input(i).toString.length != length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k8k3ssm.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k8k3ssm.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k8k3ssm.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4k8k3ssm.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        var i = 0\n        while(i < Input.length - 1 && flag) {\n            if(Input(i) != Input(i + 1)) flag = false\n            i += 1\n        }\n        flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37hso4d2.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37hso4d2.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37hso4d2.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37hso4d2.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i) != Input(i + 1)) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123675,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp110inh59.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8bs5gvd.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8bs5gvd.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8bs5gvd.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8bs5gvd.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaqaegvz1.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while(i < Input.length - 1) {\n            if(Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n                return result\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510452,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:18:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6v044byc.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        val first = Input(0)\n        for (i <- 1 until Input.length) {\n            if (first != Input(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf_ykigiv.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf_ykigiv.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf_ykigiv.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf_ykigiv.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        Input.distinct.length == 1\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123760,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86nz0mq_.scala:9:32 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m  |\u001b[0m                                Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86nz0mq_.scala:9:49 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                              Found:    (Long, Long, Long)\n\u001b[31m  |\u001b[0m                                              Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86nz0mq_.scala:10:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86nz0mq_.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        if (Input.length == 0) return true\n        var first = Input(0)\n        for (i <- 1 until Input.length) {\n            if (first != Input(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123707,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:14:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3llojni.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n                return flag\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8bs5gvd.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8bs5gvd.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8bs5gvd.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa8bs5gvd.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result : Boolean = true\n        var temp : Long = 0\n        for(i <- 0 until Input.length) {\n            if(i == 0) {\n                temp = Input(i)\n            }\n            else {\n                if(temp != Input(i)) {\n                    result = false\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv380rf0i.scala:21:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv380rf0i.scala:21:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv380rf0i.scala:22:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpv380rf0i.scala:22:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var length = Input.length\n        for (i <- 0 until length) {\n            if (Input(i).toString.length != length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123754,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp32qq8sey.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp32qq8sey.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp32qq8sey.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp32qq8sey.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var length = 0\n        var result = true\n        for (i <- 0 until Input.length) {\n            if (i == 0) length = Input(i).toString.length\n            else {\n                if (length != Input(i).toString.length) result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfq80e39.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfq80e39.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfq80e39.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbfq80e39.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        val l = Input.length\n        val m = Input.map(x => x.toString.length).toSet\n        if (m.size == 1) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123737,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsekd82z1.scala:11:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsekd82z1.scala:11:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsekd82z1.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsekd82z1.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var x = Input(0)\n        for (i <- 1 until Input.length) {\n            if (x != Input(i)) return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwm3043a.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwm3043a.scala:13:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwm3043a.scala:14:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdwm3043a.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var min = Input(0)\n        var max = Input(0)\n        for (i <- 1 until Input.length) {\n            if (Input(i) < min) min = Input(i)\n            if (Input(i) > max) max = Input(i)\n        }\n        if (max - min == 0) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpalsuzlbe.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpalsuzlbe.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpalsuzlbe.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpalsuzlbe.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n                return result\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123708,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:16:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk6borlui.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptj9m5dmo.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        var i = 0\n        while (i < Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                result = false\n            }\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:17:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqmob0sfi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i).toString.length != Input(i + 1).toString.length) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdsn42vas.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 1 until Input.length) {\n            if (Input(i) != Input(i - 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa4tm267r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var max = Input.max\n        var min = Input.min\n        if (max == min) return true\n        else return false\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7_nwxf43.scala:12:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7_nwxf43.scala:12:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7_nwxf43.scala:13:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7_nwxf43.scala:13:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var flag = true\n        for(i <- 1 until Input.length) {\n            if(Input(i) != Input(i - 1)) {\n                flag = false\n            }\n        }\n        return flag\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1666123761,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe9ke85as.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe9ke85as.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe9ke85as.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe9ke85as.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find whether all the given tuples have equal length or not.\n    def getEqual(Input : List[Long]) : Boolean = {\n        var result = true\n        for (i <- 0 until Input.length - 1) {\n            if (Input(i) != Input(i + 1)) {\n                result = false\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(getEqual((List[Long]((11l, 22l, 33l), (44l, 55l, 66l)))) == (true));\n    assert(getEqual((List[Long]((1l, 2l, 3l), (4l, 5l, 6l, 7l)))) == (false));\n    assert(getEqual((List[Long]((1l, 2l), (3l, 4l)))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510443,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:15:49 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m11l\u001b[0m, \u001b[31m22l\u001b[0m, \u001b[31m33l\u001b[0m), (\u001b[31m44l\u001b[0m, \u001b[31m55l\u001b[0m, \u001b[31m66l\u001b[0m)))) == (\u001b[31mtrue\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:32 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                                Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1h9bba_s.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(getEqual((List[\u001b[35mLong\u001b[0m]((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m), (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)))) == (\u001b[31mfalse\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                            ",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
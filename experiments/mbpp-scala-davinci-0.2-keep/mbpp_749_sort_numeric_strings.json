{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\n    def sortNumericStrings(nums_str : List[String]) : List[Long] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sortNumericStrings((List[String](\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"))).equals((List[Long](-500l.toLong, -12l.toLong, 0l.toLong, 4l.toLong, 7l.toLong, 12l.toLong, 45l.toLong, 100l.toLong, 200l.toLong))));\n    assert(sortNumericStrings((List[String](\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"))).equals((List[Long](1l.toLong, 1l.toLong, 1l.toLong, 2l.toLong, 2l.toLong, 2l.toLong, 2l.toLong, 3l.toLong, 3l.toLong, 4l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 6l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 8l.toLong, 9l.toLong, 9l.toLong))));\n    assert(sortNumericStrings((List[String](\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"))).equals((List[Long](1l.toLong, 1l.toLong, 1l.toLong, 3l.toLong, 3l.toLong, 5l.toLong, 5l.toLong, 7l.toLong, 7l.toLong, 9l.toLong, 11l.toLong, 13l.toLong, 15l.toLong, 17l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        nums_str.map(x => x.toLong).sorted",
    "        val nums = nums_str.map(x => x.toLong)\n        nums.sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(_.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sortWith(_ < _)",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sortWith(_ < _)",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sortWith(_ < _)",
    "        nums_str.map(x => x.toLong).sortWith(_ < _)",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted",
    "        nums_str.map(x => x.toLong).sorted"
  ]
}
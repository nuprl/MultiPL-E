{
  "name": "mbpp_566_sum_digits",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to get the sum of the digits of a non-negative integer.\n    def sumDigits(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_566_sum_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumDigits((345l)) == (12l));\n    assert(sumDigits((12l)) == (3l));\n    assert(sumDigits((97l)) == (16l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var nn = n\n        while (nn > 0) {\n            sum += nn % 10\n            nn /= 10\n        }\n        sum",
    "        if (n == 0) 0\n        else n % 10 + sumDigits(n / 10)",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var nn = n\n        while (nn > 0) {\n            sum += nn % 10\n            nn /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var nn = n\n        while (nn > 0) {\n            sum += nn % 10\n            nn /= 10\n        }\n        return sum",
    "        if (n == 0) return 0\n        return n % 10 + sumDigits(n / 10)",
    "        var sum = 0L\n        var nn = n\n        while (nn > 0) {\n            sum += nn % 10\n            nn /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var nn = n\n        while (nn > 0) {\n            sum += nn % 10\n            nn /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var nn = n\n        while (nn > 0) {\n            sum += nn % 10\n            nn /= 10\n        }\n        return sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum",
    "        var sum = 0L\n        var m = n\n        while (m > 0) {\n            sum += m % 10\n            m /= 10\n        }\n        sum"
  ]
}
{
  "name": "mbpp_91_find_substring",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    def findSubstring(str1 : List[String], sub_str : String) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findSubstring((List[String](\"red\", \"black\", \"white\", \"green\", \"orange\")), (\"ack\")) == (true));\n    assert(findSubstring((List[String](\"red\", \"black\", \"white\", \"green\", \"orange\")), (\"abc\")) == (false));\n    assert(findSubstring((List[String](\"red\", \"black\", \"white\", \"green\", \"orange\")), (\"ange\")) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(s => s.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(s => s.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))",
    "        str1.exists(x => x.contains(sub_str))"
  ]
}
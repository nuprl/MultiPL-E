{
  "name": "mbpp_444_trim_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_444_trim_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var result = \"\"\n        for (tuple <- test_list) {\n            var temp = tuple\n            while (temp > 0) {\n                result += (temp % K).toString\n                temp /= K\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        val result = test_list.map(x => x - K).filter(x => x > 0)\n        if (result.length == 0) \"Empty\"\n        else result.mkString(\" \")",
    "        // Write your code here\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i == test_list.length - 1) {\n                result += (test_list(i) - K).toString\n            } else {\n                result += (test_list(i) - K).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < K) result += (test_list(i) + K).toString + \" \"\n            else result += test_list(i).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n                result += \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()"
  ]
}
{
  "name": "mbpp_444_trim_tuple",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to trim each tuple by k in the given tuple list.\n    def trimTuple(test_list : List[Long], K : Long) : String = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_444_trim_tuple.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (2l)).equals((\"[(2,), (9,), (2,), (2,)]\")));\n    assert(trimTuple((List[Long]((5l, 3l, 2l, 1l, 4l), (3l, 4l, 9l, 2l, 1l), (9l, 1l, 2l, 3l, 5l), (4l, 8l, 2l, 1l, 7l))), (1l)).equals((\"[(3, 2, 1), (4, 9, 2), (1, 2, 3), (8, 2, 1)]\")));\n    assert(trimTuple((List[Long]((7l, 8l, 4l, 9l), (11l, 8l, 12l, 4l), (4l, 1l, 7l, 8l), (3l, 6l, 9l, 7l))), (1l)).equals((\"[(8, 4), (8, 12), (1, 7), (6, 9)]\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var result = \"\"\n        for (tuple <- test_list) {\n            var temp = tuple\n            while (temp > 0) {\n                result += (temp % K).toString\n                temp /= K\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        val result = test_list.map(x => x - K).filter(x => x > 0)\n        if (result.length == 0) \"Empty\"\n        else result.mkString(\" \")",
    "        // Write your code here\n        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (i == test_list.length - 1) {\n                result += (test_list(i) - K).toString\n            } else {\n                result += (test_list(i) - K).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < K) result += (test_list(i) + K).toString + \" \"\n            else result += test_list(i).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n                result += \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()",
    "        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            } else if (i < -K) {\n                result += (i + K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result",
    "        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i < K) {\n                result += i\n            }\n        }\n        return result.toList.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < K) result += (test_list(i) + K).toString + \" \"\n            else result += test_list(i).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt)\n            } else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K)\n                result += (test_list(i) - K).toString + \" \"\n            else\n                result += \"0 \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var x = test_list(i)\n            var y = x - K\n            if (y < 0) y = 0\n            result += y.toString\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result",
    "        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            if (i != 0) result.append(\" \")\n            result.append(test_list(i) - K)\n        }\n        return result.toString",
    "        val result = test_list.map(x => x - K)\n        result.mkString(\" \")",
    "        val result = test_list.map(x => x - K)\n        result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        val result = test_list.map(x => x - K).filter(x => x > 0)\n        if (result.length == 0) \"Empty\"\n        else result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = new ListBuffer[Long]()\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += test_list(i) - K\n            }\n            else if (test_list(i) < -K) {\n                result += test_list(i) + K\n            }\n            else {\n                result += 0\n            }\n        }\n        return result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) <= K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.substring(0, result.length - 1)",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var tuple = test_list(i)\n            var temp = tuple\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp = tuple\n                var new_tuple = 0L\n                for (j <- 0 until K) {\n                    new_tuple = new_tuple * 10 + temp % 10\n                    temp /= 10\n                }\n                result += new_tuple.toString + \" \"\n            }\n            else result += tuple.toString + \" \"\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            var temp2 = test_list(i)\n            var temp3 = 0L\n            while (count > K) {\n                temp3 = temp2 % 10\n                temp2 /= 10\n                count -= 1\n            }\n            if (i != test_list.length - 1) result += temp2 + \" \"\n            else result += temp2\n        }\n        return result",
    "        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            result += (i - K)\n        }\n        return result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result.trim",
    "        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) result += test_list(i) + \" \"\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp1 = test_list(i)\n                var temp2 = test_list(i)\n                for (j <- 0 until K) {\n                    temp1 /= 10\n                    temp2 %= 10\n                }\n                result += temp1.toString + temp2.toString + \" \"\n            }\n            else result += test_list(i).toString + \" \"\n        }\n        result",
    "        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            var temp2 = test_list(i)\n            if (count > K) {\n                var temp3 = pow(10, count - K).toLong\n                temp2 /= temp3\n                temp2 *= temp3\n            }\n            result.append(temp2)\n            if (i != test_list.length - 1) result.append(\" \")\n        }\n        return result.toString",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            var temp = i\n            while (temp > K) {\n                temp = temp / K\n            }\n            result += temp + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) result += (i - K).toString + \" \"\n            else result += \"0 \"\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        val result = test_list.map(x => (x - K).toString).mkString(\" \")\n        return result",
    "        val result = test_list.map(x => (x - K).toString).mkString(\" \")\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp2 = test_list(i)\n                var temp3 = temp2\n                for (j <- 0 until count - K) {\n                    temp3 /= 10\n                }\n                temp2 -= temp3 * pow(10, count - K).toLong\n                result += temp2.toString\n            } else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) result += \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i >= K) {\n                result += i\n            }\n        }\n        return result.mkString(\",\")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K) + \" \"\n            else result += \"0 \"\n        }\n        return result.trim",
    "        var result = new StringBuilder\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                var temp2 = test_list(i)\n                var temp3 = 0L\n                for (j <- 0 until K) {\n                    temp3 = temp3 * 10 + temp2 % 10\n                    temp2 /= 10\n                }\n                result.append(temp3 + \" \")\n            } else {\n                result.append(test_list(i) + \" \")\n            }\n        }\n        return result.toString",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var temp_str = \"\"\n            while (temp > 0) {\n                temp_str = (temp % 10).toString + temp_str\n                temp /= 10\n            }\n            if (temp_str.length > K) {\n                temp_str = temp_str.substring(0, temp_str.length - K.toInt)\n            }\n            result += temp_str + \" \"\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result.trim()",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        val result = test_list.map(x => (x - K, x + K)).map(x => x._1 + \" \" + x._2).mkString(\" \")\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        return result",
    "        val result = test_list.map(x => x - K)\n        result.mkString(\" \")",
    "        val result = test_list.map(x => x - K)\n        result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += test_list(i) + \" \"\n        }\n        return result.trim()",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, K.toInt) + \" \"\n            }\n            else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var tuple = test_list(i)\n            var tuple_list = ListBuffer[Long]()\n            while (tuple > 0) {\n                tuple_list += tuple % K\n                tuple /= K\n            }\n            result += tuple_list.reverse.mkString(\" \") + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (K.toString + \" \")\n            } else {\n                result += (test_list(i).toString + \" \")\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (K + \" \")\n            } else {\n                result += (test_list(i) + \" \")\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result.trim",
    "        var result = new ListBuffer[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += test_list(i) - K\n            }\n        }\n        result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim()",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt)\n            } else {\n                result += test_list(i).toString\n            }\n            if (i != test_list.length - 1) result += \",\"\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp + \" \"\n        }\n        return result.trim()",
    "        var result = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            } else if (i < -K) {\n                result += (i + K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        val result = test_list.map(x => x - K).filter(x => x > 0)\n        if (result.length == 0) \"Empty\"\n        else result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim",
    "        var result : String = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp > 0) {\n                count += 1\n                temp /= 10\n            }\n            if (count > K) {\n                result += test_list(i).toString.substring(0, count - K.toInt) + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n            }\n            else {\n                result += \"0\"\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        result",
    "        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result = result :+ test_list(i)\n            }\n        }\n        return result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) result += \"0 \"\n            else result += test_list(i) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            val x = test_list(i)\n            val y = x - K\n            if (y > 0) result += y.toString + \" \"\n            else result += \"0 \"\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K) + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        val result = test_list.map(x => x - K)\n        result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result += i - K\n            }\n            else if (i < K) {\n                result += i + K\n            }\n            else {\n                result += i\n            }\n        }\n        result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.trim",
    "        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i > K)\n                result += i - K\n        }\n        result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result_list = List[Long]()\n        for (i <- test_list) {\n            if (i >= K) {\n                result_list = result_list :+ (i - K)\n            }\n        }\n        return result_list.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result.substring(0, result.length - 1)",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else if (test_list(i) < K) {\n                result += (test_list(i) + K).toString + \" \"\n            } else {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result_list = List[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result_list = result_list :+ (i - K)\n            } else if (i < -K) {\n                result_list = result_list :+ (i + K)\n            } else {\n                result_list = result_list :+ 0\n            }\n        }\n        return result_list.mkString(\" \")",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += test_list(i) / K + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) result += (test_list(i) - K).toString + \" \"\n            else if (test_list(i) < K) result += (test_list(i) + K).toString + \" \"\n            else result += test_list(i).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result : String = \"\"\n        for (i <- test_list) {\n            if (i > K) {\n                result += (i - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K) + \" \"\n            } else if (test_list(i) < -K) {\n                result += (test_list(i) + K) + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = List[Long]()\n        for (i <- 0 until test_list.length) {\n            result = result :+ (test_list(i) - K)\n        }\n        return result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += test_list(i) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result.trim",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += \"0 \"\n            } else {\n                result += (test_list(i) - K).toString + \" \"\n            }\n        }\n        return result",
    "        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result : String = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result.trim()",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            var count = 0\n            while (temp != 0) {\n                temp /= 10\n                count += 1\n            }\n            if (count > K) {\n                result += test_list(i).toString().substring(0, count - K.toInt) + \" \"\n            } else {\n                result += test_list(i).toString() + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            } else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 to test_list.length - 1) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        val result = test_list.map(x => x - K)\n        result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K) + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i).toString + \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            result += (test_list(i) - K).toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            val tuple = test_list(i)\n            val trimmed_tuple = tuple - (tuple % K)\n            result += trimmed_tuple.toString + \" \"\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString\n            }\n            else {\n                result += \"0\"\n            }\n            if (i != test_list.length - 1) {\n                result += \" \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) > K) {\n                result += (test_list(i) - K).toString + \" \"\n            }\n            else {\n                result += \"0 \"\n            }\n        }\n        return result",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            var temp = test_list(i)\n            if (temp > K) {\n                temp = K\n            }\n            result += temp.toString + \" \"\n        }\n        return result.trim",
    "        val result = test_list.map(x => x - K)\n        result.mkString(\" \")",
    "        var result = new ListBuffer[Long]()\n        for (i <- test_list) {\n            if (i > K) {\n                result += i - K\n            }\n        }\n        result.mkString(\" \")",
    "        var result = \"\"\n        for (i <- 0 until test_list.length) {\n            if (test_list(i) < K) {\n                result += test_list(i) + \" \"\n            }\n        }\n        result",
    "        var result = \"\"\n        for (i <- test_list) {\n            result += (i - K).toString + \" \"\n        }\n        return result"
  ]
}
{
  "name": "mbpp_436_neg_nos",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to return the negative numbers in a list.\n    def negNos(list1 : List[Long]) : List[Long] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_436_neg_nos.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(negNos((List[Long](-1l.toLong, 4l.toLong, 5l.toLong, -6l.toLong))).equals((List[Long](-1l.toLong, -6l.toLong))));\n    assert(negNos((List[Long](-1l.toLong, -2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](-1l.toLong, -2l.toLong))));\n    assert(negNos((List[Long](-7l.toLong, -6l.toLong, 8l.toLong, 9l.toLong))).equals((List[Long](-7l.toLong, -6l.toLong))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var list2 = List[Long]()\n        for (i <- list1) {\n            if (i < 0) list2 = list2 :+ i\n        }\n        return list2",
    "        list1.filter(x => x < 0)",
    "        return list1.filter(x => x < 0)",
    "        list1.filter(x => x < 0)",
    "        list1.filter(x => x < 0)",
    "        list1.filter(x => x < 0)",
    "        var list2 = List[Long]()\n        for (i <- list1) {\n            if (i < 0) {\n                list2 = list2 :+ i\n            }\n        }\n        return list2",
    "        list1.filter(x => x < 0)",
    "        list1.filter(x => x < 0)",
    "        list1.filter(x => x < 0)",
    "        var list2 : List[Long] = List()\n        for (i <- list1) {\n            if (i < 0) {\n                list2 = list2 :+ i\n            }\n        }\n        return list2",
    "        list1.filter(x => x < 0)",
    "        list1.filter(x => x < 0)",
    "        list1.filter(x => x < 0)",
    "        var list2 : List[Long] = List()\n        for (i <- list1) {\n            if (i < 0) {\n                list2 = list2 :+ i\n            }\n        }\n        list2",
    "        list1.filter(_ < 0)",
    "        list1.filter(_ < 0)",
    "        list1.filter(x => x < 0)",
    "        list1.filter(_ < 0)",
    "        list1.filter(x => x < 0)"
  ]
}
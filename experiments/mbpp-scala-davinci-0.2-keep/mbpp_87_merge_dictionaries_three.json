{
  "name": "mbpp_87_merge_dictionaries_three",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to merge three dictionaries into a single dictionary.\n    def mergeDictionariesThree(dict1 : Map[String,String], dict2 : Map[String,String], dict3 : Map[String,String]) : Map[String,String] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_87_merge_dictionaries_three.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(mergeDictionariesThree((Map[String,String](\"R\" -> \"Red\", \"B\" -> \"Black\", \"P\" -> \"Pink\")), (Map[String,String](\"G\" -> \"Green\", \"W\" -> \"White\")), (Map[String,String](\"O\" -> \"Orange\", \"W\" -> \"White\", \"B\" -> \"Black\"))).equals((Map[String,String](\"B\" -> \"Black\", \"R\" -> \"Red\", \"P\" -> \"Pink\", \"G\" -> \"Green\", \"W\" -> \"White\", \"O\" -> \"Orange\"))));\n    assert(mergeDictionariesThree((Map[String,String](\"R\" -> \"Red\", \"B\" -> \"Black\", \"P\" -> \"Pink\")), (Map[String,String](\"G\" -> \"Green\", \"W\" -> \"White\")), (Map[String,String](\"L\" -> \"lavender\", \"B\" -> \"Blue\"))).equals((Map[String,String](\"W\" -> \"White\", \"P\" -> \"Pink\", \"B\" -> \"Black\", \"R\" -> \"Red\", \"G\" -> \"Green\", \"L\" -> \"lavender\"))));\n    assert(mergeDictionariesThree((Map[String,String](\"R\" -> \"Red\", \"B\" -> \"Black\", \"P\" -> \"Pink\")), (Map[String,String](\"L\" -> \"lavender\", \"B\" -> \"Blue\")), (Map[String,String](\"G\" -> \"Green\", \"W\" -> \"White\"))).equals((Map[String,String](\"B\" -> \"Black\", \"P\" -> \"Pink\", \"R\" -> \"Red\", \"G\" -> \"Green\", \"L\" -> \"lavender\", \"W\" -> \"White\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((key,value) <- dict1) result += (key -> value)\n        for ((key,value) <- dict2) result += (key -> value)\n        for ((key,value) <- dict3) result += (key -> value)\n        return result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) {\n            result += (key -> value)\n        }\n        for ((key, value) <- dict2) {\n            result += (key -> value)\n        }\n        for ((key, value) <- dict3) {\n            result += (key -> value)\n        }\n        return result",
    "        var mergedDict = Map[String,String]()\n        for ((k,v) <- dict1) mergedDict += (k -> v)\n        for ((k,v) <- dict2) mergedDict += (k -> v)\n        for ((k,v) <- dict3) mergedDict += (k -> v)\n        return mergedDict",
    "        var dict = Map[String,String]()\n        dict ++= dict1\n        dict ++= dict2\n        dict ++= dict3\n        return dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var newDict = Map[String,String]()\n        for ((k,v) <- dict1) newDict += (k -> v)\n        for ((k,v) <- dict2) newDict += (k -> v)\n        for ((k,v) <- dict3) newDict += (k -> v)\n        return newDict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var merged = Map[String,String]()\n        for ((k,v) <- dict1) merged += (k -> v)\n        for ((k,v) <- dict2) merged += (k -> v)\n        for ((k,v) <- dict3) merged += (k -> v)\n        return merged",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var merged = Map[String,String]()\n        merged ++= dict1\n        merged ++= dict2\n        merged ++= dict3\n        return merged",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var newDict = Map[String,String]()\n        for ((key, value) <- dict1) {\n            newDict += (key -> value)\n        }\n        for ((key, value) <- dict2) {\n            newDict += (key -> value)\n        }\n        for ((key, value) <- dict3) {\n            newDict += (key -> value)\n        }\n        return newDict",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((key,value) <- dict1) {\n            result += (key -> value)\n        }\n        for ((key,value) <- dict2) {\n            result += (key -> value)\n        }\n        for ((key,value) <- dict3) {\n            result += (key -> value)\n        }\n        return result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) result += (key -> value)\n        for ((key, value) <- dict2) result += (key -> value)\n        for ((key, value) <- dict3) result += (key -> value)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var merged = Map[String,String]()\n        for ((k,v) <- dict1) merged += (k -> v)\n        for ((k,v) <- dict2) merged += (k -> v)\n        for ((k,v) <- dict3) merged += (k -> v)\n        return merged",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) {\n            result += (k -> v)\n        }\n        for ((k,v) <- dict2) {\n            result += (k -> v)\n        }\n        for ((k,v) <- dict3) {\n            result += (k -> v)\n        }\n        return result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) result += (key -> value)\n        for ((key, value) <- dict2) result += (key -> value)\n        for ((key, value) <- dict3) result += (key -> value)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var newDict = Map[String,String]()\n        for ((key,value) <- dict1) newDict += (key -> value)\n        for ((key,value) <- dict2) newDict += (key -> value)\n        for ((key,value) <- dict3) newDict += (key -> value)\n        newDict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        val dict = new HashMap[String,String]\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        var newDict = Map[String,String]()\n        for ((k,v) <- dict1) newDict += (k -> v)\n        for ((k,v) <- dict2) newDict += (k -> v)\n        for ((k,v) <- dict3) newDict += (k -> v)\n        return newDict",
    "        var dict = Map[String,String]()\n        dict ++= dict1\n        dict ++= dict2\n        dict ++= dict3\n        return dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var mergedDict = Map[String,String]()\n        mergedDict ++= dict1\n        mergedDict ++= dict2\n        mergedDict ++= dict3\n        return mergedDict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) result += (key -> value)\n        for ((key, value) <- dict2) result += (key -> value)\n        for ((key, value) <- dict3) result += (key -> value)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var mergedDict = Map[String,String]()\n        for ((key, value) <- dict1) mergedDict += (key -> value)\n        for ((key, value) <- dict2) mergedDict += (key -> value)\n        for ((key, value) <- dict3) mergedDict += (key -> value)\n        mergedDict",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        val dict = new HashMap[String,String]\n        for ((k,v) <- dict1) dict(k) = v\n        for ((k,v) <- dict2) dict(k) = v\n        for ((k,v) <- dict3) dict(k) = v\n        dict",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        val dict4 = dict1 ++ dict2 ++ dict3\n        dict4",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((key,value) <- dict1) {\n            result += (key -> value)\n        }\n        for ((key,value) <- dict2) {\n            result += (key -> value)\n        }\n        for ((key,value) <- dict3) {\n            result += (key -> value)\n        }\n        return result",
    "        var newDict = Map[String,String]()\n        for ((k,v) <- dict1) {\n            newDict += (k -> v)\n        }\n        for ((k,v) <- dict2) {\n            newDict += (k -> v)\n        }\n        for ((k,v) <- dict3) {\n            newDict += (k -> v)\n        }\n        return newDict",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        return dict",
    "        val dict = new HashMap[String,String]\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) result += (key -> value)\n        for ((key, value) <- dict2) result += (key -> value)\n        for ((key, value) <- dict3) result += (key -> value)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) result += (key -> value)\n        for ((key, value) <- dict2) result += (key -> value)\n        for ((key, value) <- dict3) result += (key -> value)\n        result",
    "        var mergedDict = Map[String,String]()\n        for ((key,value) <- dict1) mergedDict += (key -> value)\n        for ((key,value) <- dict2) mergedDict += (key -> value)\n        for ((key,value) <- dict3) mergedDict += (key -> value)\n        return mergedDict",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        return dict1 ++ dict2 ++ dict3",
    "        (dict1 ++ dict2 ++ dict3).toMap",
    "        val result = new HashMap[String,String]\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result.toMap",
    "        var result = Map[String,String]()\n        for (key <- dict1.keys) result += (key -> dict1(key))\n        for (key <- dict2.keys) result += (key -> dict2(key))\n        for (key <- dict3.keys) result += (key -> dict3(key))\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        val dict = new HashMap[String,String]\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        var dict = dict1 ++ dict2 ++ dict3\n        dict",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        return dict",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        val dict = new HashMap[String,String]\n        for (key <- dict1.keys) {\n            dict += (key -> dict1(key))\n        }\n        for (key <- dict2.keys) {\n            dict += (key -> dict2(key))\n        }\n        for (key <- dict3.keys) {\n            dict += (key -> dict3(key))\n        }\n        dict.toMap",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        return result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) result += (key -> value)\n        for ((key, value) <- dict2) result += (key -> value)\n        for ((key, value) <- dict3) result += (key -> value)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var mergedDict = Map[String,String]()\n        for ((k,v) <- dict1) mergedDict += (k -> v)\n        for ((k,v) <- dict2) mergedDict += (k -> v)\n        for ((k,v) <- dict3) mergedDict += (k -> v)\n        mergedDict",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        val dict = new HashMap[String,String]\n        for ((key,value) <- dict1) dict(key) = value\n        for ((key,value) <- dict2) dict(key) = value\n        for ((key,value) <- dict3) dict(key) = value\n        dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        val dict = new HashMap[String,String]\n        for ((key, value) <- dict1) dict += (key -> value)\n        for ((key, value) <- dict2) dict += (key -> value)\n        for ((key, value) <- dict3) dict += (key -> value)\n        dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        return result",
    "        dict1 ++ dict2 ++ dict3",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        return dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var dict = Map[String,String]()\n        for ((k,v) <- dict1) dict += (k -> v)\n        for ((k,v) <- dict2) dict += (k -> v)\n        for ((k,v) <- dict3) dict += (k -> v)\n        dict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((key,value) <- dict1) result += (key -> value)\n        for ((key,value) <- dict2) result += (key -> value)\n        for ((key,value) <- dict3) result += (key -> value)\n        result",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) result += (key -> value)\n        for ((key, value) <- dict2) result += (key -> value)\n        for ((key, value) <- dict3) result += (key -> value)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var newDict = Map[String,String]()\n        for ((k,v) <- dict1) newDict += (k -> v)\n        for ((k,v) <- dict2) newDict += (k -> v)\n        for ((k,v) <- dict3) newDict += (k -> v)\n        newDict",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var merged = Map[String,String]()\n        for ((k,v) <- dict1) merged += (k -> v)\n        for ((k,v) <- dict2) merged += (k -> v)\n        for ((k,v) <- dict3) merged += (k -> v)\n        merged",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((key,value) <- dict1) result += (key -> value)\n        for ((key,value) <- dict2) result += (key -> value)\n        for ((key,value) <- dict3) result += (key -> value)\n        return result",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) {\n            result += (key -> value)\n        }\n        for ((key, value) <- dict2) {\n            result += (key -> value)\n        }\n        for ((key, value) <- dict3) {\n            result += (key -> value)\n        }\n        return result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) {\n            result += (k -> v)\n        }\n        for ((k,v) <- dict2) {\n            result += (k -> v)\n        }\n        for ((k,v) <- dict3) {\n            result += (k -> v)\n        }\n        return result",
    "        var result = Map[String,String]()\n        for ((key,value) <- dict1) result += (key -> value)\n        for ((key,value) <- dict2) result += (key -> value)\n        for ((key,value) <- dict3) result += (key -> value)\n        return result",
    "        var dict = Map[String,String]()\n        dict ++= dict1\n        dict ++= dict2\n        dict ++= dict3\n        return dict",
    "        var result = Map[String,String]()\n        for ((key, value) <- dict1) {\n            result += (key -> value)\n        }\n        for ((key, value) <- dict2) {\n            result += (key -> value)\n        }\n        for ((key, value) <- dict3) {\n            result += (key -> value)\n        }\n        return result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var merged = Map[String,String]()\n        for ((k,v) <- dict1) merged += (k -> v)\n        for ((k,v) <- dict2) merged += (k -> v)\n        for ((k,v) <- dict3) merged += (k -> v)\n        merged",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        val dict = new HashMap[String,String]\n        for ((k,v) <- dict1) dict(k) = v\n        for ((k,v) <- dict2) dict(k) = v\n        for ((k,v) <- dict3) dict(k) = v\n        dict",
    "        var mergedDict = Map[String,String]()\n        mergedDict ++= dict1\n        mergedDict ++= dict2\n        mergedDict ++= dict3\n        return mergedDict",
    "        var result = Map[String,String]()\n        for ((key,value) <- dict1) result += (key -> value)\n        for ((key,value) <- dict2) result += (key -> value)\n        for ((key,value) <- dict3) result += (key -> value)\n        return result",
    "        dict1 ++ dict2 ++ dict3",
    "        var result = Map[String,String]()\n        for (key <- dict1.keys) result += (key -> dict1(key))\n        for (key <- dict2.keys) result += (key -> dict2(key))\n        for (key <- dict3.keys) result += (key -> dict3(key))\n        return result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result",
    "        var result = Map[String,String]()\n        for ((k,v) <- dict1) result += (k -> v)\n        for ((k,v) <- dict2) result += (k -> v)\n        for ((k,v) <- dict3) result += (k -> v)\n        result"
  ]
}
{
  "name": "mbpp_564_count_Pairs",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    def countPairs(arr : List[Long], n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_564_count_Pairs.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countPairs((List[Long](1l.toLong, 2l.toLong, 1l.toLong)), (3l)) == (2l));\n    assert(countPairs((List[Long](1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong)), (4l)) == (0l));\n    assert(countPairs((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong)), (5l)) == (10l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i+1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j && arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 to n - 1) {\n            for (j <- i + 1 to n - 1) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n.toInt) {\n            for (j <- i + 1 until n.toInt) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count"
  ]
}
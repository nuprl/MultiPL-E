{
  "name": "mbpp_564_count_Pairs",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function which takes a list of integers and counts the number of possible unordered pairs where both elements are unequal.\n    def countPairs(arr : List[Long], n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_564_count_Pairs.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(countPairs((List[Long](1l.toLong, 2l.toLong, 1l.toLong)), (3l)) == (2l));\n    assert(countPairs((List[Long](1l.toLong, 1l.toLong, 1l.toLong, 1l.toLong)), (4l)) == (0l));\n    assert(countPairs((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong)), (5l)) == (10l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i+1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j && arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 to n - 1) {\n            for (j <- i + 1 to n - 1) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n.toInt) {\n            for (j <- i + 1 until n.toInt) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (i != j && arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0L until n) {\n            for (j <- i + 1L until n) {\n                if (arr(i.toInt) != arr(j.toInt)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        val map = new HashMap[Long, Long]\n        for (i <- arr) {\n            if (map.contains(i)) map(i) += 1\n            else map += (i -> 1)\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1)\n            if (map.contains(i + 1)) count += map(i) * map(i + 1)\n        }\n        count",
    "        val map = new HashMap[Long, Long]()\n        for (i <- 0 until n) {\n            if (map.contains(arr(i.toInt))) map(arr(i.toInt)) += 1\n            else map += (arr(i.toInt) -> 1)\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1) / 2\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        val m = arr.groupBy(identity).mapValues(_.size)\n        var count = 0L\n        for (i <- arr) {\n            if (m.contains(i)) {\n                count += m(i) - 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        val map = new HashMap[Long, Long]()\n        for (i <- 0 until n) {\n            if (map.contains(arr(i.toInt))) map(arr(i.toInt)) += 1\n            else map(arr(i.toInt)) = 1\n        }\n        var count = 0L\n        for (i <- map.values) {\n            count += i * (i - 1) / 2\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        val map = new HashMap[Long, Long]\n        for (i <- arr) {\n            if (map.contains(i)) map(i) += 1\n            else map(i) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1)\n        }\n        count / 2",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        val count = Array.fill[Long](n.toInt + 1)(0)\n        for (i <- 0 until arr.length) {\n            count(arr(i).toInt) += 1\n        }\n        var result = 0L\n        for (i <- 0 until count.length) {\n            result += count(i) * (count(i) - 1) / 2\n        }\n        result",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (i != j && arr(i.toInt) != arr(j.toInt)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        val m = new HashMap[Long, Long]()\n        for (i <- 0 until n) {\n            if (m.contains(arr(i.toInt))) m(arr(i.toInt)) += 1\n            else m += (arr(i.toInt) -> 1)\n        }\n        var ans = 0L\n        for (i <- m.values) {\n            ans += i * (i - 1) / 2\n        }\n        ans",
    "        val map = new HashMap[Long, Long]\n        for (i <- 0 until n) {\n            if (map.contains(arr(i.toInt))) map(arr(i.toInt)) += 1\n            else map(arr(i.toInt)) = 1\n        }\n        var count = 0L\n        for (i <- map.values) {\n            count += i * (i - 1) / 2\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (i != j && arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n; j <- i + 1 until n) {\n            if (arr(i) != arr(j)) {\n                count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        val m = new HashMap[Long, Long]\n        for (i <- arr) {\n            if (m.contains(i)) m(i) += 1\n            else m(i) = 1\n        }\n        var count = 0L\n        for (i <- m.keys) {\n            if (m(i) > 1) {\n                count += m(i) * (m(i) - 1)\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i+1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (i != j && arr(i.toInt) != arr(j.toInt)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i+1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i+1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0L until n) {\n            for (j <- i + 1L until n) {\n                if (arr(i.toInt) != arr(j.toInt)) count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (i != j && arr(i.toInt) != arr(j.toInt)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (i != j && arr(i.toInt) != arr(j.toInt)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i+1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        val map = new HashMap[Long, Long]()\n        for (i <- 0 until n) {\n            if (map.contains(arr(i.toInt))) map(arr(i.toInt)) += 1\n            else map(arr(i.toInt)) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1) / 2\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        val map = new HashMap[Long, Long]()\n        for (i <- 0 until n) {\n            if (map.contains(arr(i.toInt))) map(arr(i.toInt)) += 1\n            else map(arr(i.toInt)) = 1\n        }\n        var count = 0L\n        for (i <- map.keys) {\n            if (map(i) > 1) count += map(i) * (map(i) - 1) / 2\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i+1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        val map = new HashMap[Long, Long]()\n        var count = 0L\n        for (i <- 0 until n) {\n            if (map.contains(arr(i.toInt))) {\n                count += map(arr(i.toInt))\n                map(arr(i.toInt)) += 1\n            }\n            else {\n                map(arr(i.toInt)) = 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n - 1) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count",
    "        var count = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) count += 1\n            }\n        }\n        count",
    "        var count = 0L\n        for (i <- 0 until n) for (j <- i + 1 until n) if (arr(i) != arr(j)) count += 1\n        count",
    "        var count : Long = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                if (arr(i) != arr(j)) {\n                    count += 1\n                }\n            }\n        }\n        return count"
  ]
}
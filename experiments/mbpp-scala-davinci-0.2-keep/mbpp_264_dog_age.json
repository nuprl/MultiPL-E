{
  "name": "mbpp_264_dog_age",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate a dog's age in dog's years.\n    def dogAge(h_age : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_264_dog_age.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(dogAge((12l)) == (61l));\n    assert(dogAge((15l)) == (73l));\n    assert(dogAge((24l)) == (109l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7",
    "        h_age * 7"
  ]
}
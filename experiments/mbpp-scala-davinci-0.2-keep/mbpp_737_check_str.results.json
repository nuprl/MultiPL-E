{
  "name": "mbpp_737_check_str",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_737_check_str.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        if (pattern.findFirstIn(string) == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiou].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpzqtpjxoj.scala:15)\n\tat Problem.main(tmpzqtpjxoj.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) return false\n        else return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiouAEIOU].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        return string.matches(\"^[aeiouAEIOU].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiouAEIOU].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqn9kzk6t.scala:11)\n\tat Problem.main(tmpqn9kzk6t.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) {\n            false\n        } else {\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiouAEIOU].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiou].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmplm_odgcm.scala:15)\n\tat Problem.main(tmplm_odgcm.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"[aeiouAEIOU].*\".r\n        string match {\n            case regex() => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) {\n            false\n        } else {\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if(result == None)\n            false\n        else\n            true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqn9kzk6t.scala:11)\n\tat Problem.main(tmpqn9kzk6t.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if(result == None)\n            false\n        else\n            true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[AEIOUaeiou].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if (string.matches(\"^[aeiou].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_56atm68.scala:11)\n\tat Problem.main(tmp_56atm68.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if(result == None) {\n            return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        string match {\n            case regex(_*) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        string.matches(\"^[aeiouAEIOU].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        return string.matches(\"^[aeiou].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpo3iexr5v.scala:11)\n\tat Problem.main(tmpo3iexr5v.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiouAEIOU].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if(result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        string.matches(\"^[aeiou].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpe136bhx8.scala:11)\n\tat Problem.main(tmpe136bhx8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        string.matches(\"^[aeiouAEIOU].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        string.matches(\"^[aeiouAEIOU].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpdep4d41h.scala:12)\n\tat Problem.main(tmpdep4d41h.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        string.matches(\"^[aeiou].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpe136bhx8.scala:11)\n\tat Problem.main(tmpe136bhx8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpdep4d41h.scala:12)\n\tat Problem.main(tmpdep4d41h.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiou].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmplm_odgcm.scala:15)\n\tat Problem.main(tmplm_odgcm.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiou].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmplm_odgcm.scala:15)\n\tat Problem.main(tmplm_odgcm.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiouAEIOU].*\"))\n            return true\n        else\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123485,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiou].*\".r\n        val result = regex.findFirstIn(string)\n        if(result == None) {\n            false\n        } else {\n            true\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpkh_mfyj4.scala:17)\n\tat Problem.main(tmpkh_mfyj4.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpdep4d41h.scala:12)\n\tat Problem.main(tmpdep4d41h.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) {\n            return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiou].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmplm_odgcm.scala:15)\n\tat Problem.main(tmplm_odgcm.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if(result == None)\n            return false\n        else\n            return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if(result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiouAEIOU].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if (string.matches(\"^[aeiou].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_56atm68.scala:11)\n\tat Problem.main(tmp_56atm68.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiouAEIOU].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if(result == None)\n            false\n        else\n            true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpmrfjo95x.scala:15)\n\tat Problem.main(tmpmrfjo95x.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        (pattern findFirstIn string).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        string.matches(\"^[aeiou].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpe136bhx8.scala:11)\n\tat Problem.main(tmpe136bhx8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpdep4d41h.scala:12)\n\tat Problem.main(tmpdep4d41h.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if(result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU]\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiou].*\".r\n        val result = regex.findFirstIn(string)\n        if(result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpxak2wbkh.scala:13)\n\tat Problem.main(tmpxak2wbkh.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiouAEIOU].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpdep4d41h.scala:12)\n\tat Problem.main(tmpdep4d41h.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        return string.matches(\"^[aeiou].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpo3iexr5v.scala:11)\n\tat Problem.main(tmpo3iexr5v.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqn9kzk6t.scala:11)\n\tat Problem.main(tmpqn9kzk6t.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"\"\"(?i)^[aeiou].*\"\"\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpdep4d41h.scala:12)\n\tat Problem.main(tmpdep4d41h.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if(string.matches(\"^[aeiou].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpqn9kzk6t.scala:11)\n\tat Problem.main(tmpqn9kzk6t.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstMatchIn(string) match {\n            case Some(_) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        string.matches(\"^[aeiou].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpe136bhx8.scala:11)\n\tat Problem.main(tmpe136bhx8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(str) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        string match {\n            case regex(_*) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if (string.matches(\"^[aeiou].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpug_8mx9a.scala:12)\n\tat Problem.main(tmpug_8mx9a.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result != None) {\n            return true\n        }\n        return false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU]\".r\n        pattern.findFirstIn(string).isDefined\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if(result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        string match {\n            case regex(_*) => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if (string.matches(\"^[aeiou].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp_56atm68.scala:11)\n\tat Problem.main(tmp_56atm68.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if (string.matches(\"[aeiou].*\")) true else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpj0u08946.scala:11)\n\tat Problem.main(tmpj0u08946.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        string match {\n            case regex() => true\n            case _ => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123482,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if(result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) {\n            return false\n        }\n        return true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        val result = pattern.findFirstIn(string)\n        if (result == None) false else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        regex.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        string.matches(\"^[aeiouAEIOU].*\")\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(x) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517439,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        if (string.matches(\"^[aeiou].*\")) true\n        else false\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpug_8mx9a.scala:12)\n\tat Problem.main(tmpug_8mx9a.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val pattern = \"^[aeiouAEIOU].*\".r\n        pattern.findFirstIn(string) match {\n            case Some(s) => true\n            case None => false\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665517435,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to check whether the given string is starting with a vowel or not using regex.\n    def checkStr(string : String) : Boolean = {\n        val regex = \"^[aeiouAEIOU].*\".r\n        val result = regex.findFirstIn(string)\n        if (result == None) false\n        else true\n    }\n    def main(args: Array[String]) = {\n    assert(checkStr((\"annie\")) == (true));\n    assert(checkStr((\"dawood\")) == (false));\n    assert(checkStr((\"Else\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666123481,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
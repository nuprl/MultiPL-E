{
  "name": "mbpp_785_tuple_str_int",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_785_tuple_str_int.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        test_arr(0) * test_arr(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8hhkz7eg.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test(0), test(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpod9lcge4.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpod9lcge4.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpod9lcge4.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpod9lcge4.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\")\n        var test_int = test_arr.map(x => x.toLong)\n        var test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4_n2ntln.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4_n2ntln.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4_n2ntln.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4_n2ntln.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_arr = new Array[Long](test_str_arr.length)\n        for (i <- 0 until test_str_arr.length) {\n            test_arr(i) = test_str_arr(i).toLong\n        }\n        return test_arr.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmppj0t6rw3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppj0t6rw3.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppj0t6rw3.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppj0t6rw3.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(_.toLong)\n        test_int(0) * test_int(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmvv6p1fn.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmvv6p1fn.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmvv6p1fn.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmvv6p1fn.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = new Array[Int](test_str_arr.length)\n        for (i <- 0 until test_str_arr.length) {\n            test_int_arr(i) = test_str_arr(i).toInt\n        }\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp277zf_kx.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp277zf_kx.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp277zf_kx.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp277zf_kx.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp78guyjvt.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp78guyjvt.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp78guyjvt.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp78guyjvt.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(_.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_str = test_int_tuple.toString\n        val test_int_tuple_str_int = test_int_tuple_str.toInt\n        return test_int_tuple_str_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgb4h44g6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgb4h44g6.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgb4h44g6.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgb4h44g6.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toInt, test_arr(1).toInt)\n        val test_int = test_tuple._1 * test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkyyrh7_n.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkyyrh7_n.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkyyrh7_n.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkyyrh7_n.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_tuple = (test_int_arr(0), test_int_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpv3f4v9nc.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv3f4v9nc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv3f4v9nc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv3f4v9nc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\" \").map(_.toInt)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0uztw2q8.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0uztw2q8.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0uztw2q8.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0uztw2q8.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpokw3oj3z.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpokw3oj3z.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpokw3oj3z.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpokw3oj3z.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tup = (test_int(0), test_int(1))\n        test_tup._1 * test_tup._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgt32bj5q.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgt32bj5q.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgt32bj5q.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgt32bj5q.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        val test_int_tuple = test_tuple._1 * test_tuple._2\n        return test_int_tuple\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp1x9rdghm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1x9rdghm.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1x9rdghm.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1x9rdghm.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpn7mxafq9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn7mxafq9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn7mxafq9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpn7mxafq9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmo84a_r7.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmo84a_r7.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmo84a_r7.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmo84a_r7.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\",\")\n        var int_arr = new Array[Int](str_arr.length)\n        for (i <- 0 until str_arr.length) {\n            int_arr(i) = str_arr(i).toInt\n        }\n        var result = 0L\n        for (i <- 0 until int_arr.length) {\n            result += int_arr(i) * pow(10, int_arr.length - i - 1).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpv07wtfak.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv07wtfak.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv07wtfak.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv07wtfak.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 100 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_product = test_int_tuple._1 * test_int_tuple._2\n        return test_int_tuple_product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        (test_arr(0).toInt, test_arr(1).toInt)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpffa7p4qt.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        (test_arr(\u001b[31m0\u001b[0m).toInt, test_arr(\u001b[31m1\u001b[0m).toInt)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (Int, Int)\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpffa7p4qt.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpffa7p4qt.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpffa7p4qt.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpffa7p4qt.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp78guyjvt.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp78guyjvt.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp78guyjvt.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp78guyjvt.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 100000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123350,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7wvgbgfi.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7wvgbgfi.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7wvgbgfi.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7wvgbgfi.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toInt, test_arr(1).toInt)\n        val test_int = test_tuple._1 * 100 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx3__bxuv.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx3__bxuv.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx3__bxuv.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx3__bxuv.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple = test_tuple._1 * test_tuple._2\n        return test_int_tuple\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123377,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpyem4uw_b.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyem4uw_b.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyem4uw_b.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyem4uw_b.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_str = test_int_tuple.toString\n        val test_int_tuple_str_int = test_int_tuple_str.toInt\n        return test_int_tuple_str_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp2786usho.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2786usho.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2786usho.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp2786usho.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_int = test_arr.reduceLeft((x, y) => x * 10 + y)\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp73vyr33m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp73vyr33m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp73vyr33m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp73vyr33m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tup = (test_arr(0).toLong, test_arr(1).toLong)\n        test_tup._1 * test_tup._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmhe5fjww.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmhe5fjww.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmhe5fjww.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmhe5fjww.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\",\")\n        var int_arr = new Array[Int](str_arr.length)\n        for (i <- 0 until str_arr.length) {\n            int_arr(i) = str_arr(i).toInt\n        }\n        var result = 0L\n        for (i <- 0 until int_arr.length) {\n            result = result * 10 + int_arr(i)\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpeq20fgf6.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeq20fgf6.scala:19:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeq20fgf6.scala:20:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpeq20fgf6.scala:21:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 100000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123350,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwda9riwc.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwda9riwc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwda9riwc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwda9riwc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpfm9orcw8.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfm9orcw8.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfm9orcw8.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpfm9orcw8.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toLong)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 100000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp720y7yc0.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(_.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        val test_tuple_int = test_tuple._1 * test_tuple._2\n        return test_tuple_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpurd8jkpk.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpurd8jkpk.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpurd8jkpk.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpurd8jkpk.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_product = test_int_tuple._1 * test_int_tuple._2\n        return test_int_tuple_product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        int_arr.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpo70ebc6t.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpo70ebc6t.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpo70ebc6t.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpo70ebc6t.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_arr = test_str_arr.map(x => x.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123377,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxo75u3o_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxo75u3o_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxo75u3o_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxo75u3o_.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(x => x.toInt)\n        val test_tup = (test_arr(0), test_arr(1))\n        val test_int = test_tup._1 * test_tup._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpbp2lfb5e.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpbp2lfb5e.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpbp2lfb5e.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpbp2lfb5e.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmplm44epqy.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplm44epqy.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplm44epqy.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplm44epqy.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        val test_long = test_tuple._1 * test_tuple._2\n        return test_long\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk7wv2ig7.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk7wv2ig7.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk7wv2ig7.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk7wv2ig7.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        val test_result = test_tuple._1 * test_tuple._2\n        return test_result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123377,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqlmdj4vj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqlmdj4vj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqlmdj4vj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqlmdj4vj.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp1ypem2bz.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1ypem2bz.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1ypem2bz.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1ypem2bz.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_tuple = test_str.split(\" \").map(_.toLong)\n        val test_tuple_int = (test_tuple(0), test_tuple(1))\n        val test_tuple_int_sum = test_tuple_int._1 + test_tuple_int._2\n        return test_tuple_int_sum\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpywo1doic.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpywo1doic.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpywo1doic.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpywo1doic.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_product = test_int_tuple._1 * test_int_tuple._2\n        return test_int_tuple_product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(_.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 100 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_tuple = (test_int_arr(0), test_int_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpv3f4v9nc.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv3f4v9nc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv3f4v9nc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpv3f4v9nc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_tuple : List[Long] = List()\n        var test_str_list = test_str.split(\",\")\n        for (i <- 0 until test_str_list.length) {\n            test_tuple = test_tuple :+ test_str_list(i).toLong\n        }\n        return test_tuple.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpd5azwqj8.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpd5azwqj8.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpd5azwqj8.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpd5azwqj8.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123377,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpliglgsg_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpliglgsg_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpliglgsg_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpliglgsg_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_int = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvakzwcxn.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvakzwcxn.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvakzwcxn.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvakzwcxn.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        test_arr.foldLeft(0L)((a, b) => a * 10 + b)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmplhftaow0.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplhftaow0.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplhftaow0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplhftaow0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(_.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123379,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpcro7afx9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcro7afx9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcro7afx9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcro7afx9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toInt\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510330,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp57o2yvxo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp57o2yvxo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp57o2yvxo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp57o2yvxo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmppjd3npnd.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjd3npnd.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjd3npnd.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjd3npnd.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toInt)\n        var result = 0L\n        for (i <- 0 until test_arr.length) {\n            result += test_arr(i) * pow(10, test_arr.length - i - 1).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmplbl7f4pi.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplbl7f4pi.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplbl7f4pi.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplbl7f4pi.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_str_arr(0), test_str_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqkajt__5.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqkajt__5.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqkajt__5.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqkajt__5.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\" \")\n        var test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpuwv6dusl.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuwv6dusl.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuwv6dusl.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpuwv6dusl.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        var test_int = 0L\n        for (i <- 0 until test_arr.length) {\n            test_int += test_arr(i).toLong * pow(10, test_arr.length - i - 1).toLong\n        }\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123391,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpr_9n14e0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr_9n14e0.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr_9n14e0.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpr_9n14e0.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmplm44epqy.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplm44epqy.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplm44epqy.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplm44epqy.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmposs9ek_k.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmposs9ek_k.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmposs9ek_k.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmposs9ek_k.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_evth_yh.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_evth_yh.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_evth_yh.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_evth_yh.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmppjjzf39d.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 100 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        var test_int_arr = new Array[Long](test_str_arr.length)\n        for (i <- 0 until test_str_arr.length) {\n            test_int_arr(i) = test_str_arr(i).toLong\n        }\n        return test_int_arr.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpb4fx9h1w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb4fx9h1w.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb4fx9h1w.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpb4fx9h1w.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        var test_int_arr = new Array[Long](test_str_arr.length)\n        for (i <- 0 until test_str_arr.length) {\n            test_int_arr(i) = test_str_arr(i).toLong\n        }\n        test_int_arr.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpdt75a2jd.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdt75a2jd.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdt75a2jd.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpdt75a2jd.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\",\")\n        var num_arr = new Array[Long](str_arr.length)\n        for (i <- 0 until str_arr.length) {\n            num_arr(i) = str_arr(i).toLong\n        }\n        return num_arr.product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx8x7pvyg.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx8x7pvyg.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx8x7pvyg.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx8x7pvyg.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        return test_str.split(\",\").map(_.toLong).product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123348,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:9:11 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        val test_tuple_int = test_tuple._1 * test_tuple._2\n        return test_tuple_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmphv6dzudl.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphv6dzudl.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphv6dzudl.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphv6dzudl.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\",\")\n        var int_arr = new Array[Int](str_arr.length)\n        for (i <- 0 until str_arr.length) {\n            int_arr(i) = str_arr(i).toInt\n        }\n        var int_tuple = (int_arr(0), int_arr(1))\n        return int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpl6c3m2to.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl6c3m2to.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl6c3m2to.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl6c3m2to.scala:18:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123318,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzrp_9yu1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\" \")\n        val int_arr = str_arr.map(x => x.toInt)\n        val int_tuple = (int_arr(0), int_arr(1))\n        return int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgtz2zf04.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgtz2zf04.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgtz2zf04.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgtz2zf04.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(_.toLong)\n        test_int(0) * test_int(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmvv6p1fn.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmvv6p1fn.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmvv6p1fn.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmvv6p1fn.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val int_tuple = (int_arr(0), int_arr(1))\n        int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwjff5hfy.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwjff5hfy.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwjff5hfy.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwjff5hfy.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_str_arr(0), test_str_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqkajt__5.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqkajt__5.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqkajt__5.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqkajt__5.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(x => x.toLong)\n        return test_arr_int(0) * test_arr_int(1)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123393,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpl0t6nwcw.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl0t6nwcw.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl0t6nwcw.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpl0t6nwcw.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        return test_str.split(\",\").map(_.toLong).product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123348,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:9:11 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpgamuw_ci.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(_.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvcay22lp.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvcay22lp.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvcay22lp.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvcay22lp.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123377,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpliglgsg_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpliglgsg_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpliglgsg_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpliglgsg_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        var test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123392,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpjefeb2w4.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjefeb2w4.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjefeb2w4.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjefeb2w4.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_int = 0L\n        for (i <- 0 until test_str.length) {\n            test_int += (test_str(i) - '0') * pow(10, test_str.length - i - 1).toLong\n        }\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpyhjjwhqz.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyhjjwhqz.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyhjjwhqz.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyhjjwhqz.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toInt, test_arr(1).toInt)\n        val test_int = test_tuple._1 * 100 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpx3__bxuv.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx3__bxuv.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx3__bxuv.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx3__bxuv.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tup = (test_arr(0).toInt, test_arr(1).toInt)\n        val test_int = test_tup._1 * test_tup._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpcrtfo_87.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcrtfo_87.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcrtfo_87.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpcrtfo_87.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp87bool9w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp87bool9w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp87bool9w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp87bool9w.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\" \")\n        val test_arr = test_str_arr.map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpff2hixyi.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpff2hixyi.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpff2hixyi.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpff2hixyi.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(_.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpt1b0r00o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var str_arr = test_str.split(\",\")\n        var int_arr = str_arr.map(x => x.toLong)\n        var int_tuple = (int_arr(0), int_arr(1))\n        return int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpojd2yfgz.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpojd2yfgz.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpojd2yfgz.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpojd2yfgz.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\")\n        var test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwkch_5cj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123347,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwno7una0.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwno7una0.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwno7una0.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwno7una0.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpmyu1sykw.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmyu1sykw.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmyu1sykw.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpmyu1sykw.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val int_tuple = (int_arr(0), int_arr(1))\n        val result = int_tuple._1 * int_tuple._2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpatpnd8zm.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpatpnd8zm.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpatpnd8zm.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpatpnd8zm.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toLong)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tup = (test_arr(0), test_arr(1))\n        val test_int = test_tup._1 * 1000000 + test_tup._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_8v4x3nu.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_8v4x3nu.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_8v4x3nu.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_8v4x3nu.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 100 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvn3u2f13.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptvrnmflj.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpkid7ielo.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        val test_tuple_int = test_tuple._1 * test_tuple._2\n        return test_tuple_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp97wlrjgc.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpolpmeuma.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpolpmeuma.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpolpmeuma.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpolpmeuma.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\" \")\n        var test_int = test_arr.map(x => x.toLong)\n        var test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123398,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpq4yvkjoc.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq4yvkjoc.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq4yvkjoc.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpq4yvkjoc.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510340,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_hhwqp3w.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_y41h3pa.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123333,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpud3yjr6l.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj9n5_fz3.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toLong)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqphf9co8.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toLong)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp7c3qds2m.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\" \")\n        var test_int = (test_arr(0).toInt, test_arr(1).toInt)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123398,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpiub3l4tq.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiub3l4tq.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiub3l4tq.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpiub3l4tq.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\" \")\n        val test_int_arr = test_str_arr.map(x => x.toLong)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        return test_int_tuple._1 * test_int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123399,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp48d5pjac.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp48d5pjac.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp48d5pjac.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp48d5pjac.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * 1000000 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123399,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpyvt6k5p6.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyvt6k5p6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyvt6k5p6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyvt6k5p6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_str_arr = test_str.split(\",\")\n        val test_int_arr = test_str_arr.map(x => x.toInt)\n        val test_int_tuple = (test_int_arr(0), test_int_arr(1))\n        val test_int_tuple_product = test_int_tuple._1 * test_int_tuple._2\n        return test_int_tuple_product\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123378,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph68kmt68.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123335,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp8e6482xb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123349,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmphh70oftb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphh70oftb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphh70oftb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmphh70oftb.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * 1000000 + test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123399,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpyvt6k5p6.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyvt6k5p6.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyvt6k5p6.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpyvt6k5p6.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \").map(x => x.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123399,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvtxl54mp.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvtxl54mp.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvtxl54mp.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvtxl54mp.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510339,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpp51uuer1.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val str_arr = test_str.split(\",\")\n        val int_arr = str_arr.map(x => x.toInt)\n        val int_tuple = (int_arr(0), int_arr(1))\n        int_tuple._1 * int_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwjff5hfy.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwjff5hfy.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwjff5hfy.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwjff5hfy.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_int(0), test_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpj_z1e5m9.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toLong)\n        val test_tuple = (test_arr(0), test_arr(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_qjoa2wb.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        (test_arr(0).toLong, test_arr(1).toLong)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123362,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8skw6al.scala:7:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m7 |\u001b[0m        (test_arr(\u001b[31m0\u001b[0m).toLong, test_arr(\u001b[31m1\u001b[0m).toLong)\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m        Found:    (Long, Long)\n\u001b[31m  |\u001b[0m        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz8skw6al.scala:10:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz8skw6al.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz8skw6al.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpz8skw6al.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tup = (test_arr(0), test_arr(1))\n        val test_int = test_tup._1 * pow(10, test_tup._2.toInt).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123399,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpme7zaz43.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpme7zaz43.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpme7zaz43.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpme7zaz43.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var tuple = test_str.split(\",\").map(_.toInt)\n        var result = 0L\n        for (i <- 0 until tuple.length) {\n            result += tuple(i) * pow(10, tuple.length - i - 1).toLong\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123399,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp3dftlvvy.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3dftlvvy.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3dftlvvy.scala:16:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp3dftlvvy.scala:17:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * pow(10, test_tuple._2).toLong\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp599bc9ny.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\" \")\n        val test_arr_int = test_arr.map(x => x.toInt)\n        val test_tuple = (test_arr_int(0), test_arr_int(1))\n        test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123334,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp701nmr4x.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\").map(_.toInt)\n        val test_tuple = (test_arr(0), test_arr(1))\n        val test_int = test_tuple._1 * 1000000 + test_tuple._2\n        return test_int\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1665510329,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpk0i_jd4o.scala:15:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\")\n        var test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123363,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp250qqnx_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        var test_arr = test_str.split(\",\").map(_.toInt)\n        var test_tuple = (test_arr(0), test_arr(1))\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpduwgixvh.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_int = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_int._1 * test_int._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0nqanv_l.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert tuple string to integer tuple.\n    def tupleStrInt(test_str : String) : Long = {\n        val test_arr = test_str.split(\",\")\n        val test_tuple = (test_arr(0).toLong, test_arr(1).toLong)\n        return test_tuple._1 * test_tuple._2\n    }\n    def main(args: Array[String]) = {\n    assert(tupleStrInt((\"(7, 8, 9)\")) == (7l, 8l, 9l));\n    assert(tupleStrInt((\"(1, 2, 3)\")) == (1l, 2l, 3l));\n    assert(tupleStrInt((\"(4, 5, 6)\")) == (4l, 5l, 6l));\n    assert(tupleStrInt((\"(7, 81, 19)\")) == (7l, 81l, 19l));\n    }\n\n}\n",
      "timestamp": 1666123319,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:11:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 8, 9)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m9l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:12:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(1, 2, 3)\"\u001b[0m)) == (\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:13:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(4, 5, 6)\"\u001b[0m)) == (\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpvyksyna_.scala:14:11 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleStrInt((\u001b[31m\"(7, 81, 19)\"\u001b[0m)) == (\u001b[31m7l\u001b[0m, \u001b[31m81l\u001b[0m, \u001b[31m19l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mValues of types Long and (Long, Long, Long) cannot be compared with == or !=\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
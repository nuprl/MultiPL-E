{
  "name": "mbpp_116_tuple_to_int",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_116_tuple_to_int.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num != 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num : Long = nums\n        var i : Int = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91bu3mn7.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91bu3mn7.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp91bu3mn7.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Int = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4euybte.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd1bmamas.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1bmamas.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1bmamas.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1bmamas.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num != 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwyaso9g9.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwyaso9g9.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwyaso9g9.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num : Long = nums\n        var i : Long = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41bwperb.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41bwperb.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41bwperb.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num != 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lwdhxsp.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lwdhxsp.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2lwdhxsp.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0L\n        var i = 0\n        while (nums != 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdig5egu2.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        var i = 0\n        while (n > 0) {\n            result += (n % 10) * pow(10, i).toLong\n            i += 1\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bejfmka.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bejfmka.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bejfmka.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        if (nums == 0) 0\n        else {\n            val digits = nums.toString.toList\n            val numDigits = digits.length\n            val maxDigit = digits.max\n            val maxDigitIndex = digits.indexOf(maxDigit)\n            val maxDigitPower = pow(10, numDigits - maxDigitIndex - 1).toLong\n            maxDigit * maxDigitPower + tupleToInt(nums - maxDigit * maxDigitPower)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqa3r7g9u.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqa3r7g9u.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqa3r7g9u.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result *= 10\n            result += num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc4hput55.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc4hput55.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc4hput55.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp20ty8szo.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20ty8szo.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20ty8szo.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp20ty8szo.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0L\n        var i = 0\n        while (nums != 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdig5egu2.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0L\n        var i = 0\n        while (nums != 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdig5egu2.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        val digits = nums.toString.map(_.asDigit)\n        digits.foldLeft(0)((a, b) => a * 10 + b)\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprrr23ryb.scala:10:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprrr23ryb.scala:11:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprrr23ryb.scala:12:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0a90tcvq.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var res = 0L\n        var i = 0\n        while (nums != 0) {\n            res += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdig5egu2.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdig5egu2.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpco3bguu9.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpco3bguu9.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        while (n > 0) {\n            result = result * 10 + (n % 10)\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            val digit = nums % 10\n            result += digit * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1vw0h3kc.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vw0h3kc.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vw0h3kc.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1vw0h3kc.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var temp = nums\n        while (temp > 0) {\n            result = result * 10 + temp % 10\n            temp /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyqus1_6o.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        while (n > 0) {\n            result = result * 10 + (n % 10)\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var n = nums\n        while (n > 0) {\n            result = result * 10 + (n % 10)\n            n /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123914,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwidleix.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var temp = nums\n        while (temp > 0) {\n            result = result * 10 + temp % 10\n            temp /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            i += 1\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1x_fujs2.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1x_fujs2.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1x_fujs2.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        // TODO: Implement this\n        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfs5d3yci.scala:10:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfs5d3yci.scala:11:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfs5d3yci.scala:12:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var temp = nums\n        while (temp > 0) {\n            result = result * 10 + temp % 10\n            temp /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        for (i <- 0 until nums.toString.length) {\n            result += (nums.toString.charAt(i) - '0') * pow(10, nums.toString.length - i - 1).toLong\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpow29jsqf.scala:13:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpow29jsqf.scala:14:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpow29jsqf.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var divisor = 1L\n        while (nums > 0) {\n            result += (nums % 10) * divisor\n            nums /= 10\n            divisor *= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnn_7bkz7.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn_7bkz7.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn_7bkz7.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnn_7bkz7.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Int = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4euybte.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var sum = 0L\n        var num = nums\n        while (num > 0) {\n            sum = sum * 10 + num % 10\n            num /= 10\n        }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8k4aqlv.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8k4aqlv.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz8k4aqlv.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzvi38oz0.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzvi38oz0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num : Long = nums\n        while (num != 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bb0cgvd.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bb0cgvd.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_bb0cgvd.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num : Long = nums\n        var i : Int = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            i += 1\n            num /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8c0yng35.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8c0yng35.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8c0yng35.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0a90tcvq.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd1bmamas.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1bmamas.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1bmamas.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd1bmamas.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        nums.toString.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123931,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk1tbylnh.scala:9:22 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m  |\u001b[0m                      Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk1tbylnh.scala:10:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk1tbylnh.scala:11:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        var n = nums\n        while (n > 0) {\n            result += (n % 10) * pow(10, i).toLong\n            n /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_az8rdv.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_az8rdv.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2_az8rdv.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num != 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9sm4a8b7.scala:9:19 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m            result += (nums % \u001b[31m10\u001b[0m) * pow(\u001b[31m10\u001b[0m, i).toLong\n\u001b[31m\u001b[31m  |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9sm4a8b7.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sm4a8b7.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sm4a8b7.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9sm4a8b7.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Int = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo4euybte.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo4euybte.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var num = nums\n        var result = 0\n        var i = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo0qwrlk5.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += (num % \u001b[31m10\u001b[0m) * pow(\u001b[31m10\u001b[0m, i).toLong\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0qwrlk5.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0qwrlk5.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpo0qwrlk5.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num != 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509683,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17ya8rjy.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var num : Long = nums\n        var i : Long = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, i).toLong\n            num /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41bwperb.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41bwperb.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp41bwperb.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0a90tcvq.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0a90tcvq.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums != 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0ga_2xv4.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0ga_2xv4.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var temp = nums\n        while (temp > 0) {\n            result = result * 10 + temp % 10\n            temp /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var temp = nums\n        while (temp > 0) {\n            result = result * 10 + temp % 10\n            temp /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123913,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpihyitu_u.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var num = nums\n        var result = 0\n        var index = 0\n        while (num > 0) {\n            result += (num % 10) * pow(10, index).toLong\n            index += 1\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123932,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpanr1ryl0.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += (num % \u001b[31m10\u001b[0m) * pow(\u001b[31m10\u001b[0m, index).toLong\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of Int - did you mean Int.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpanr1ryl0.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpanr1ryl0.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpanr1ryl0.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var temp : Long = nums\n        var i : Int = 0\n        while (temp > 0) {\n            result += (temp % 10) * pow(10, i).toLong\n            temp /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1666123915,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdubbjhqs.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdubbjhqs.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpdubbjhqs.scala:19:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxtk7n4k3.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxtk7n4k3.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var i = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            nums /= 10\n            i += 1\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgif0y9sh.scala:10:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgif0y9sh.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + num % 10\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzb1i3q1.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result = 0L\n        var num = nums\n        while (num > 0) {\n            result = result * 10 + (num % 10)\n            num /= 10\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:15:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1zu9ajui.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to convert a given tuple of positive integers into a single integer.\n    def tupleToInt(nums : Long) : Long = {\n        var result : Long = 0\n        var i : Long = 0\n        while (nums > 0) {\n            result += (nums % 10) * pow(10, i).toLong\n            i += 1\n            nums /= 10\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(tupleToInt((1l, 2l, 3l)) == (123l));\n    assert(tupleToInt((4l, 5l, 6l)) == (456l));\n    assert(tupleToInt((5l, 6l, 7l)) == (567l));\n    }\n\n}\n",
      "timestamp": 1665509679,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwcmhgm__.scala:11:17 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            nums /= \u001b[31m10\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value /= is not a member of Long - did you mean nums.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:16:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(tupleToInt((\u001b[31m1l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m123l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:17:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(tupleToInt((\u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m)) == (\u001b[31m456l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpwcmhgm__.scala:18:22 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(tupleToInt((\u001b[31m5l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m7l\u001b[0m)) == (\u001b[31m567l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Found:    (Long, Long, Long)\n\u001b[31m   |\u001b[0m                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
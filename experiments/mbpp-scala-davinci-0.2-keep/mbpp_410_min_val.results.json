{
  "name": "mbpp_410_min_val",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_410_min_val.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight).map(x => x.right.get)\n        list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (x <- listval) {\n            x match {\n                case Left(s) => {\n                    if (s.length < min) min = s.length\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx_zburlc.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx_zburlc.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx_zburlc.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx_zburlc.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong < min) min = s.toLong\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpne6f80qe.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpne6f80qe.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpne6f80qe.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpne6f80qe.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num < min) min = num\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                val j = i.right.get\n                if (j < min) min = j\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf3obytwu.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf3obytwu.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf3obytwu.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf3obytwu.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(x => x.isRight).map(x => x.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {}\n            case Right(l) => if (l < min) min = l\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo1m91v.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo1m91v.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo1m91v.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo1m91v.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                val temp = i.right.get\n                if (temp < min) {\n                    min = temp\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe14taaxq.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe14taaxq.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe14taaxq.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpe14taaxq.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight).map(x => x.right.get)\n        list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (valu <- listval) {\n            valu match {\n                case Left(str) => {\n                    val num = str.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => if (num < min) min = num\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71e7_zbe.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71e7_zbe.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71e7_zbe.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp71e7_zbe.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {\n                if (s.toLong < min) min = s.toLong\n            }\n            case Right(l) => {\n                if (l < min) min = l\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcdgb7r16.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcdgb7r16.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcdgb7r16.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcdgb7r16.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => min = min\n                case Right(l) => if (l < min) min = l\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3f9sx07r.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3f9sx07r.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3f9sx07r.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3f9sx07r.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => if (num < min) min = num\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7n7493y.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7n7493y.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7n7493y.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw7n7493y.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => {\n                    if (num < min) min = num\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {}\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp75hom3_0.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp75hom3_0.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp75hom3_0.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp75hom3_0.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (min > s.length) min = s.length\n                }\n                case Right(l) => {\n                    if (min > l) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_yfrfzp.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_yfrfzp.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_yfrfzp.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu_yfrfzp.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {}\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4j1947k7.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4j1947k7.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4j1947k7.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4j1947k7.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight).map(x => x.right.get)\n        list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num < min) min = num\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7u3j7usv.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7u3j7usv.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7u3j7usv.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7u3j7usv.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (elem <- listval) {\n            elem match {\n                case Left(str) => {\n                    val num = str.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => {\n                    if (num < min) min = num\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_o7mvit.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_o7mvit.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_o7mvit.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd_o7mvit.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(_.isRight).map(_.right.get)\n        list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqswwexdp.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqswwexdp.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqswwexdp.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqswwexdp.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (x <- listval) {\n            x match {\n                case Left(s) =>\n                case Right(l) => min = min min l\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzf7ww4hk.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzf7ww4hk.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzf7ww4hk.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzf7ww4hk.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(_.isRight).map(_.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1q8i7d2r.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong < min) min = x.toLong\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpevs55ecq.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpevs55ecq.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpevs55ecq.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpevs55ecq.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {}\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp16t9akxf.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp16t9akxf.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp16t9akxf.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp16t9akxf.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var minVal = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < minVal) {\n                    minVal = i.right.get\n                }\n            }\n        }\n        minVal\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwk8049j.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwk8049j.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwk8049j.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpcwk8049j.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(s) => {\n                    if (s < min) min = s\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2ir5zj1.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2ir5zj1.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2ir5zj1.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy2ir5zj1.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (x <- listval) {\n            x match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2a9ns8lr.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2a9ns8lr.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2a9ns8lr.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2a9ns8lr.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong < min) {\n                        min = s.toLong\n                    }\n                }\n                case Right(l) => {\n                    if (l < min) {\n                        min = l\n                    }\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122455,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d47p83j.scala:24:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d47p83j.scala:24:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d47p83j.scala:24:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1d47p83j.scala:24:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3mj_2qi.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3mj_2qi.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3mj_2qi.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph3mj_2qi.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight).map(x => x.right.get)\n        list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num < min) min = num\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6nw01hvf.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6nw01hvf.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6nw01hvf.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6nw01hvf.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkqf71t_w.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num < min) min = num\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong < min) min = x.toLong\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6ygefun.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6ygefun.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6ygefun.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6ygefun.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong < min) min = x.toLong\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6ygefun.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6ygefun.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6ygefun.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6ygefun.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var minval = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < minval) minval = l\n                }\n                case Right(l) => {\n                    if (l < minval) minval = l\n                }\n            }\n        }\n        return minval\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8ijgytj.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8ijgytj.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8ijgytj.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_8ijgytj.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (x <- listval) {\n            if (x.isRight) {\n                if (x.right.get < min) {\n                    min = x.right.get\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122473,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy_m_43qr.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy_m_43qr.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy_m_43qr.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpy_m_43qr.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(str) => {\n                val num = str.toLong\n                if (num < min) min = num\n            }\n            case Right(num) => {\n                if (num < min) min = num\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2syq12gn.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2syq12gn.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2syq12gn.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2syq12gn.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.toLong < min) min = s.toLong\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpynz13dro.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpynz13dro.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpynz13dro.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpynz13dro.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh5rz1y_.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh5rz1y_.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh5rz1y_.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh5rz1y_.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(s)\n                case Right(n) => if (n < min) min = n\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk49dq2r1.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk49dq2r1.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk49dq2r1.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk49dq2r1.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {}\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntqc0n1l.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntqc0n1l.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntqc0n1l.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntqc0n1l.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_28nongo.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_28nongo.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_28nongo.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_28nongo.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(x => x.isRight).map(x => x.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    if (x.toLong < min) min = x.toLong\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1v3co4vk.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1v3co4vk.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1v3co4vk.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1v3co4vk.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(x => x.isRight).map(x => x.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => {\n                    if (num < min) min = num\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17zd7c8f.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17zd7c8f.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17zd7c8f.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp17zd7c8f.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                min = min min i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplk4bs4g8.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplk4bs4g8.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplk4bs4g8.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplk4bs4g8.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val n = s.toLong\n                    if (n < min) min = n\n                }\n                case Right(n) => {\n                    if (n < min) min = n\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpupnzd8zo.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpupnzd8zo.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpupnzd8zo.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpupnzd8zo.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp86_21w53.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {}\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ao0mryi.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ao0mryi.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ao0mryi.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5ao0mryi.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length < min) min = s.length\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val n = s.toLong\n                    if (n < min) min = n\n                }\n                case Right(n) => {\n                    if (n < min) min = n\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4f2guyv1.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4f2guyv1.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4f2guyv1.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4f2guyv1.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var minval = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {}\n            case Right(l) => {\n                if (l < minval) minval = l\n            }\n        })\n        minval\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwl1fjdb.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwl1fjdb.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwl1fjdb.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmptwl1fjdb.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(\"String: \" + s)\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu8jzgmdl.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu8jzgmdl.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu8jzgmdl.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu8jzgmdl.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {\n                if (s.length < min) min = s.length\n            }\n            case Right(l) => {\n                if (l < min) min = l\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76iro9se.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76iro9se.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76iro9se.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76iro9se.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => Long.MaxValue\n            case Right(x) => x\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpejvtu4_1.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpejvtu4_1.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpejvtu4_1.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpejvtu4_1.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(\"String: \" + s)\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62poeuto.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62poeuto.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62poeuto.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp62poeuto.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num < min) min = num\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpg4kjm9_l.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var minval : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val x = s.toLong\n                    if (x < minval) minval = x\n                }\n                case Right(x) => {\n                    if (x < minval) minval = x\n                }\n            }\n        }\n        minval\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusvvpavq.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusvvpavq.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusvvpavq.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpusvvpavq.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(x => x.isRight).map(x => x.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => {\n                    if (num < min) min = num\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpssb61v5y.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpssb61v5y.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpssb61v5y.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpssb61v5y.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => {\n                    if (num < min) min = num\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {}\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntqc0n1l.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntqc0n1l.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntqc0n1l.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntqc0n1l.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {}\n                case Right(l) => if (l < min) min = l\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa89kcrbs.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa89kcrbs.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa89kcrbs.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa89kcrbs.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length < min) min = s.length\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => {\n                    val num = x.toLong\n                    if (num < min) min = num\n                }\n                case Right(x) => {\n                    if (x < min) min = x\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6nw01hvf.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6nw01hvf.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6nw01hvf.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6nw01hvf.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val n = s.toLong\n                    if (n < min) min = n\n                }\n                case Right(n) => {\n                    if (n < min) min = n\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeyateaa7.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeyateaa7.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeyateaa7.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpeyateaa7.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk8slzwf.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk8slzwf.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk8slzwf.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprk8slzwf.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight).map(x => x.right.get)\n        list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(l) => Long.MaxValue\n            case Right(r) => r\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaog58n5l.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaog58n5l.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaog58n5l.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpaog58n5l.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(\"String\")\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3h_e6wn.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3h_e6wn.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3h_e6wn.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmps3h_e6wn.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(x => x.isRight).map(x => x.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122430,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia1wwrzi.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia1wwrzi.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia1wwrzi.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia1wwrzi.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122430,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia1wwrzi.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia1wwrzi.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia1wwrzi.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpia1wwrzi.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(_.isRight).map(_.right.get)\n        list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122474,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqswwexdp.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqswwexdp.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqswwexdp.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqswwexdp.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length < min) min = s.length\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(_.right.getOrElse(0)).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122493,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmplb1u5o_a.scala:6:45 ------------------------------------------\u001b[0m\u001b[0m\n\u001b[31m6 |\u001b[0m        listval.map(_.right.getOrElse(\u001b[31m0\u001b[0m)).min\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^\u001b[0m\n\u001b[31m  |\u001b[0mNo implicit Ordering defined for B\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mwhere:    B is a type variable with constraint >: AnyVal\n\u001b[31m  |\u001b[0m..\n\u001b[31m  |\u001b[0mI found:\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m    scala.math.Ordering.comparatorToOrdering[\u001b[35mB\u001b[0m](\n\u001b[31m  |\u001b[0m      /* missing */summon[java.util.Comparator[B]]\n\u001b[31m  |\u001b[0m    )\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0mBut no implicit values were found that match type java.util.Comparator[B].\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplb1u5o_a.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplb1u5o_a.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplb1u5o_a.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight)\n        list.map(x => x.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph1wlxy7h.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph1wlxy7h.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph1wlxy7h.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmph1wlxy7h.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => {\n                    if (num < min) min = num\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9qscmk_o.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpk2af6lbt.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(x => x.isRight).map(x => x.right.get)\n        list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8gti_e0b.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp58gv57ei.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) =>\n                case Right(l) => min = min min l\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76elsl9n.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76elsl9n.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76elsl9n.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp76elsl9n.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(str) => {\n                    val num = str.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => {\n                    if (num < min) min = num\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxna2lrhn.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxna2lrhn.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxna2lrhn.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxna2lrhn.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) =>\n                case Right(l) => min = min min l\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4flx8e00.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4flx8e00.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4flx8e00.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4flx8e00.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var minval = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < minval) minval = num\n                }\n                case Right(l) => {\n                    if (l < minval) minval = l\n                }\n            }\n        }\n        minval\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122491,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod08dv7f.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod08dv7f.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod08dv7f.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpod08dv7f.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {}\n            case Right(l) => {\n                if (l < min) min = l\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxurex3m4.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            if (x.isLeft) {\n                val num = x.left.get.toLong\n                if (num < min) min = num\n            }\n            else {\n                val num = x.right.get\n                if (num < min) min = num\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpym3kqph5.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpym3kqph5.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpym3kqph5.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpym3kqph5.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) =>\n            case Right(l) => if (l < min) min = l\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqy9b865e.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqy9b865e.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqy9b865e.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpqy9b865e.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            if (i.isLeft) {\n                min = min min i.left.get.toLong\n            } else {\n                min = min min i.right.get\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm1nzup2g.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm1nzup2g.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm1nzup2g.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm1nzup2g.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => if (l < min) min = l\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6aqv0r7k.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6aqv0r7k.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6aqv0r7k.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6aqv0r7k.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(\"String value : \" + s)\n                case Right(l) => {\n                    println(\"Long value : \" + l)\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjetknd_f.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjetknd_f.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjetknd_f.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjetknd_f.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (x <- listval) {\n            x match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122493,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd61mj_qg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd61mj_qg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd61mj_qg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpd61mj_qg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) min = i.right.get\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx4s4a6tg.scala:15:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {}\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm_vfxvq5.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm_vfxvq5.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm_vfxvq5.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpm_vfxvq5.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => {\n            x match {\n                case Left(s) => {\n                    if (s.length < min) min = s.length\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122413,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4xcl7djj.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4xcl7djj.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4xcl7djj.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4xcl7djj.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) =>\n            case Right(l) => if (l < min) min = l\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbcnbcd4a.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbcnbcd4a.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbcnbcd4a.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbcnbcd4a.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => if (l < min) min = l\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6aqv0r7k.scala:19:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6aqv0r7k.scala:19:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6aqv0r7k.scala:19:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6aqv0r7k.scala:19:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var minVal = Long.MaxValue\n        listval.foreach(x => {\n            if (x.isRight) {\n                val y = x.right.get\n                if (y < minVal) {\n                    minVal = y\n                }\n            }\n        })\n        minVal\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxndnuuf3.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxndnuuf3.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxndnuuf3.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxndnuuf3.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        val list = listval.filter(_.isRight).map(_.right.get)\n        if (list.isEmpty) 0 else list.min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122492,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr31r9sms.scala:10:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr31r9sms.scala:10:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr31r9sms.scala:10:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr31r9sms.scala:10:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l : Long = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122493,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4o09wk0_.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4o09wk0_.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4o09wk0_.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4o09wk0_.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuf9izgvg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuf9izgvg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuf9izgvg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuf9izgvg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.filter(x => x.isRight).map(x => x.right.get).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:46 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:56 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:60 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                            Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m  |\u001b[0m                                            Required: Either[String, Long]\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7yoo88sd.scala:9:64 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(minVal((Li",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => println(\"String value found\")\n                case Right(l) => if (l < min) min = l\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122493,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8y8xifpp.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8y8xifpp.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8y8xifpp.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8y8xifpp.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                val temp = i.right.get\n                if (temp < min) min = temp\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122432,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphkkfuzmr.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphkkfuzmr.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphkkfuzmr.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphkkfuzmr.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {}\n            case Right(l) => {\n                if (l < min) min = l\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(x) => println(\"String value\")\n                case Right(x) => if (x < min) min = x\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyt_fc8yf.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyt_fc8yf.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyt_fc8yf.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyt_fc8yf.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    if (s.length < min) min = s.length\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpldkc8ic3.scala:20:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => s.toLong\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpea5_0pec.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {}\n            case Right(l) => if (l < min) min = l\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo1m91v.scala:14:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo1m91v.scala:14:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo1m91v.scala:14:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzgo1m91v.scala:14:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {\n                if (s.length < min) min = s.length\n            }\n            case Right(l) => {\n                if (l < min) min = l\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf_gorccy.scala:18:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf_gorccy.scala:18:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf_gorccy.scala:18:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpf_gorccy.scala:18:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {}\n                case Right(l) => min = min min l\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122496,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7aznz9u4.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7aznz9u4.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7aznz9u4.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7aznz9u4.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            if (i.isRight) {\n                if (i.right.get < min) {\n                    min = i.right.get\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122450,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpzillautc.scala:17:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(s) => 0\n            case Right(l) => l\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2rfqtatw.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh5rz1y_.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh5rz1y_.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh5rz1y_.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfh5rz1y_.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ggopz01.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(str) => {\n                    val num = str.toLong\n                    if (num < min) min = num\n                }\n                case Right(num) => {\n                    if (num < min) min = num\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vyl4s10.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vyl4s10.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vyl4s10.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3vyl4s10.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min : Long = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val l = s.toLong\n                    if (l < min) min = l\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjgkrpkrz.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        for (i <- listval) {\n            i match {\n                case Left(s) => {\n                    val num = s.toLong\n                    if (num < min) min = num\n                }\n                case Right(l) => {\n                    if (l < min) min = l\n                }\n            }\n        }\n        return min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122449,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuf9izgvg.scala:21:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuf9izgvg.scala:21:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuf9izgvg.scala:21:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuf9izgvg.scala:21:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        var min = Long.MaxValue\n        listval.foreach(x => x match {\n            case Left(s) => {}\n            case Right(l) => {\n                if (l < min) min = l\n            }\n        })\n        min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1666122431,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjymfc3ml.scala:16:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to find the minimum value in a given heterogeneous list.\n    def minVal(listval : List[Either[String, Long]]) : Long = {\n        listval.map(x => x match {\n            case Left(x) => 0\n            case Right(x) => x\n        }).min\n    }\n    def main(args: Array[String]) = {\n    assert(minVal((List[Either[String, Long]](\"Python\", 3l, 2l, 4l, 5l, \"version\"))) == (2l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 15l, 20l, 25l))) == (15l));\n    assert(minVal((List[Either[String, Long]](\"Python\", 30l, 20l, 40l, 50l, \"version\"))) == (20l));\n    }\n\n}\n",
      "timestamp": 1665510083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:46 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                              ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[32m\"Python\"\u001b[0m : String)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:56 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                        ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m3L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:60 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(minVal((List[\u001b[35mEither\u001b[0m[\u001b[35mString\u001b[0m, \u001b[35mLong\u001b[0m]](\u001b[31m\"Python\"\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m5l\u001b[0m, \u001b[31m\"version\"\u001b[0m))) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                                            ^^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    (\u001b[31m2L\u001b[0m : Long)\n\u001b[31m   |\u001b[0m                                          Required: Either[String, Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp39j5f8qv.scala:12:64 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(min",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
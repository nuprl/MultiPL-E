{
  "name": "mbpp_404_minimum",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_404_minimum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a\n        else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a\n        else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a\n        else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a\n        else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a\n        else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a\n        else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a\n        else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        return min(a, b)\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a\n        else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1666123923,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the minimum of two numbers.\n    def minimum(a : Long, b : Long) : Long = {\n        if (a < b) a else b\n    }\n    def main(args: Array[String]) = {\n    assert(minimum((1l), (2l)) == (1l));\n    assert(minimum((-5l), (-4l)) == (-5l));\n    assert(minimum((0l), (0l)) == (0l));\n    }\n\n}\n",
      "timestamp": 1665509797,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_261_division_elements",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_261_division_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2;\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9lesfi5.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9lesfi5.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9lesfi5.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9lesfi5.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1, 2, 3, 4, 5)\n        val test_tup2 = (5, 4, 3, 2, 1)\n        val test_tup3 = test_tup1.zip(test_tup2).map(x => x._1 / x._2)\n        return test_tup3\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509728,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp28evoli0.scala:8:53 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tup3\u001b[0m = test_tup1.zip(test_tup2).map(\u001b[36mx\u001b[0m => x._1 / x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                     ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp28evoli0.scala:9:15 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mreturn\u001b[0m test_tup3\n\u001b[31m\u001b[31m  |\u001b[0m               ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mFound:    (test_tup3 : Nothing *: Nothing *: Nothing *: Nothing *: Nothing *: EmptyTuple)\n\u001b[31m  |\u001b[0mRequired: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp28evoli0.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp28evoli0.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation availab",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:11:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:12:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:11:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:12:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1,2,3,4,5)\n        val test_tup2 = (5,4,3,2,1)\n        val result = test_tup1.productIterator.zip(test_tup2.productIterator).map(x => x._1.asInstanceOf[Int] / x._2.asInstanceOf[Int]).toList\n        return result.product\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgp3tkoze.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgp3tkoze.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgp3tkoze.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgp3tkoze.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1/test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2hapv8p.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2hapv8p.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2hapv8p.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2hapv8p.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:11:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpduvnl7m8.scala:12:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1, 2, 3, 4, 5)\n        val test_tup2 = (5, 4, 3, 2, 1)\n        val result = test_tup1.zip(test_tup2).map(x => x._1 / x._2)\n        println(result)\n        return result.sum\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp96zd8p58.scala:8:50 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = test_tup1.zip(test_tup2).map(\u001b[36mx\u001b[0m => x._1 / x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                  ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp96zd8p58.scala:10:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mreturn\u001b[0m result.sum\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue sum is not a member of (Nothing, Nothing, Nothing, Nothing, Nothing)\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96zd8p58.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96zd8p58.scala:13:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp96zd8p58.scala:14:28 --------------------\u001b[0m\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1,2,3,4,5)\n        val tup2 = (5,4,3,2,1)\n        val tup3 = (0,0,0,0,0)\n        for (i <- 0 to 4) {\n            tup3.productElement(i) = tup1.productElement(i).asInstanceOf[Long] / tup2.productElement(i).asInstanceOf[Long]\n        }\n        return tup3.productElement(test_tup1).asInstanceOf[Long] / tup3.productElement(test_tup2).asInstanceOf[Long]\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnkpiqm96.scala:10:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            tup3.productElement(i) = tup1.productElement(i).asInstanceOf[\u001b[35mLong\u001b[0m] / tup2.productElement(i).asInstanceOf[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value update is not a member of Int => Any\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnkpiqm96.scala:12:35 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mreturn\u001b[0m tup3.productElement(test_tup1).asInstanceOf[\u001b[35mLong\u001b[0m] / tup3.productElement(test_tup2).asInstanceOf[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                   Found:    (test_tup1 : Long)\n\u001b[31m   |\u001b[0m                                   Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnkpiqm96.scala:12:87 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m        \u001b[33mreturn\u001b[0m tup3.productElement(test_tup1).asInstanceOf[\u001b[35mLong\u001b[0m] / tup3.productElement(test_tup2).asInstanceOf[\u001b[35mLong\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                       ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Found:    (test_tup2 : Long)\n\u001b[31m   |\u001b[0m                                            Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnkpiqm96.scala:15:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: L",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1,2,3,4,5)\n        val tup2 = (5,4,3,2,1)\n        val tup3 = (test_tup1, test_tup2)\n        val tup4 = (test_tup2, test_tup1)\n        val tup5 = (tup1._1/tup2._1, tup1._2/tup2._2, tup1._3/tup2._3, tup1._4/tup2._4, tup1._5/tup2._5)\n        val tup6 = (tup3._1/tup4._1, tup3._2/tup4._2)\n        val tup7 = (tup5._1/tup6._1, tup5._2/tup6._2, tup5._3/tup6._1, tup5._4/tup6._2, tup5._5/tup6._1)\n        return tup7._1 + tup7._2 + tup7._3 + tup7._4 + tup7._5\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp43yf3ru2.scala:16:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp43yf3ru2.scala:16:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp43yf3ru2.scala:17:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp43yf3ru2.scala:17:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp10yzn1nz.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb95ydlbw.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        var result : Long = 0\n        if (test_tup2 != 0) {\n            result = test_tup1 / test_tup2\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6drz9e4r.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6drz9e4r.scala:13:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6drz9e4r.scala:14:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6drz9e4r.scala:14:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        val tup1 = (1, 2, 3, 4, 5)\n        val tup2 = (5, 4, 3, 2, 1)\n        val tup3 = tup1.zipped.map(_ / _)\n        val tup4 = tup2.zipped.map(_ / _)\n        val tup5 = tup3.zipped.map(_ / _)\n        val tup6 = tup4.zipped.map(_ / _)\n        val tup7 = tup5.zipped.map(_ / _)\n        val tup8 = tup6.zipped.map(_ / _)\n        val tup9 = tup7.zipped.map(_ / _)\n        val tup10 = tup8.zipped.map(_ / _)\n        val tup11 = tup9.zipped.map(_ / _)\n        val tup12 = tup10.zipped.map(_ / _)\n        val tup13 = tup11.zipped.map(_ / _)\n        val tup14 = tup12.zipped.map(_ / _)\n        val tup15 = tup13.zipped.map(_ / _)\n        val tup16 = tup14.zipped.map(_ / _)\n        val tup17 = tup15.zipped.map(_ / _)\n        val tup18 = tup16.zipped.map(_ / _)\n        val tup19 = tup17.zipped.map(_ / _)\n        val tup20 = tup18.zipped.map(_ / _)\n        val tup21 = tup19.zipped.map(_ / _)\n        val tup22 = tup20.zipped.map(_ / _)\n        val tup23 = tup21.zipped.map(_ / _)\n        val tup24 = tup22.zipped.map(_ / _)\n        val tup25 = tup23.zipped.map(_ / _)\n        val tup26 = tup24.zipped.map(_ / _)\n        val tup27 = tup25.zipped\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5_8rddch.scala:9:24 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup3\u001b[0m = tup1.zipped.map(_ / _)\n\u001b[31m\u001b[31m  |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                 value zipped is not a member of (Int, Int, Int, Int, Int)\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5_8rddch.scala:10:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup4\u001b[0m = tup2.zipped.map(_ / _)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value zipped is not a member of (Int, Int, Int, Int, Int)\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_8rddch.scala:34:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_8rddch.scala:36:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5_8rddch.scala:36:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      R",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37s7x7qb.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37s7x7qb.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37s7x7qb.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37s7x7qb.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1\n        val tup2 = test_tup2\n        val result = tup1 / tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyub1b6w2.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyub1b6w2.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyub1b6w2.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyub1b6w2.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val result = test_tup1 / test_tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp44862z1k.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup3 = tup1.zip(tup2)\n        val tup4 = tup3.map(x => x._1 / x._2)\n        tup4.product\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp6cuf1l2_.scala:9:28 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtup4\u001b[0m = tup3.map(\u001b[36mx\u001b[0m => x._1 / x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                            ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6cuf1l2_.scala:10:13 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m        tup4.product\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue product is not a member of (Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing, Nothing\n\u001b[31m   |\u001b[0m  , \n\u001b[31m   |\u001b[0mNothing)\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6cuf1l2_.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6cuf1l2_.scala:13:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6cuf1l2_.scala:14:28 ---------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1/test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2hapv8p.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2hapv8p.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2hapv8p.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi2hapv8p.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37s7x7qb.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37s7x7qb.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37s7x7qb.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp37s7x7qb.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp5f3gd8sp.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val tup1 = test_tup1\n        val tup2 = test_tup2\n        val result = tup1 / tup2\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyub1b6w2.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyub1b6w2.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyub1b6w2.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpyub1b6w2.scala:13:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        // Write your code here\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:10:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw5tilhqs.scala:11:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        val test_tup1 = (1, 2, 3, 4, 5)\n        val test_tup2 = (5, 4, 3, 2, 1)\n        val test_tup3 = test_tup1.zip(test_tup2).map(x => x._1 / x._2)\n        test_tup3\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmprjcrr0ru.scala:8:53 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mtest_tup3\u001b[0m = test_tup1.zip(test_tup2).map(\u001b[36mx\u001b[0m => x._1 / x._2)\n\u001b[31m\u001b[31m  |\u001b[0m                                                     ^\u001b[0m\n\u001b[31m  |\u001b[0m                            Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m                            I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprjcrr0ru.scala:9:8 ----------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        test_tup3\n\u001b[31m\u001b[31m  |\u001b[0m        ^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0mFound:    (test_tup3 : Nothing *: Nothing *: Nothing *: Nothing *: Nothing *: EmptyTuple)\n\u001b[31m  |\u001b[0mRequired: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprjcrr0ru.scala:12:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprjcrr0ru.scala:12:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        } else {\n            return test_tup1 / test_tup2\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1666124187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2zelns0o.scala:13:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2zelns0o.scala:13:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2zelns0o.scala:14:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2zelns0o.scala:14:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        if (test_tup2 == 0) {\n            return 0\n        }\n        else {\n            return test_tup1 / test_tup2\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0flrg6w.scala:14:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0flrg6w.scala:14:47 --------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                                      Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0flrg6w.scala:15:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr0flrg6w.scala:15:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2;\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509727,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9lesfi5.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9lesfi5.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9lesfi5.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi9lesfi5.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpib0q9pv2.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes in two tuples and performs mathematical division operation element-wise across the given tuples.\n    def divisionElements(test_tup1 : Long, test_tup2 : Long) : Long = {\n        return test_tup1 / test_tup2\n    }\n    def main(args: Array[String]) = {\n    assert(divisionElements((10l, 4l, 6l, 9l), (5l, 2l, 3l, 3l)) == (2l, 2l, 2l, 3l));\n    assert(divisionElements((12l, 6l, 8l, 16l), (6l, 3l, 4l, 4l)) == (2l, 2l, 2l, 4l));\n    assert(divisionElements((20l, 14l, 36l, 18l), (5l, 7l, 6l, 9l)) == (4l, 2l, 6l, 2l));\n    }\n\n}\n",
      "timestamp": 1665509724,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:28 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                            Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:9:47 ---------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m    assert(divisionElements((\u001b[31m10l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m9l\u001b[0m), (\u001b[31m5l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m3l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m  |\u001b[0m                                               ^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m  |\u001b[0m                                        Found:    (Long, Long, Long, Long)\n\u001b[31m  |\u001b[0m                                        Required: Long\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b[0m, \u001b[31m4l\u001b[0m)) == (\u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m2l\u001b[0m, \u001b[31m4l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (Long, Long, Long, Long)\n\u001b[31m   |\u001b[0m                            Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprz3cauda.scala:10:48 --------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m    assert(divisionElements((\u001b[31m12l\u001b[0m, \u001b[31m6l\u001b[0m, \u001b[31m8l\u001b[0m, \u001b[31m16l\u001b[0m), (\u001b[31m6l\u001b[0m, \u001b[31m3l\u001b[0m, \u001b[31m4l\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
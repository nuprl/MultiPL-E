{
  "name": "mbpp_726_multiply_elements",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.\n    def multiplyElements(test_tup : Long) : Any = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_726_multiply_elements.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(multiplyElements((1l, 5l, 7l, 8l, 10l)).equals((Any((5l, 35l, 56l, 80l)))));\n    assert(multiplyElements((2l, 4l, 5l, 6l, 7l)).equals((Any((8l, 20l, 30l, 42l)))));\n    assert(multiplyElements((12l, 13l, 14l, 9l, 15l)).equals((Any((156l, 182l, 126l, 135l)))));\n    assert(multiplyElements((12l)).equals((Any())));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len)\n        for (i <- 0 until tup_len) {\n            tup_mult(i) = tup.productElement(i) * tup.productElement(i + 1)\n        }\n        tup_mult",
    "        val tup = (1,2,3,4,5)\n        val res = for (i <- 0 to tup.productArity - 2) yield tup.productElement(i) * tup.productElement(i + 1)\n        res",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_range = 0 until tup_len_minus_one\n        val tup_len_range = 0 until tup_len\n        val tup_len_minus_one_range_rev = tup_len_minus_one_range.reverse\n        val tup_len_range_rev = tup_len_range.reverse\n        val tup_len_minus_one_range_rev_rev = tup_len_minus_one_range_rev.reverse\n        val tup_len_range_rev_rev = tup_len_range_rev.reverse\n        val tup_len_minus_one_range_rev_rev_rev = tup_len_minus_one_range_rev_rev.reverse\n        val tup_len_range_rev_rev_rev = tup_len_range_rev_rev.reverse\n        val tup_len_minus_one_range_rev_rev_rev_rev = tup_len_minus_one_range_rev_rev_rev.reverse\n        val tup_len_range_rev_rev_rev_rev = tup_len_range_rev_rev_rev.reverse\n        val tup_len_minus_one_range_rev_rev_rev_rev_rev = tup_len_minus_one_range_rev_rev_rev_rev.reverse\n        val tup_len_range_rev_rev_rev_rev_rev = tup_len_range_rev_rev_rev_rev.reverse\n        val tup_len_minus_one_range_rev_rev_rev_rev_rev_rev = tup_len_minus_one_range_rev_rev_rev_rev_rev.reverse\n        val tup_len_range_rev_rev_rev_rev_rev_rev = tup_len_range_rev_rev_rev_rev_rev.reverse\n        val",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_1 = tup_len - 1\n        val tup_len_2 = tup_len - 2\n        val tup_len_3 = tup_len - 3\n        val tup_len_4 = tup_len - 4\n        val tup_len_5 = tup_len - 5\n        val tup_len_6 = tup_len - 6\n        val tup_len_7 = tup_len - 7\n        val tup_len_8 = tup_len - 8\n        val tup_len_9 = tup_len - 9\n        val tup_len_10 = tup_len - 10\n        val tup_len_11 = tup_len - 11\n        val tup_len_12 = tup_len - 12\n        val tup_len_13 = tup_len - 13\n        val tup_len_14 = tup_len - 14\n        val tup_len_15 = tup_len - 15\n        val tup_len_16 = tup_len - 16\n        val tup_len_17 = tup_len - 17\n        val tup_len_18 = tup_len - 18\n        val tup_len_19 = tup_len - 19\n        val tup_len_20 = tup_len - 20\n        val tup_len_21 = tup_len - 21\n        val tup_len_22 = tup_len - 22\n        val tup_len_23 = tup_len - 23\n        val tup_len_24 = tup_len - 24\n        val tup_len_25 = tup_len - 25\n        val tup_len_26 = tup_len - 26\n        val tup_len_27 = tup_len - 27\n        val tup_len_28 = tup_len - 28\n        val tup_len_29 = tup_len - 29\n        val tup_len",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_1 = tup_list_len - 1\n        val tup_list_len_minus_2 = tup_list_len - 2\n        val tup_list_len_minus_3 = tup_list_len - 3\n        val tup_list_len_minus_4 = tup_list_len - 4\n        val tup_list_len_minus_5 = tup_list_len - 5\n        val tup_list_len_minus_6 = tup_list_len - 6\n        val tup_list_len_minus_7 = tup_list_len - 7\n        val tup_list_len_minus_8 = tup_list_len - 8\n        val tup_list_len_minus_9 = tup_list_len - 9\n        val tup_list_len_minus_10 = tup_list_len - 10\n        val tup_list_len_minus_11 = tup_list_len - 11\n        val tup_list_len_minus_12 = tup_list_len - 12\n        val tup_list_len_minus_13 = tup_list_len - 13\n        val tup_list_len_minus_14 = tup_list_len - 14\n        val tup_list_len_minus_15 = tup_list_len - 15\n        val tup_list_len_minus_16 = tup_list_len - 16\n        val tup_list_len_minus_17 = tup_list_len - 17\n        val tup_list_len_minus_18 = tup_list_len - 18\n        val tup_list_len_minus_19 = tup_list_len - 19\n        val tup_list_len_minus_20 = tup_list_len -",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L)\n        val new_tup = tup.productIterator.toList.sliding(2).map(x => x(0).asInstanceOf[Long] * x(1).asInstanceOf[Long]).toList\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = new ArrayBuffer[Long]\n        for (i <- 0 until tup_len - 1) {\n            tup_mult += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_new = for (i <- 0 to tup_list_len - 2) yield tup_list(i) * tup_list(i+1)\n        tup_list_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_half = tup_len_minus_one / 2\n        val tup_len_minus_one_half_plus_one = tup_len_minus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half = tup_len_minus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one / 2\n",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        var tup_new = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            tup_new += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new.toArray",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        val tup_mult = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            tup_mult += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult.toArray",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_new = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            tup_new += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 to tup_len - 2) yield tup.productElement(i) * tup.productElement(i + 1)\n        tup_mult",
    "        var tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L)\n        var tup2 = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_one = tup_list_len - 1\n        val tup_list_len_minus_two = tup_list_len - 2\n        val tup_list_len_minus_three = tup_list_len - 3\n        val tup_list_len_minus_four = tup_list_len - 4\n        val tup_list_len_minus_five = tup_list_len - 5\n        val tup_list_len_minus_six = tup_list_len - 6\n        val tup_list_len_minus_seven = tup_list_len - 7\n        val tup_list_len_minus_eight = tup_list_len - 8\n        val tup_list_len_minus_nine = tup_list_len - 9\n        val tup_list_len_minus_ten = tup_list_len - 10\n        val tup_list_len_minus_eleven = tup_list_len - 11\n        val tup_list_len_minus_twelve = tup_list_len - 12\n        val tup_list_len_minus_thirteen = tup_list_len - 13\n        val tup_list_len_minus_fourteen = tup_list_len - 14\n        val tup_list_len_minus_fifteen = tup_list_len - 15\n        val tup_list_len_minus_sixteen = tup_list_len - 16\n        val tup_list_len_minus_seventeen = tup_list_len - 17\n        val tup_list_len_minus_eighteen = tup_list_len - 18\n        val tup_list_len_minus_nineteen = tup_list_len - 19\n        val tup_list_len_minus",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_len_minus_1 = tup_len - 1\n        val tup_len_minus_2 = tup_len - 2\n        val tup_len_minus_3 = tup_len - 3\n        val tup_len_minus_4 = tup_len - 4\n        val tup_len_minus_5 = tup_len - 5\n        val tup_len_minus_6 = tup_len - 6\n        val tup_len_minus_7 = tup_len - 7\n        val tup_len_minus_8 = tup_len - 8\n        val tup_len_minus_9 = tup_len - 9\n        val tup_len_minus_10 = tup_len - 10\n        val tup_len_minus_11 = tup_len - 11\n        val tup_len_minus_12 = tup_len - 12\n        val tup_len_minus_13 = tup_len - 13\n        val tup_len_minus_14 = tup_len - 14\n        val tup_len_minus_15 = tup_len - 15\n        val tup_len_minus_16 = tup_len - 16\n        val tup_len_minus_17 = tup_len - 17\n        val tup_len_minus_18 = tup_len - 18\n        val tup_len_minus_19 = tup_len - 19\n        val tup_len_minus_20 = tup_len - 20\n        val tup_len_minus_21 = tup_len - 21\n        val tup_len_minus_22 = tup_len - 22\n        val tup_len_minus_23 = tup_len - 23\n        val tup_len_minus_24 = tup_len - 24\n        val tup_len_minus_25 = tup_len - 25\n        val tup_len_minus_26 = tup_len - 26\n        val",
    "        var tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        val tup_len = tup.productArity\n        val tup_product = tup.productIterator.toList.map(_.asInstanceOf[Long]).sliding(2).map(x => x(0) * x(1)).toList\n        tup_product",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        var tup_res = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_res(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_res",
    "        // Write your code here\n        val tup = (1,2,3,4,5)\n        val tup2 = tup.productIterator.toList\n        val tup3 = tup2.sliding(2).toList\n        val tup4 = tup3.map(x => x(0) * x(1))\n        tup4",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_new = for (i <- 0 until tup_len - 1) yield tup_list(i) * tup_list(i + 1)\n        tup_list_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_one = tup_list_len - 1\n        val tup_list_len_minus_two = tup_list_len - 2\n        val tup_list_len_minus_three = tup_list_len - 3\n        val tup_list_len_minus_four = tup_list_len - 4\n        val tup_list_len_minus_five = tup_list_len - 5\n        val tup_list_len_minus_six = tup_list_len - 6\n        val tup_list_len_minus_seven = tup_list_len - 7\n        val tup_list_len_minus_eight = tup_list_len - 8\n        val tup_list_len_minus_nine = tup_list_len - 9\n        val tup_list_len_minus_ten = tup_list_len - 10\n        val tup_list_len_minus_eleven = tup_list_len - 11\n        val tup_list_len_minus_twelve = tup_list_len - 12\n        val tup_list_len_minus_thirteen = tup_list_len - 13\n        val tup_list_len_minus_fourteen = tup_list_len - 14\n        val tup_list_len_minus_fifteen = tup_list_len - 15\n        val tup_list_len_minus_sixteen = tup_list_len - 16\n        val tup_list_len_minus_seventeen = tup_list_len - 17\n        val tup_list_len_minus_eighteen = tup_list_len - 18\n        val tup_list_len_minus_nineteen",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 to tup_len - 2) yield tup.productElement(i) * tup.productElement(i + 1)\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val result = tup.product\n        if (result == test_tup)\n            return true\n        else\n            return false",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 to tup_len - 2) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_length = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_length = tup_list.length\n        val tup_list_length_minus_one = tup_list_length - 1\n        val tup_list_length_minus_two = tup_list_length - 2\n        val tup_list_length_minus_three = tup_list_length - 3\n        val tup_list_length_minus_four = tup_list_length - 4\n        val tup_list_length_minus_five = tup_list_length - 5\n        val tup_list_length_minus_six = tup_list_length - 6\n        val tup_list_length_minus_seven = tup_list_length - 7\n        val tup_list_length_minus_eight = tup_list_length - 8\n        val tup_list_length_minus_nine = tup_list_length - 9\n        val tup_list_length_minus_ten = tup_list_length - 10\n        val tup_list_length_minus_eleven = tup_list_length - 11\n        val tup_list_length_minus_twelve = tup_list_length - 12\n        val tup_list_length_minus_thirteen = tup_list_length - 13\n        val tup_list_length_minus_fourteen = tup_list_length - 14\n        val tup_list_length_minus_fifteen = tup_list_length - 15\n        val tup_list_length_minus_sixteen = tup_list_length - 16\n        val tup_list_length_minus_seventeen = tup_list_length - 17\n        val tup_list_length_minus_eighteen = tup_list_length - 18\n        val tup_list_length_minus_nineteen = tup_list_length - 19\n        val tup_list_length_minus",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5)\n        val tup_length = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_new = tup_list.sliding(2).map(x => x.reduce(_ * _)).toList\n        tup_list_new",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_two = tup_len - 2\n        val tup_len_minus_three = tup_len - 3\n        val tup_len_minus_four = tup_len - 4\n        val tup_len_minus_five = tup_len - 5\n        val tup_len_minus_six = tup_len - 6\n        val tup_len_minus_seven = tup_len - 7\n        val tup_len_minus_eight = tup_len - 8\n        val tup_len_minus_nine = tup_len - 9\n        val tup_len_minus_ten = tup_len - 10\n        val tup_len_minus_eleven = tup_len - 11\n        val tup_len_minus_twelve = tup_len - 12\n        val tup_len_minus_thirteen = tup_len - 13\n        val tup_len_minus_fourteen = tup_len - 14\n        val tup_len_minus_fifteen = tup_len - 15\n        val tup_len_minus_sixteen = tup_len - 16\n        val tup_len_minus_seventeen = tup_len - 17\n        val tup_len_minus_eighteen = tup_len - 18\n        val tup_len_minus_nineteen = tup_len - 19\n        val tup_len_minus_twenty = tup_len - 20\n        val tup_len_minus_twenty_one = tup_len - 21\n        val tup_len_minus_twenty_two = tup_len - 22\n        val tup_len_minus_twenty_three = tup_len - 23\n        val tup_len_minus_twenty_four = tup_len - 24\n        val tup_len_minus_twenty_five = t",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len-1)\n        for (i <- 0 until tup_len-1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i+1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5)\n        val tup2 = tup.productIterator.toList\n        val tup3 = tup2.sliding(2,1).toList\n        val tup4 = tup3.map(x => x.reduce(_*_))\n        tup4",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_new = new ArrayBuffer[Long]()\n        for (i <- 0 to tup_len - 2) {\n            tup_new += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            tup_mult += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult.toArray",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        val tup_length = tup.productArity\n        val result = new Array[Long](tup_length - 1)\n        for (i <- 0 until tup_length - 1) {\n            result(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        result",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val result = for (i <- 0 until tup.productArity) yield tup.productElement(i) * tup.productElement(i + 1)\n        result",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_one = tup_list_len - 1\n        val tup_list_len_minus_one_list = List.range(0, tup_list_len_minus_one)\n        val tup_list_len_minus_one_list_len = tup_list_len_minus_one_list.length\n        val tup_list_len_minus_one_list_len_minus_one = tup_list_len_minus_one_list_len - 1\n        val tup_list_len_minus_one_list_len_minus_one_list = List.range(0, tup_list_len_minus_one_list_len_minus_one)\n        val tup_list_len_minus_one_list_len_minus_one_list_len = tup_list_len_minus_one_list_len_minus_one_list.length\n        val tup_list_len_minus_one_list_len_minus_one_list_len_minus_one = tup_list_len_minus_one_list_len_minus_one_list_len - 1\n        val tup_list_len_minus_one_list_len_minus_one_list_len_minus_one_list = List.range(0, tup_list_len_minus_one_list_len_minus_one_list_len_minus_one)\n        val tup_list_len_minus_one_list_len_minus_one_list_len_minus_one_list_len = tup_list_len_minus_one_list_len_minus_one_list_len_minus_one_list.length\n        val tup_list_len_minus_one_list_len_minus_one_list_len_minus_one_list_len_minus_one = tup_list_len",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_two = tup_len - 2\n        val tup_len_minus_three = tup_len - 3\n        val tup_len_minus_four = tup_len - 4\n        val tup_len_minus_five = tup_len - 5\n        val tup_len_minus_six = tup_len - 6\n        val tup_len_minus_seven = tup_len - 7\n        val tup_len_minus_eight = tup_len - 8\n        val tup_len_minus_nine = tup_len - 9\n        val tup_len_minus_ten = tup_len - 10\n        val tup_len_minus_eleven = tup_len - 11\n        val tup_len_minus_twelve = tup_len - 12\n        val tup_len_minus_thirteen = tup_len - 13\n        val tup_len_minus_fourteen = tup_len - 14\n        val tup_len_minus_fifteen = tup_len - 15\n        val tup_len_minus_sixteen = tup_len - 16\n        val tup_len_minus_seventeen = tup_len - 17\n        val tup_len_minus_eighteen = tup_len - 18\n        val tup_len_minus_nineteen = tup_len - 19\n        val tup_len_minus_twenty = tup_len - 20\n        val tup_len_minus_twenty_one = tup_len - 21\n        val tup_len_minus_twenty_two = tup_len - 22\n        val tup_len_minus_twenty_three = tup_len - 23\n        val tup_len_minus_twenty_four = tup",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_prod = tup.productIterator.toList\n        val tup_prod_len = tup_prod.length\n        val tup_prod_prod = tup_prod.productIterator.toList\n        val tup_prod_prod_len = tup_prod_prod.length\n        val tup_prod_prod_prod = tup_prod_prod.productIterator.toList\n        val tup_prod_prod_prod_len = tup_prod_prod_prod.length\n        val tup_prod_prod_prod_prod = tup_prod_prod_prod.productIterator.toList\n        val tup_prod_prod_prod_prod_len = tup_prod_prod_prod_prod.length\n        val tup_prod_prod_prod_prod_prod = tup_prod_prod_prod_prod.productIterator.toList\n        val tup_prod_prod_prod_prod_prod_len = tup_prod_prod_prod_prod_prod.length\n        val tup_prod_prod_prod_prod_prod_prod = tup_prod_prod_prod_prod_prod.productIterator.toList\n        val tup_prod_prod_prod_prod_prod_prod_len = tup_prod_prod_prod_prod_prod_prod.length\n        val tup_prod_prod_prod_prod_prod_prod_prod = tup_prod_prod_prod_prod_prod_prod.productIterator.toList\n        val tup_prod",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_list = List.range(0, tup_len_minus_one)\n        val tup_len_minus_one_list_map = tup_len_minus_one_list.map(x => (x, x + 1))\n        val tup_len_minus_one_list_map_map = tup_len_minus_one_list_map.map(x => (x._1, x._2, tup.productElement(x._1).asInstanceOf[Long] * tup.productElement(x._2).asInstanceOf[Long]))\n        tup_len_minus_one_list_map_map.map(x => x._3)",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i) * tup.productElement(i + 1)\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_new = for (i <- 0 to tup_len - 2) yield tup_list(i) * tup_list(i + 1)\n        tup_list_new.toList",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_1 = tup_list_len - 1\n        val tup_list_len_minus_2 = tup_list_len - 2\n        val tup_list_len_minus_3 = tup_list_len - 3\n        val tup_list_len_minus_4 = tup_list_len - 4\n        val tup_list_len_minus_5 = tup_list_len - 5\n        val tup_list_len_minus_6 = tup_list_len - 6\n        val tup_list_len_minus_7 = tup_list_len - 7\n        val tup_list_len_minus_8 = tup_list_len - 8\n        val tup_list_len_minus_9 = tup_list_len - 9\n        val tup_list_len_minus_10 = tup_list_len - 10\n        val tup_list_len_minus_11 = tup_list_len - 11\n        val tup_list_len_minus_12 = tup_list_len - 12\n        val tup_list_len_minus_13 = tup_list_len - 13\n        val tup_list_len_minus_14 = tup_list_len - 14\n        val tup_list_len_minus_15 = tup_list_len - 15\n        val tup_list_len_minus_16 = tup_list_len - 16\n        val tup_list_len_minus_17 = tup_list_len - 17\n        val tup_list_len_minus_18 = tup_list_len - 18\n        val tup_list_len_minus_19 = tup_list_len - 19\n        val tup_list_len_minus_20 = tup_list_",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len)\n        for (i <- 0 until tup_len) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i+1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_result = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_result(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_result",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6)\n        val tup2 = tup.productIterator.toList\n        val tup3 = tup2.sliding(2).toList\n        val tup4 = tup3.map(x => x(0).asInstanceOf[Int] * x(1).asInstanceOf[Int])\n        tup4",
    "        var tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val result = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            result += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        result",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i) * tup.productElement(i + 1)\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_len_2 = tup_len - 1\n        val tup_len_3 = tup_len - 2\n        val tup_len_4 = tup_len - 3\n        val tup_len_5 = tup_len - 4\n        val tup_len_6 = tup_len - 5\n        val tup_len_7 = tup_len - 6\n        val tup_len_8 = tup_len - 7\n        val tup_len_9 = tup_len - 8\n        val tup_len_10 = tup_len - 9\n        val tup_len_11 = tup_len - 10\n        val tup_len_12 = tup_len - 11\n        val tup_len_13 = tup_len - 12\n        val tup_len_14 = tup_len - 13\n        val tup_len_15 = tup_len - 14\n        val tup_len_16 = tup_len - 15\n        val tup_len_17 = tup_len - 16\n        val tup_len_18 = tup_len - 17\n        val tup_len_19 = tup_len - 18\n        val tup_len_20 = tup_len - 19\n        val tup_len_21 = tup_len - 20\n        val tup_len_22 = tup_len - 21\n        val tup_len_23 = tup_len - 22\n        val tup_len_24 = tup_len - 23\n        val tup_len_25 = tup_len - 24\n        val tup_len_26 = tup_len - 25\n        val tup_len_27 = tup_len - 26\n        val tup_len_28 = tup_len - 27\n        val tup_len_29 = tup_len - 28\n        val",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_two = tup_len - 2\n        val tup_len_minus_three = tup_len - 3\n        val tup_len_minus_four = tup_len - 4\n        val tup_len_minus_five = tup_len - 5\n        val tup_len_minus_six = tup_len - 6\n        val tup_len_minus_seven = tup_len - 7\n        val tup_len_minus_eight = tup_len - 8\n        val tup_len_minus_nine = tup_len - 9\n        val tup_len_minus_ten = tup_len - 10\n        val tup_len_minus_eleven = tup_len - 11\n        val tup_len_minus_twelve = tup_len - 12\n        val tup_len_minus_thirteen = tup_len - 13\n        val tup_len_minus_fourteen = tup_len - 14\n        val tup_len_minus_fifteen = tup_len - 15\n        val tup_len_minus_sixteen = tup_len - 16\n        val tup_len_minus_seventeen = tup_len - 17\n        val tup_len_minus_eighteen = tup_len - 18\n        val tup_len_minus_nineteen = tup_len - 19\n        val tup_len_minus_twenty = tup_len - 20\n        val tup_len_minus_twenty_one = tup_len - 21\n        val tup_len_minus_twenty_two = tup_len - 22\n        val tup_len_minus_twenty_three = tup_len - 23\n        val tup_len_minus_twenty_four = tup_len - 24\n        val tup_len_minus_twenty_five = t",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len)\n        for (i <- 0 until tup_len) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_range = 0 until tup_len\n        val tup_range_next = 1 until tup_len\n        val tup_range_next_next = 2 until tup_len\n        val tup_range_next_next_next = 3 until tup_len\n        val tup_range_next_next_next_next = 4 until tup_len\n        val tup_range_next_next_next_next_next = 5 until tup_len\n        val tup_range_next_next_next_next_next_next = 6 until tup_len\n        val tup_range_next_next_next_next_next_next_next = 7 until tup_len\n        val tup_range_next_next_next_next_next_next_next_next = 8 until tup_len\n        val tup_range_next_next_next_next_next_next_next_next_next = 9 until tup_len\n        val tup_range_next_next_next_next_next_next_next_next_next_next = 10 until tup_len\n        val tup_range_next_next_next_next_next_next_next_next_next_next_next = 11 until tup_len\n        val tup_range_next_next_next_next_next_next_next_next_next_next_next_next = 12 until tup_len\n        val tup_range_next_next_next_next_next_next_next_next_next_next_next_next_next = 13 until tup_len\n        val tup_range_next_next_next_next_next_next_next_next_next_next_next_next_next_next = 14 until tup_len\n        val tup_range_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next = 15 until tup_len\n        val tup_range_next_next_next_next_next",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup2 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21)\n        val tup3 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)\n        val tup4 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23)\n        val tup5 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24)\n        val tup6 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25)\n        val tup7 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26)\n        val tup8 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27)\n        val tup9 = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28)\n        val tup10 = (1",
    "        var tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100)\n        var tup2 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100)\n        var tup3 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_minus_1 = tup_len - 1\n        val tup_len_minus_2 = tup_len - 2\n        val tup_len_minus_3 = tup_len - 3\n        val tup_len_minus_4 = tup_len - 4\n        val tup_len_minus_5 = tup_len - 5\n        val tup_len_minus_6 = tup_len - 6\n        val tup_len_minus_7 = tup_len - 7\n        val tup_len_minus_8 = tup_len - 8\n        val tup_len_minus_9 = tup_len - 9\n        val tup_len_minus_10 = tup_len - 10\n        val tup_len_minus_11 = tup_len - 11\n        val tup_len_minus_12 = tup_len - 12\n        val tup_len_minus_13 = tup_len - 13\n        val tup_len_minus_14 = tup_len - 14\n        val tup_len_minus_15 = tup_len - 15\n        val tup_len_minus_16 = tup_len - 16\n        val tup_len_minus_17 = tup_len - 17\n        val tup_len_minus_18 = tup_len - 18\n        val tup_len_minus_19 = tup_len - 19\n        val tup_len_minus_20 = tup_len - 20\n        val tup_len_minus_21 = tup_len - 21\n        val tup_len_minus_22 = tup_len - 22\n        val tup_len_minus_23 = tup_len - 23\n        val tup_len_minus_24 = tup_len - 24\n        val tup_len_minus_25 = tup_len - 25\n        val tup_len_minus_26 = tup_len - 26\n        val",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_half = tup_len_minus_one / 2\n        val tup_len_minus_one_half_plus_one = tup_len_minus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half = tup_len_minus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100)\n        val tup_len = tup.productArity\n        val tup_len_1 = tup_len - 1\n        val tup_len_2 = tup_len - 2\n        val tup_len_3 = tup_len - 3\n        val tup_len_4 = tup_len - 4\n        val tup_len_5 = tup_len - 5\n        val tup_len_6 = tup_len - 6\n        val tup_len_7 = tup_len - 7\n        val tup_len_8 = tup_len - 8\n        val tup_len_9 = tup_len - 9\n        val tup_len_10 = tup_len - 10\n        val tup_len_11 = tup_len - 11\n        val tup_len_12 = tup_len - 12\n        val tup_len_13 = tup_len - 13\n        val tup_len_14 = tup_len - 14\n        val tup_len_15 = tup_len - 15\n        val tup_len_16 = tup_len - 16\n        val tup_len_17 = tup_len - 17\n        val tup_len_18 = tup_len - 18\n        val",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_1 = tup_list_len - 1\n        val tup_list_len_minus_2 = tup_list_len - 2\n        val tup_list_len_minus_3 = tup_list_len - 3\n        val tup_list_len_minus_4 = tup_list_len - 4\n        val tup_list_len_minus_5 = tup_list_len - 5\n        val tup_list_len_minus_6 = tup_list_len - 6\n        val tup_list_len_minus_7 = tup_list_len - 7\n        val tup_list_len_minus_8 = tup_list_len - 8\n        val tup_list_len_minus_9 = tup_list_len - 9\n        val tup_list_len_minus_10 = tup_list_len - 10\n        val tup_list_len_minus_11 = tup_list_len - 11\n        val tup_list_len_minus_12 = tup_list_len - 12\n        val tup_list_len_minus_13 = tup_list_len - 13\n        val tup_list_len_minus_14 = tup_list_len - 14\n        val tup_list_len_minus_15 = tup_list_len - 15\n        val tup_list_len_minus_16 = tup_list_len - 16\n        val tup_list_len_minus_17 = tup_list_len - 17\n        val tup_list_len_minus_18 = tup_list_len - 18\n        val tup_list_len_minus_19 = tup_list_len - 19\n        val tup_list_len_minus_20 = tup_list_len - 20\n        val tup_list_len",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_one = tup_list_len - 1\n        val tup_list_len_minus_two = tup_list_len - 2\n        val tup_list_len_minus_three = tup_list_len - 3\n        val tup_list_len_minus_four = tup_list_len - 4\n        val tup_list_len_minus_five = tup_list_len - 5\n        val tup_list_len_minus_six = tup_list_len - 6\n        val tup_list_len_minus_seven = tup_list_len - 7\n        val tup_list_len_minus_eight = tup_list_len - 8\n        val tup_list_len_minus_nine = tup_list_len - 9\n        val tup_list_len_minus_ten = tup_list_len - 10\n        val tup_list_len_minus_eleven = tup_list_len - 11\n        val tup_list_len_minus_twelve = tup_list_len - 12\n        val tup_list_len_minus_thirteen = tup_list_len - 13\n        val tup_list_len_minus_fourteen = tup_list_len - 14\n        val tup_list_len_minus_fifteen = tup_list_len - 15\n        val tup_list_len_minus_sixteen = tup_list_len - 16\n        val tup_list_len_minus_seventeen = tup_list_len - 17\n        val tup_list_len_minus_eighteen = tup_list_len - 18\n        val tup_list_len_minus_nineteen = tup_list_len - 19\n        val tup_list_len_minus",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_two = tup_len - 2\n        val tup_len_minus_three = tup_len - 3\n        val tup_len_minus_four = tup_len - 4\n        val tup_len_minus_five = tup_len - 5\n        val tup_len_minus_six = tup_len - 6\n        val tup_len_minus_seven = tup_len - 7\n        val tup_len_minus_eight = tup_len - 8\n        val tup_len_minus_nine = tup_len - 9\n        val tup_len_minus_ten = tup_len - 10\n        val tup_len_minus_eleven = tup_len - 11\n        val tup_len_minus_twelve = tup_len - 12\n        val tup_len_minus_thirteen = tup_len - 13\n        val tup_len_minus_fourteen = tup_len - 14\n        val tup_len_minus_fifteen = tup_len - 15\n        val tup_len_minus_sixteen = tup_",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_range = 0 until tup_len_minus_one\n        val tup_len_minus_one_range_rev = tup_len_minus_one_range.reverse\n        val tup_len_minus_one_range_rev_map = tup_len_minus_one_range_rev.map(x => tup_len - x - 1)\n        val tup_len_minus_one_range_rev_map_map = tup_len_minus_one_range_rev_map.map(x => tup_len - x - 2)\n        val tup_len_minus_one_range_rev_map_map_map = tup_len_minus_one_range_rev_map_map.map(x => tup_len - x - 3)\n        val tup_len_minus_one_range_rev_map_map_map_map = tup_len_minus_one_range_rev_map_map_map.map(x => tup_len - x - 4)\n        val tup_len_minus_one_range_rev_map_map_map_map_map = tup_len_minus_one_range_rev_map_map_map_map.map(x => tup_len - x - 5)\n        val tup_len_minus_one_range_rev_map_map_map_map_map_map = tup_len_minus_one_range_rev_map_map_map_map_map.map(x => tup_len - x - 6)\n        val tup_len_minus_one_range_rev_map_map_map_map_map_map_map = tup_len_minus_one_range_rev_map_map_map_map_map_map.map(",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_half = tup_len_minus_one / 2\n        val tup_len_minus_one_half_plus_one = tup_len_minus_one_half + 1\n        val tup_len_minus_one_half_minus_one = tup_len_minus_one_half - 1\n        val tup_len_minus_one_half_minus_one_plus_one = tup_len_minus_one_half_minus_one + 1\n        val tup_len_minus_one_half_minus_one_plus_one_plus_one = tup_len_minus_one_half_minus_one_plus_one + 1\n        val tup_len_minus_one_half_minus_one_plus_one_plus_one_plus_one = tup_len_minus_one_half_minus_one_plus_one_plus_one + 1\n        val tup_len_minus_one_half_minus_one_plus_one_plus_one_plus_one_plus_one = tup_len_minus_one_half_minus_one_plus_one_plus_one_plus_one + 1\n        val tup_len_minus_one_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one = tup_len_minus_one_half_minus_one_plus_one_plus_one_plus_one_plus_one + 1\n        val tup_len_minus_one_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one = tup_len_minus_one_half_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one + 1\n        val tup_len_minus_one_half_minus_one_plus_one",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len)\n        for (i <- 0 until tup_len) {\n            tup_mult(i) = tup.productElement(i) * tup.productElement(i+1)\n        }\n        return tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_new = for (i <- 0 until tup_len - 1) yield tup_list(i) * tup_list(i + 1)\n        val tup_new = tup_list_new.toList\n        tup_new",
    "        var tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        if (test_tup == 0) {\n            return tup\n        }\n        var new_tup = new Tuple10(1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 1L)\n        for (i <- 0 until 10) {\n            new_tup.productElement(i) = tup.productElement(i) * tup.productElement(i + 1)\n        }\n        return new_tup",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i) * tup.productElement(i + 1)\n        tup_mult",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        val tup_length = tup.productArity\n        val tup_mult = new Array[Long](tup_length - 1)\n        for (i <- 0 until tup_length - 1) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_arr = tup.productIterator.toArray\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup_arr(i).asInstanceOf[Long] * tup_arr(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_1 = tup_list_len - 1\n        val tup_list_len_minus_2 = tup_list_len - 2\n        val tup_list_len_minus_3 = tup_list_len - 3\n        val tup_list_len_minus_4 = tup_list_len - 4\n        val tup_list_len_minus_5 = tup_list_len - 5\n        val tup_list_len_minus_6 = tup_list_len - 6\n        val tup_list_len_minus_7 = tup_list_len - 7\n        val tup_list_len_minus_8 = tup_list_len - 8\n        val tup_list_len_minus_9 = tup_list_len - 9\n        val tup_list_len_minus_10 = tup_list_len - 10\n        val tup_list_len_minus_11 = tup_list_len - 11\n        val tup_list_len_minus_12 = tup_list_len - 12\n        val tup_list_len_minus_13 = tup_list_len - 13\n        val tup_list_len_minus_14 = tup_list_len - 14\n        val tup_list_len_minus_15 = tup_list_len - 15\n        val tup_list_len_minus_16 = tup_list_len - 16\n        val tup_list_len_minus_17 = tup_list_len - 17\n        val tup_list_len_minus_18 = tup_list_len - 18\n        val tup_list_len_minus_19 = tup_list_len - 19\n        val tup_list_len_minus_20 = tup_list_len -",
    "        var tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        var tup_new = new ArrayBuffer[Long]()\n        for (i <- 0 until tup.length - 1) {\n            tup_new += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        return tup_new",
    "        var tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1 to test_tup.toInt).toList\n        val tup_len = tup.length\n        val tup_res = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            tup_res += tup(i) * tup(i + 1)\n        }\n        tup_res.toList",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_range = 0 until tup_len\n        val tup_range_1 = 0 until tup_len - 1\n        val tup_range_2 = 1 until tup_len\n        val tup_range_3 = 1 until tup_len - 1\n        val tup_range_4 = 0 until tup_len - 2\n        val tup_range_5 = 2 until tup_len\n        val tup_range_6 = 2 until tup_len - 1\n        val tup_range_7 = 0 until tup_len - 3\n        val tup_range_8 = 3 until tup_len\n        val tup_range_9 = 3 until tup_len - 1\n        val tup_range_10 = 0 until tup_len - 4\n        val tup_range_11 = 4 until tup_len\n        val tup_range_12 = 4 until tup_len - 1\n        val tup_range_13 = 0 until tup_len - 5\n        val tup_range_14 = 5 until tup_len\n        val tup_range_15 = 5 until tup_len - 1\n        val tup_range_16 = 0 until tup_len - 6\n        val tup_range_17 = 6 until tup_len\n        val tup_range_18 = 6 until tup_len - 1\n        val tup_range_19 = 0 until tup_len - 7\n        val tup_range_20 = 7 until tup_len\n        val tup_range_21 = 7 until tup_len - 1\n        val tup_range_22 = 0 until tup_len - 8\n        val tup_range_23 = 8 until tup_len\n        val tup_range_24 = 8 until tup_len - 1\n        val tup_range_25 = 0 until tup_len - 9\n        val tup_range_26 = 9 until tup_len\n        val tup_range",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 to tup_len - 2) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i).asInstanceOf[Int] * tup.productElement(i + 1).asInstanceOf[Int]\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i) * tup.productElement(i + 1)\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_tup = (1 to tup_len_minus_one).toList\n        val tup_len_minus_one_tup_len = tup_len_minus_one_tup.length\n        val tup_len_minus_one_tup_len_minus_one = tup_len_minus_one_tup_len - 1\n        val tup_len_minus_one_tup_len_minus_one_tup = (1 to tup_len_minus_one_tup_len_minus_one).toList\n        val tup_len_minus_one_tup_len_minus_one_tup_len = tup_len_minus_one_tup_len_minus_one_tup.length\n        val tup_len_minus_one_tup_len_minus_one_tup_len_minus_one = tup_len_minus_one_tup_len_minus_one_tup_len - 1\n        val tup_len_minus_one_tup_len_minus_one_tup_len_minus_one_tup = (1 to tup_len_minus_one_tup_len_minus_one_tup_len_minus_one).toList\n        val tup_len_minus_one_tup_len_minus_one_tup_len_minus_one_tup_len = tup_len_minus_one_tup_len_minus_one_tup_len_minus_one_tup.length\n        val tup_len_minus_one_tup_len_minus_one_tup_len_minus_one_tup_len_minus_one = tup_len_minus_one_tup_len_minus_one_tup_len_minus_one_tup_len - 1\n        val tup_",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_arr = tup.productIterator.toArray\n        val tup_arr_len = tup_arr.length\n        val tup_arr_len_1 = tup_arr_len - 1\n        val tup_arr_len_2 = tup_arr_len - 2\n        val tup_arr_len_3 = tup_arr_len - 3\n        val tup_arr_len_4 = tup_arr_len - 4\n        val tup_arr_len_5 = tup_arr_len - 5\n        val tup_arr_len_6 = tup_arr_len - 6\n        val tup_arr_len_7 = tup_arr_len - 7\n        val tup_arr_len_8 = tup_arr_len - 8\n        val tup_arr_len_9 = tup_arr_len - 9\n        val tup_arr_len_10 = tup_arr_len - 10\n        val tup_arr_len_11 = tup_arr_len - 11\n        val tup_arr_len_12 = tup_arr_len - 12\n        val tup_arr_len_13 = tup_arr_len - 13\n        val tup_arr_len_14 = tup_arr_len - 14\n        val tup_arr_len_15 = tup_arr_len - 15\n        val tup_arr_len_16 = tup_arr_len - 16\n        val tup_arr_len_17 = tup_arr_len - 17\n        val tup_arr_len_18 = tup_arr_len - 18\n        val tup_arr_len_19 = tup_arr_len - 19\n        val tup_arr_len_20 = tup_arr_len - 20\n        val tup_arr_len_21 = tup_arr_len - 21\n        val tup_arr_len_22 = tup_arr_len -",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_mult = new ArrayBuffer[Long]()\n        for (i <- 0 to tup_len - 2) {\n            tup_mult += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult.toArray",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_range = 0 until tup_len_minus_one\n        val tup_len_range = 0 until tup_len\n        val tup_len_range_rev = tup_len_range.reverse\n        val tup_len_range_rev_minus_one = tup_len_range_rev.tail\n        val tup_len_range_rev_minus_one_range = 0 until tup_len_range_rev_minus_one.length\n        val tup_len_range_rev_minus_one_range_rev = tup_len_range_rev_minus_one_range.reverse\n        val tup_len_range_rev_minus_one_range_rev_minus_one = tup_len_range_rev_minus_one_range_rev.tail\n        val tup_len_range_rev_minus_one_range_rev_minus_one_range = 0 until tup_len_range_rev_minus_one_range_rev_minus_one.length\n        val tup_len_range_rev_minus_one_range_rev_minus_one_range_rev = tup_len_range_rev_minus_one_range_rev_minus_one_range.reverse\n        val tup_len_range_rev_minus_one_range_rev_minus_one_range_rev_minus_one = tup_len_range_rev_minus_one_range_rev_minus_one_range_rev.tail\n        val tup_len_range_rev_minus_one_range_rev_minus_one_range_rev_minus_one_range = 0 until tup_len_range_rev_minus_one_range_rev_minus_one_range_rev_minus_one.length\n        val tup_len_range",
    "        var tup = (1,2,3,4,5,6,7,8,9,10,11,12)\n        var new_tup = new Tuple12(0,0,0,0,0,0,0,0,0,0,0,0)\n        for (i <- 0 to 11) {\n            new_tup.productElement(i) = tup.productElement(i) * tup.productElement(i+1)\n        }\n        return new_tup",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_arr = tup.productIterator.toArray\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup_arr(i).asInstanceOf[Long] * tup_arr(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        var tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        var result = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            result(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        result",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_minus_1 = tup_len - 1\n        val tup_len_minus_2 = tup_len - 2\n        val tup_len_minus_3 = tup_len - 3\n        val tup_len_minus_4 = tup_len - 4\n        val tup_len_minus_5 = tup_len - 5\n        val tup_len_minus_6 = tup_len - 6\n        val tup_len_minus_7 = tup_len - 7\n        val tup_len_minus_8 = tup_len - 8\n        val tup_len_minus_9 = tup_len - 9\n        val tup_len_minus_10 = tup_len - 10\n        val tup_len_minus_11 = tup_len - 11\n        val tup_len_minus_12 = tup_len - 12\n        val tup_len_minus_13 = tup_len - 13\n        val tup_len_minus_14 = tup_len - 14\n        val tup_len_minus_15 = tup_len - 15\n        val tup_len_minus_16 = tup_len - 16\n        val tup_len_minus_17 = tup_len - 17\n        val tup_len_minus_18 = tup_len - 18\n        val tup_len_minus_19 = tup_len - 19\n        val tup_len_minus_20 = tup_len - 20\n        val tup_len_minus_21 = tup_len - 21\n        val tup_len_minus_22 = tup_len - 22\n        val tup_len_minus_23 = tup_len - 23\n        val tup_len_minus_24 = tup_len - 24\n        val tup_len_minus_25 = tup_len - 25\n        val tup_len_minus_26 = tup_len - 26\n        val",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val result = tup.productIterator.map(x => x.asInstanceOf[Int] * 2)\n        result",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_new = new ArrayBuffer[Long]()\n        for (i <- 0 to tup_len - 2) {\n            tup_new += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_one = tup_list_len - 1\n        val tup_list_len_minus_two = tup_list_len - 2\n        val tup_list_len_minus_three = tup_list_len - 3\n        val tup_list_len_minus_four = tup_list_len - 4\n        val tup_list_len_minus_five = tup_list_len - 5\n        val tup_list_len_minus_six = tup_list_len - 6\n        val tup_list_len_minus_seven = tup_list_len - 7\n        val tup_list_len_minus_eight = tup_list_len - 8\n        val tup_list_len_minus_nine = tup_list_len - 9\n        val tup_list_len_minus_ten = tup_list_len - 10\n        val tup_list_len_minus_eleven = tup_list_len - 11\n        val tup_list_len_minus_twelve = tup_list_len - 12\n        val tup_list_len_minus_thirteen = tup_list_len - 13\n        val tup_list_len_minus_fourteen = tup_list_len - 14\n        val tup_list_len_minus_fifteen = tup_list_len - 15\n        val tup_list_len_minus_sixteen = tup_list_len - 16\n        val tup_list_len_minus_seventeen = tup_list_len - 17\n        val tup_list_len_minus_eighteen = tup_list_len - 18\n        val tup_list_len_minus_nineteen = tup_list_len - 19\n        val tup_list_len_minus",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        new_tup",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len)\n        for (i <- 0 until tup_len) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_new = tup_list.sliding(2).map(x => x.reduce(_ * _)).toList\n        tup_list_new",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_1 = tup_list.dropRight(1)\n        val tup_list_2 = tup_list.drop(1)\n        val tup_list_3 = tup_list_1.zip(tup_list_2)\n        val tup_list_4 = tup_list_3.map(x => x._1 * x._2)\n        tup_list_4",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len-1) yield tup.productElement(i).asInstanceOf[Long] * tup.productElement(i+1).asInstanceOf[Long]\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100)\n        val tup_len = tup.productArity\n        val tup_len_minus_1 = tup_len - 1\n        val tup_len_minus_1_half = tup_len_minus_1 / 2\n        val tup_len_minus_1_half_plus_1 = tup_len_minus_1_half + 1\n        val tup_len_minus_1_half_plus_1_half = tup_len_minus_1_half_plus_1 / 2\n        val tup_len_minus_1_half_plus_1_half_plus_1 = tup_len_minus_1_half_plus_1_half + 1\n        val tup_len_minus_1_half_plus_1_half_plus_1_half = tup_len_minus_1_half_plus_1_half_plus_1 / 2\n        val tup_len_minus_1_half_plus_1_half_plus_1_half_plus_1 = tup_len_minus_1_half_plus_1_half_plus_1_half + 1\n        val tup_len_minus_1_half_plus_1_half_plus_1_half_plus_1_half = tup_len_minus_",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_two = tup_len - 2\n        val tup_len_minus_three = tup_len - 3\n        val tup_len_minus_four = tup_len - 4\n        val tup_len_minus_five = tup_len - 5\n        val tup_len_minus_six = tup_len - 6\n        val tup_len_minus_seven = tup_len - 7\n        val tup_len_minus_eight = tup_len - 8\n        val tup_len_minus_nine = tup_len - 9\n        val tup_len_minus_ten = tup_len - 10\n        val tup_len_minus_eleven = tup_len - 11\n        val tup_len_minus_twelve = tup_len - 12\n        val tup_len_minus_thirteen = tup_len - 13\n        val tup_len_minus_fourteen = tup_len - 14\n        val tup_len_minus_fifteen = tup_len - 15\n        val tup_len_minus_sixteen = tup_len - 16\n        val tup_len_minus_seventeen = tup_len - 17\n        val tup_len_minus_eighteen = tup_len - 18\n        val tup_len_minus_nineteen = tup_len - 19\n        val tup_len_minus_twenty = tup_len - 20\n        val tup_len_minus_twenty_one = tup_len - 21\n        val tup_len_minus_twenty_two = tup_len - 22\n        val tup_len_minus_twenty_three = tup_len - 23\n        val tup_len_minus_twenty_four = tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i) * tup.productElement(i + 1)\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_len_1 = tup_len - 1\n        val tup_len_2 = tup_len - 2\n        val tup_len_3 = tup_len - 3\n        val tup_len_4 = tup_len - 4\n        val tup_len_5 = tup_len - 5\n        val tup_len_6 = tup_len - 6\n        val tup_len_7 = tup_len - 7\n        val tup_len_8 = tup_len - 8\n        val tup_len_9 = tup_len - 9\n        val tup_len_10 = tup_len - 10\n        val tup_len_11 = tup_len - 11\n        val tup_len_12 = tup_len - 12\n        val tup_len_13 = tup_len - 13\n        val tup_len_14 = tup_len - 14\n        val tup_len_15 = tup_len - 15\n        val tup_len_16 = tup_len - 16\n        val tup_len_17 = tup_len - 17\n        val tup_len_18 = tup_len - 18\n        val tup_len_19 = tup_len - 19\n        val tup_len_20 = tup_len - 20\n        val tup_len_21 = tup_len - 21\n        val tup_len_22 = tup_len - 22\n        val tup_len_23 = tup_len - 23\n        val tup_len_24 = tup_len - 24\n        val tup_len_25 = tup_len - 25\n        val tup_len_26 = tup_len - 26\n        val tup_len_27 = tup_len - 27\n        val tup_len_28 = tup_len - 28\n        val tup_len_29 = tup_len - 29\n        val tup_len",
    "        val tup = (1,2,3,4,5,6)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_new = for (i <- 0 until tup_list_len - 1) yield tup_list(i) * tup_list(i + 1)\n        tup_list_new.toList",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        val tup_len = tup.productArity\n        val tup_arr = tup.productIterator.toArray\n        var new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup_arr(i).asInstanceOf[Long] * tup_arr(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_len_minus_1 = tup_len - 1\n        val tup_len_minus_2 = tup_len - 2\n        val tup_len_minus_3 = tup_len - 3\n        val tup_len_minus_4 = tup_len - 4\n        val tup_len_minus_5 = tup_len - 5\n        val tup_len_minus_6 = tup_len - 6\n        val tup_len_minus_7 = tup_len - 7\n        val tup_len_minus_8 = tup_len - 8\n        val tup_len_minus_9 = tup_len - 9\n        val tup_len_minus_10 = tup_len - 10\n        val tup_len_minus_11 = tup_len - 11\n        val tup_len_minus_12 = tup_len - 12\n        val tup_len_minus_13 = tup_len - 13\n        val tup_len_minus_14 = tup_len - 14\n        val tup_len_minus_15 = tup_len - 15\n        val tup_len_minus_16 = tup_len - 16\n        val tup_len_minus_17 = tup_len - 17\n        val tup_len_minus_18 = tup_len - 18\n        val tup_len_minus_19 = tup_len - 19\n        val tup_len_minus_20 = tup_len - 20\n        val tup_len_minus_21 = tup_len - 21\n        val tup_len_minus_22 = tup_len - 22\n        val tup_len_minus_23 = tup_len - 23\n        val tup_len_minus_24 = tup_len - 24\n        val tup_len_minus_25 = tup_len - 25\n",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_length = tup.productArity\n        val tup_mult = new ArrayBuffer[Long]\n        for (i <- 0 until tup_length - 1) {\n            tup_mult += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        val tup_len_1 = tup_len - 1\n        val tup_len_2 = tup_len - 2\n        val tup_len_3 = tup_len - 3\n        val tup_len_4 = tup_len - 4\n        val tup_len_5 = tup_len - 5\n        val tup_len_6 = tup_len - 6\n        val tup_len_7 = tup_len - 7\n        val tup_len_8 = tup_len - 8\n        val tup_len_9 = tup_len - 9\n        val tup_len_10 = tup_len - 10\n        val tup_len_11 = tup_len - 11\n        val tup_len_12 = tup_len - 12\n        val tup_len_13 = tup_len - 13\n        val tup_len_14 = tup_len - 14\n        val tup_len_15 = tup_len - 15\n        val tup_len_16 = tup_len - 16\n        val tup_len_17 = tup_len - 17\n        val tup_len_18 = tup_len - 18\n        val tup_len_19 = tup_len - 19\n        val tup_len_20 = tup_len - 20\n        val tup_len_21 = tup_len - 21\n        val tup_len_22 = tup_len - 22\n        val tup_len_23 = tup_len - 23\n        val tup_len_24 = tup_len - 24\n        val tup_len_25 = tup_len - 25\n        val tup_len_26 = tup_len - 26\n        val tup_len_27 = tup_len - 27\n        val tup_len_28 = tup_len - 28\n        val tup_len_29 = tup_len - 29\n        val tup_len_30 = tup_len - 30\n",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_1 = tup_list.slice(0,tup_len-1)\n        val tup_list_2 = tup_list.slice(1,tup_len)\n        val tup_list_3 = tup_list_1.zip(tup_list_2)\n        val tup_list_4 = tup_list_3.map(x => x._1 * x._2)\n        tup_list_4",
    "        val tup = (1L, 2L, 3L, 4L, 5L)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_range = tup_list.indices\n        val tup_list_range_len = tup_list_range.length\n        val tup_list_range_len_minus_one = tup_list_range_len - 1\n        val tup_list_range_len_minus_one_list = List.range(0, tup_list_range_len_minus_one)\n        val tup_list_range_len_minus_one_list_len = tup_list_range_len_minus_one_list.length\n        val tup_list_range_len_minus_one_list_len_minus_one = tup_list_range_len_minus_one_list_len - 1\n        val tup_list_range_len_minus_one_list_len_minus_one_list = List.range(0, tup_list_range_len_minus_one_list_len_minus_one)\n        val tup_list_range_len_minus_one_list_len_minus_one_list_len = tup_list_range_len_minus_one_list_len_minus_one_list.length\n        val tup_list_range_len_minus_one_list_len_minus_one_list_len_minus_one = tup_list_range_len_minus_one_list_len_minus_one_list_len - 1\n        val tup_list_range_len_minus_one_list_len_minus_one_list_len_minus_one_list = List.range(0, tup_list_range_len_minus_one_list_len_minus_one_list_len_minus_one)\n        val tup_list_range_len_minus_one_list_len_minus_one_list_len_minus_one_list_",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val new_tup = new Tuple2(tup_len_minus_one, new Array[Long](tup_len_minus_one))\n        for (i <- 0 until tup_len_minus_one) {\n            new_tup._2(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_two = tup_len - 2\n        val tup_len_minus_three = tup_len - 3\n        val tup_len_minus_four = tup_len - 4\n        val tup_len_minus_five = tup_len - 5\n        val tup_len_minus_six = tup_len - 6\n        val tup_len_minus_seven = tup_len - 7\n        val tup_len_minus_eight = tup_len - 8\n        val tup_len_minus_nine = tup_len - 9\n        val tup_len_minus_ten = tup_len - 10\n        val tup_len_minus_eleven = tup_len - 11\n        val tup_len_minus_twelve = tup_len - 12\n        val tup_len_minus_thirteen = tup_len - 13\n        val tup_len_minus_fourteen = tup_len - 14\n        val tup_len_minus_fifteen = tup_len - 15\n        val tup_len_minus_sixteen = tup_len - 16\n        val tup_len_minus_seventeen = tup_len - 17\n        val tup_len_minus_eighteen = tup_len - 18\n        val tup_len_minus_nineteen = tup_len - 19\n        val tup_len_minus_twenty = tup_len - 20\n        val tup_len_minus_twentyone = tup_len - 21\n        val tup_len_minus_twentytwo = tup_len - 22\n        val tup_len_minus_twentythree = tup_len - 23\n        val tup_len_minus_twentyfour = tup_len - 24\n        val tup_len_minus_twentyfive = tup_len - 25",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val new_tup = for (i <- 0 until tup.productArity - 1) yield tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        new_tup",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_1 = tup_len - 1\n        var tup_new = new Array[Long](tup_len_1)\n        for (i <- 0 until tup_len_1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1 to test_tup.toInt).toList\n        val tup_len = tup.length\n        val tup_len_minus_1 = tup_len - 1\n        val tup_len_minus_2 = tup_len - 2\n        val tup_len_minus_3 = tup_len - 3\n        val tup_len_minus_4 = tup_len - 4\n        val tup_len_minus_5 = tup_len - 5\n        val tup_len_minus_6 = tup_len - 6\n        val tup_len_minus_7 = tup_len - 7\n        val tup_len_minus_8 = tup_len - 8\n        val tup_len_minus_9 = tup_len - 9\n        val tup_len_minus_10 = tup_len - 10\n        val tup_len_minus_11 = tup_len - 11\n        val tup_len_minus_12 = tup_len - 12\n        val tup_len_minus_13 = tup_len - 13\n        val tup_len_minus_14 = tup_len - 14\n        val tup_len_minus_15 = tup_len - 15\n        val tup_len_minus_16 = tup_len - 16\n        val tup_len_minus_17 = tup_len - 17\n        val tup_len_minus_18 = tup_len - 18\n        val tup_len_minus_19 = tup_len - 19\n        val tup_len_minus_20 = tup_len - 20\n        val tup_len_minus_21 = tup_len - 21\n        val tup_len_minus_22 = tup_len - 22\n        val tup_len_minus_23 = tup_len - 23\n        val tup_len_minus_24 = tup_len - 24\n        val tup_len_minus_25 = tup_len - 25\n        val tup_len_minus_26 = tup_len - 26\n        val tup_len_minus_27 = t",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len-1) yield tup.productElement(i).asInstanceOf[Long] * tup.productElement(i+1).asInstanceOf[Long]\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        var tup_new = new ArrayBuffer[Long]()\n        for (i <- 0 to tup.productArity - 2) {\n            tup_new += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            tup_mult += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 until tup_len - 1) yield tup.productElement(i).asInstanceOf[Int] * tup.productElement(i + 1).asInstanceOf[Int]\n        tup_mult",
    "        val tup = (1, 2, 3, 4)\n        val tup2 = tup.productIterator.toList\n        val tup3 = tup2.sliding(2).toList\n        val tup4 = tup3.map(x => x.reduce(_ * _))\n        tup4",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val result = tup.productIterator.toList.sliding(2).map(x => x.product).toList\n        result",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_length = tup.productArity\n        val tup_mult = new Array[Long](tup_length)\n        for (i <- 0 until tup_length - 1) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_len_1 = tup_len - 1\n        val tup_len_2 = tup_len - 2\n        val tup_len_3 = tup_len - 3\n        val tup_len_4 = tup_len - 4\n        val tup_len_5 = tup_len - 5\n        val tup_len_6 = tup_len - 6\n        val tup_len_7 = tup_len - 7\n        val tup_len_8 = tup_len - 8\n        val tup_len_9 = tup_len - 9\n        val tup_len_10 = tup_len - 10\n        val tup_len_11 = tup_len - 11\n        val tup_len_12 = tup_len - 12\n        val tup_len_13 = tup_len - 13\n        val tup_len_14 = tup_len - 14\n        val tup_len_15 = tup_len - 15\n        val tup_len_16 = tup_len - 16\n        val tup_len_17 = tup_len - 17\n        val tup_len_18 = tup_len - 18\n        val tup_len_19 = tup_len - 19\n        val tup_len_20 = tup_len - 20\n        val tup_len_21 = tup_len - 21\n        val tup_len_22 = tup_len - 22\n        val tup_len_23 = tup_len - 23\n        val tup_len_24 = tup_len - 24\n        val tup_len_25 = tup_len - 25\n        val tup_len_26 = tup_len - 26\n        val tup_len_27 = tup_len - 27\n        val tup_len_28 = tup_len - 28\n        val tup_len_29 = tup_len - 29\n        val tup_len",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val new_tup = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            new_tup += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val new_tup = for (i <- 0 until tup.length-1) yield tup(i) * tup(i+1)\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_len_1 = tup_len - 1\n        val tup_len_2 = tup_len - 2\n        val tup_len_3 = tup_len - 3\n        val tup_len_4 = tup_len - 4\n        val tup_len_5 = tup_len - 5\n        val tup_len_6 = tup_len - 6\n        val tup_len_7 = tup_len - 7\n        val tup_len_8 = tup_len - 8\n        val tup_len_9 = tup_len - 9\n        val tup_len_10 = tup_len - 10\n        val tup_len_11 = tup_len - 11\n        val tup_len_12 = tup_len - 12\n        val tup_len_13 = tup_len - 13\n        val tup_len_14 = tup_len - 14\n        val tup_len_15 = tup_len - 15\n        val tup_len_16 = tup_len - 16\n        val tup_len_17 = tup_len - 17\n        val tup_len_18 = tup_len - 18\n        val tup_len_19 = tup_len - 19\n        val tup_len_20 = tup_len - 20\n        val tup_len_21 = tup_len - 21\n        val tup_len_22 = tup_len - 22\n        val tup_len_23 = tup_len - 23\n        val tup_len_24 = tup_len - 24\n        val tup_len_25 = tup_len - 25\n        val tup_len_26 = tup_len - 26\n        val tup_len_27 = tup_len - 27\n        val tup_len_28 = tup_len - 28\n        val",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_length = tup.productArity\n        val tup_new = new Array[Long](tup_length)\n        for (i <- 0 until tup_length) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        var tup = (1,2,3,4,5,6,7,8,9,10)\n        var tup_new = new ArrayBuffer[Long]()\n        for (i <- 0 to tup.productArity - 2) {\n            tup_new += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_2 = tup_list.slice(0, tup_len - 1)\n        val tup_list_3 = tup_list.slice(1, tup_len)\n        val tup_list_4 = tup_list_2.zip(tup_list_3).map(x => x._1 * x._2)\n        val tup_list_5 = tup_list_4.map(x => x.toString)\n        val tup_list_6 = tup_list_5.mkString(\",\")\n        val tup_list_7 = \"(\" + tup_list_6 + \")\"\n        val tup_list_8 = tup_list_7.replaceAll(\",\", \",\")\n        val tup_list_9 = tup_list_8.replaceAll(\" \", \"\")\n        val tup_list_10 = tup_list_9.replaceAll(\"\\\\(\", \"(\")\n        val tup_list_11 = tup_list_10.replaceAll(\"\\\\)\", \")\")\n        val tup_list_12 = tup_list_11.replaceAll(\"\\\\)\", \")\")\n        val tup_list_13 = tup_list_12.replaceAll(\"\\\\)\", \")\")\n        val tup_list_14 = tup_list_13.replaceAll(\"\\\\)\", \")\")\n        val tup_list_15 = tup_list_14.replaceAll(\"\\\\)\", \")\")\n        val tup_list_16 = tup_list_15.replaceAll(\"\\\\)\", \")\")\n        val tup_list_17 = tup_list_16.replaceAll(\"\\\\)\", \")\")\n        val tup_list_18 = tup_list_17.replaceAll(\"\\\\)\", \")\")\n        val tup_list_19 = tup_list_18.replaceAll(\"\\\\)\", \")\")\n        val tup_list_20",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_two = tup_len - 2\n        val tup_len_minus_three = tup_len - 3\n        val tup_len_minus_four = tup_len - 4\n        val tup_len_minus_five = tup_len - 5\n        val tup_len_minus_six = tup_len - 6\n        val tup_len_minus_seven = tup_len - 7\n        val tup_len_minus_eight = tup_len - 8\n        val tup_len_minus_nine = tup_len - 9\n        val tup_len_minus_ten = tup_len - 10\n        val tup_len_minus_eleven = tup_len - 11\n        val tup_len_minus_twelve = tup_len - 12\n        val tup_len_minus_thirteen = tup_len - 13\n        val tup_len_minus_fourteen = tup_len - 14\n        val tup_len_minus_fifteen = tup_len - 15\n        val tup_len_minus_sixteen = tup_len - 16\n        val tup_len_minus_seventeen = tup_len - 17\n        val tup_len_minus_eighteen = tup_len - 18\n        val tup_len_minus_nineteen = tup_len - 19\n        val tup_len_minus_twenty = tup_len - 20\n        val tup_len_minus_twentyone = tup_len - 21\n        val tup_len_minus_twentytwo = tup_len - 22\n        val tup_len_minus_twentythree = tup_len - 23\n        val tup_len_minus_twentyfour = tup_len - 24\n        val tup_len_minus_twentyfive = tup_len - 25",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_length = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_new = for (i <- 0 until tup_length - 1) yield tup_list(i) * tup_list(i + 1)\n        tup_list_new.toList",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup2 = (1, 2, 3, 4, 5, 6)\n        val tup3 = (1, 2, 3, 4, 5, 6, 7)\n        val tup4 = (1, 2, 3, 4, 5, 6, 7, 8)\n        val tup5 = (1, 2, 3, 4, 5, 6, 7, 8, 9)\n        val tup6 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup7 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)\n        val tup8 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)\n        val tup9 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)\n        val tup10 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14)\n        val tup11 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15)\n        val tup12 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16)\n        val tup13 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17)\n        val tup14 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18)\n        val tup15 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19)\n        val tup16 = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_new = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            tup_new += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_length = tup.productArity\n        val tup_new = new Array[Long](tup_length - 1)\n        for (i <- 0 until tup_length - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_one = tup_list_len - 1\n        val tup_list_len_minus_two = tup_list_len - 2\n        val tup_list_len_minus_three = tup_list_len - 3\n        val tup_list_len_minus_four = tup_list_len - 4\n        val tup_list_len_minus_five = tup_list_len - 5\n        val tup_list_len_minus_six = tup_list_len - 6\n        val tup_list_len_minus_seven = tup_list_len - 7\n        val tup_list_len_minus_eight = tup_list_len - 8\n        val tup_list_len_minus_nine = tup_list_len - 9\n        val tup_list_len_minus_ten = tup_list_len - 10\n        val tup_list_len_minus_eleven = tup_list_len - 11\n        val tup_list_len_minus_twelve = tup_list_len - 12\n        val tup_list_len_minus_thirteen = tup_list_len - 13\n        val tup_list_len_minus_fourteen = tup_list_len - 14\n        val tup_list_len_minus_fifteen = tup_list_len - 15\n        val tup_list_len_minus_sixteen = tup_list_len - 16\n        val tup_list_len_minus_seventeen = tup_list_len - 17\n        val tup_list_len_minus_eighteen = tup_list_len - 18\n        val tup_list_len_minus_nineteen = tup_list_len - 19\n        val tup_list_len_minus",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_length = tup.productArity\n        val tup_mult = new Array[Long](tup_length)\n        for (i <- 0 to tup_length - 1) {\n            tup_mult(i) = tup.productElement(i) * tup.productElement(i + 1)\n        }\n        tup_mult",
    "        val tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L)\n        val tup_len = tup.productArity\n        val tup_len_1 = tup_len - 1\n        val tup_len_2 = tup_len - 2\n        val tup_len_3 = tup_len - 3\n        val tup_len_4 = tup_len - 4\n        val tup_len_5 = tup_len - 5\n        val tup_len_6 = tup_len - 6\n        val tup_len_7 = tup_len - 7\n        val tup_len_8 = tup_len - 8\n        val tup_len_9 = tup_len - 9\n        val tup_len_10 = tup_len - 10\n        val tup_len_11 = tup_len - 11\n        val tup_len_12 = tup_len - 12\n        val tup_len_13 = tup_len - 13\n        val tup_len_14 = tup_len - 14\n        val tup_len_15 = tup_len - 15\n        val tup_len_16 = tup_len - 16\n        val tup_len_17 = tup_len - 17\n        val tup_len_18 = tup_len - 18\n        val tup_len_19 = tup_len - 19\n        val tup_len_20 = tup_len - 20\n        val tup_len_21 = tup_len - 21\n        val tup_len_22 = tup_len - 22\n        val tup_len_23 = tup_len - 23\n        val tup_len_24 = tup_len - 24\n        val tup_len_25 = tup_len - 25\n        val tup_len_26 = tup_len - 26\n        val tup_len_27 = tup_len - 27\n        val tup_len_28 = tup_len - 28\n        val tup_len_29 = tup_",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11)\n        val tup_len = tup.productArity\n        val tup_arr = tup.productIterator.toArray\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup_arr(i).asInstanceOf[Long] * tup_arr(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_long = tup_len_minus_one.toLong\n        val tup_len_minus_one_long_times_test_tup = tup_len_minus_one_long * test_tup\n        val tup_len_minus_one_long_times_test_tup_plus_one = tup_len_minus_one_long_times_test_tup + 1\n        val tup_len_minus_one_long_times_test_tup_plus_one_minus_one = tup_len_minus_one_long_times_test_tup_plus_one - 1\n        val tup_len_minus_one_long_times_test_tup_plus_one_minus_one_div_tup_len_minus_one_long = tup_len_minus_one_long_times_test_tup_plus_one_minus_one / tup_len_minus_one_long\n        val tup_len_minus_one_long_times_test_tup_plus_one_minus_one_div_tup_len_minus_one_long_plus_one = tup_len_minus_one_long_times_test_tup_plus_one_minus_one_div_tup_len_minus_one_long + 1\n        val tup_len_minus_one_long_times_test_tup_plus_one_minus_one_div_tup_len_minus_one_long_plus_one_minus_one = tup_len_minus_one_long_times_test_tup_plus_one_minus_one_div_tup_len_minus_one_long_plus_one - 1\n        val tup_len_minus_one_long_times_test_",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val result = for (i <- 0 until tup_len - 1) yield tup_list(i) * tup_list(i + 1)\n        result",
    "        val tup = (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_one = tup_list_len - 1\n        val tup_list_len_minus_two = tup_list_len - 2\n        val tup_list_len_minus_three = tup_list_len - 3\n        val tup_list_len_minus_four = tup_list_len - 4\n        val tup_list_len_minus_five = tup_list_len - 5\n        val tup_list_len_minus_six = tup_list_len - 6\n        val tup_list_len_minus_seven = tup_list_len - 7\n        val tup_list_len_minus_eight = tup_list_len - 8\n        val tup_list_len_minus_nine = tup_list_len - 9\n        val tup_list_len_minus_ten = tup_list_len - 10\n        val tup_list_len_minus_eleven = tup_list_len - 11\n        val tup_list_len_minus_twelve = tup_list_len - 12\n        val tup_list_len_minus_thirteen = tup_list_len - 13\n        val tup_list_len_minus_fourteen = tup_list_len - 14\n        val tup_list_len_minus_fifteen = tup_list_len - 15\n        val tup_list_len_minus_sixteen = tup_list_len - 16\n        val tup_list_len_minus_seventeen = tup_list_len - 17\n        val tup_list_len_minus_eighteen = tup_list_len - 18\n        val tup_list_len_minus_nineteen",
    "        val test_tup_list = test_tup.toString.map(_.asDigit).toList\n        val test_tup_list_len = test_tup_list.length\n        val test_tup_list_len_minus_one = test_tup_list_len - 1\n        val test_tup_list_len_minus_two = test_tup_list_len - 2\n        val test_tup_list_len_minus_three = test_tup_list_len - 3\n        val test_tup_list_len_minus_four = test_tup_list_len - 4\n        val test_tup_list_len_minus_five = test_tup_list_len - 5\n        val test_tup_list_len_minus_six = test_tup_list_len - 6\n        val test_tup_list_len_minus_seven = test_tup_list_len - 7\n        val test_tup_list_len_minus_eight = test_tup_list_len - 8\n        val test_tup_list_len_minus_nine = test_tup_list_len - 9\n        val test_tup_list_len_minus_ten = test_tup_list_len - 10\n        val test_tup_list_len_minus_eleven = test_tup_list_len - 11\n        val test_tup_list_len_minus_twelve = test_tup_list_len - 12\n        val test_tup_list_len_minus_thirteen = test_tup_list_len - 13\n        val test_tup_list_len_minus_fourteen = test_tup_list_len - 14\n        val test_tup_list_len_minus_fifteen = test_tup_list_len - 15\n        val test_tup_list_len_minus_sixteen = test_tup_list_len - 16\n        val test_tup_list_len_minus_seventeen = test_tup_list_len - 17\n        val test_tup_list_len_minus_eight",
    "        val tup = (1L, 2L, 3L, 4L, 5L)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_mult(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_mult",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_arr = tup.productIterator.toArray\n        val tup_arr_len = tup_arr.length\n        val tup_arr_len_minus_one = tup_arr_len - 1\n        val tup_arr_len_minus_two = tup_arr_len - 2\n        val tup_arr_len_minus_three = tup_arr_len - 3\n        val tup_arr_len_minus_four = tup_arr_len - 4\n        val tup_arr_len_minus_five = tup_arr_len - 5\n        val tup_arr_len_minus_six = tup_arr_len - 6\n        val tup_arr_len_minus_seven = tup_arr_len - 7\n        val tup_arr_len_minus_eight = tup_arr_len - 8\n        val tup_arr_len_minus_nine = tup_arr_len - 9\n        val tup_arr_len_minus_ten = tup_arr_len - 10\n        val tup_arr_len_minus_eleven = tup_arr_len - 11\n        val tup_arr_len_minus_twelve = tup_arr_len - 12\n        val tup_arr_len_minus_thirteen = tup_arr_len - 13\n        val tup_arr_len_minus_fourteen = tup_arr_len - 14\n        val tup_arr_len_minus_fifteen = tup_arr_len - 15\n        val tup_arr_len_minus_sixteen = tup_arr_len - 16\n        val tup_arr_len_minus_seventeen = tup_arr_len - 17\n        val tup_arr_len_minus_eighteen = tup_arr_len - 18\n        val tup_arr_len_minus_nineteen = tup_arr_len - 19\n        val tup_arr_len_minus",
    "        val tup = (1,2,3,4,5,6)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5)\n        val new_tup = tup.productIterator.toList.sliding(2).map(x => x(0).asInstanceOf[Int] * x(1).asInstanceOf[Int]).toList\n        return new_tup",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_new = for (i <- 0 to tup_len-2) yield tup_list(i) * tup_list(i+1)\n        tup_list_new",
    "        var tup = (1L, 2L, 3L, 4L, 5L, 6L, 7L, 8L, 9L, 10L, 11L, 12L, 13L, 14L, 15L, 16L, 17L, 18L, 19L, 20L, 21L, 22L, 23L, 24L, 25L, 26L, 27L, 28L, 29L, 30L, 31L, 32L, 33L, 34L, 35L, 36L, 37L, 38L, 39L, 40L, 41L, 42L, 43L, 44L, 45L, 46L, 47L, 48L, 49L, 50L, 51L, 52L, 53L, 54L, 55L, 56L, 57L, 58L, 59L, 60L, 61L, 62L, 63L, 64L, 65L, 66L, 67L, 68L, 69L, 70L, 71L, 72L, 73L, 74L, 75L, 76L, 77L, 78L, 79L, 80L, 81L, 82L, 83L, 84L, 85L, 86L, 87L, 88L, 89L, 90L, 91L, 92L, 93L, 94L, 95L, 96L, 97L, 98L, 99L, 100L, 101L, 102L, 103L, 104L, 105L, 106L, 107L, 108L, 109L, 110L, 111L, 112L, 113L, 114L, 115L, 116L, 117L, 118L, 119L, 120L, 121L, 122L, 123L, 124L, 125L, 126L, 127L, 128L, 129L, 130L, 131L, 132L, 133L, 134L, 135L, 136L, 137L, 138L, 139L, 140L, 141L, 142L, 143L, 144L, 145L, 146L, 147L, 148L, 149L, 150L, 151L, 152L, 153L, 154L, 155L, 156L, 157L, 158L, 159L, 160L, 161L, 162L, 163L, 164L, 165L, 166L, 167L, 168L, 169",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_length = tup.productArity\n        val tup_multiply = (1 to tup_length - 1).map(i => tup.productElement(i - 1) * tup.productElement(i)).toList\n        tup_multiply",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup2 = tup.productIterator.toList\n        val tup3 = tup2.sliding(2).map(x => x.product).toList\n        tup3",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_new = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            tup_new(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        tup_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        var result = new ArrayBuffer[Long]()\n        for (i <- 0 until tup.productArity - 1) {\n            result += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        result",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_len = tup_list.length\n        val tup_list_len_minus_one = tup_list_len - 1\n        val tup_list_len_minus_two = tup_list_len - 2\n        val tup_list_len_minus_three = tup_list_len - 3\n        val tup_list_len_minus_four = tup_list_len - 4\n        val tup_list_len_minus_five = tup_list_len - 5\n        val tup_list_len_minus_six = tup_list_len - 6\n        val tup_list_len_minus_seven = tup_list_len - 7\n        val tup_list_len_minus_eight = tup_list_len - 8\n        val tup_list_len_minus_nine = tup_list_len - 9\n        val tup_list_len_minus_ten = tup_list_len - 10\n        val tup_list_len_minus_eleven = tup_list_len - 11\n        val tup_list_len_minus_twelve = tup_list_len - 12\n        val tup_list_len_minus_thirteen = tup_list_len - 13\n        val tup_list_len_minus_fourteen = tup_list_len - 14\n        val tup_list_len_minus_fifteen = tup_list_len - 15\n        val tup_list_len_minus_sixteen = tup_list_len - 16\n        val tup_list_len_minus_seventeen = tup_list_len - 17\n        val tup_list_len_minus_eighteen = tup_list_len - 18\n        val tup_list_len_minus_nineteen = tup_list_len - 19\n        val tup_list_len_minus",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_two = tup_len - 2\n        val tup_len_minus_three = tup_len - 3\n        val tup_len_minus_four = tup_len - 4\n        val tup_len_minus_five = tup_len - 5\n        val tup_len_minus_six = tup_len - 6\n        val tup_len_minus_seven = tup_len - 7\n        val tup_len_minus_eight = tup_len - 8\n        val tup_len_minus_nine = tup_len - 9\n        val tup_len_minus_ten = tup_len - 10\n        val tup_len_minus_eleven = tup_len - 11\n        val tup_len_minus_twelve = tup_len - 12\n        val tup_len_minus_thirteen = tup_len - 13\n        val tup_len_minus_fourteen = tup_len - 14\n        val tup_len_minus_fifteen = tup_len - 15\n        val tup_len_minus_sixteen = tup_len - 16\n        val tup_len_minus_seventeen = tup_len - 17\n        val tup_len_minus_eighteen = tup_len - 18\n        val tup_len_minus_nineteen = tup_len - 19\n        val tup_len_minus_twenty = tup_len - 20\n        val tup_len_minus_twenty_one = tup_len - 21\n        val tup_len_minus_twenty_two = tup_len - 22\n        val tup_len_minus_twenty_three = tup_len - 23\n        val tup_len_minus_twenty_four = tup",
    "        val tup = (1, 2, 3, 4, 5)\n        val result = for (i <- 0 until tup.productArity - 1) yield tup.productElement(i).asInstanceOf[Int] * tup.productElement(i + 1).asInstanceOf[Int]\n        result",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_arr = tup.productIterator.toArray\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup_arr(i).asInstanceOf[Long] * tup_arr(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5,6,7,8,9,10)\n        val tup_len = tup.productArity\n        val tup_mult = new Array[Long](tup_len)\n        for (i <- 0 until tup_len) {\n            tup_mult(i) = tup.productElement(i) * tup.productElement(i+1)\n        }\n        tup_mult",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_len_minus_one = tup_len - 1\n        val tup_len_minus_one_half = tup_len_minus_one / 2\n        val tup_len_minus_one_half_plus_one = tup_len_minus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half = tup_len_minus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half + 1\n        val tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one_half = tup_len_minus_one_half_plus_one_half_plus_one_half_plus_one_half_plus_one / 2\n        val tup_len_minus_one_half_plus_one_half_plus",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_new = tup_list.sliding(2).map(x => x.reduce(_*_)).toList\n        tup_list_new",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val tup_len = tup.productArity\n        val tup_list = tup.productIterator.toList\n        val tup_list_1 = tup_list.slice(0, tup_len - 1)\n        val tup_list_2 = tup_list.slice(1, tup_len)\n        val tup_list_3 = tup_list_1.zip(tup_list_2).map(x => x._1 * x._2)\n        tup_list_3",
    "        val tup = (1, 2, 3, 4, 5, 6)\n        val tup_len = tup.productArity\n        var new_tup = new ArrayBuffer[Long]()\n        for (i <- 0 until tup_len - 1) {\n            new_tup += tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1,2,3,4,5)\n        val tup_len = tup.productArity\n        val new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1, 2, 3, 4, 5)\n        val tup_len = tup.productArity\n        var new_tup = new Array[Long](tup_len - 1)\n        for (i <- 0 until tup_len - 1) {\n            new_tup(i) = tup.productElement(i).asInstanceOf[Long] * tup.productElement(i + 1).asInstanceOf[Long]\n        }\n        new_tup",
    "        val tup = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20)\n        val tup_len = tup.productArity\n        val tup_mult = for (i <- 0 to tup_len - 2) yield tup.productElement(i) * tup.productElement(i + 1)\n        tup_mult"
  ]
}
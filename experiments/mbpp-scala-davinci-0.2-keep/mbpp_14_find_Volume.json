{
  "name": "mbpp_14_find_Volume",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the volume of a triangular prism.\n    def findVolume(l : Long, b : Long, h : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_14_find_Volume.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(findVolume((10l), (8l), (6l)) == (240l));\n    assert(findVolume((3l), (2l), (2l)) == (6l));\n    assert(findVolume((1l), (2l), (1l)) == (1l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h",
    "        l * b * h"
  ]
}
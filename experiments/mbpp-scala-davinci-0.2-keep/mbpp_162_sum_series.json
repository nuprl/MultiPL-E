{
  "name": "mbpp_162_sum_series",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to calculate the sum (n - 2*i) from i=0 to n // 2, for instance n + (n-2) + (n-4)... (until n-x =< 0).\n    def sumSeries(n : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_162_sum_series.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sumSeries((6l)) == (12l));\n    assert(sumSeries((10l)) == (30l));\n    assert(sumSeries((9l)) == (25l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum",
    "        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to (n/2).toInt) {\n            sum += n - 2*i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum",
    "        var sum : Long = 0\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += (n - 2 * i)\n        }\n        return sum",
    "        var sum = 0L\n        for (i <- 0 to (n/2).toInt) {\n            sum += n - 2*i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n / 2) {\n            sum += n - 2 * i\n        }\n        sum",
    "        var sum = 0L\n        for (i <- 0 to n/2) {\n            sum += n - 2*i\n        }\n        sum"
  ]
}
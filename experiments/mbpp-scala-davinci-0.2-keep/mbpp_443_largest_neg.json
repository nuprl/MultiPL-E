{
  "name": "mbpp_443_largest_neg",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the largest negative number from the given list.\n    def largestNeg(list1 : List[Long]) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(largestNeg((List[Long](1l.toLong, 2l.toLong, 3l.toLong, -4l.toLong, -6l.toLong))) == (-6l));\n    assert(largestNeg((List[Long](1l.toLong, 2l.toLong, 3l.toLong, -8l.toLong, -9l.toLong))) == (-9l));\n    assert(largestNeg((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, -1l.toLong))) == (-1l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest : Long = 0\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = i :: negList\n        }\n        if (negList.length == 0) return 0\n        negList.max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var negList = ListBuffer[Long]()\n        for (i <- list1) {\n            if (i < 0) negList += i\n        }\n        if (negList.length == 0) return 0\n        negList.max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = negList :+ i\n        }\n        if (negList.length == 0) return 0\n        negList.max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largestNeg : Long = 0\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) {\n                largestNeg = i\n            }\n        }\n        return largestNeg",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) {\n                largest = i\n            }\n        }\n        return largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = i :: negList\n        }\n        if (negList.length == 0) return 0\n        negList.max",
    "        var negList = list1.filter(x => x < 0)\n        if (negList.isEmpty)\n            return 0\n        else\n            return negList.max",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) {\n                negList = negList :+ i\n            }\n        }\n        if (negList.length == 0) {\n            return 0\n        }\n        negList.max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0) {\n                if (i > largest) largest = i\n            }\n        }\n        largest",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        val list2 = list1.filter(x => x < 0)\n        if (list2.isEmpty) {\n            return 0\n        }\n        else {\n            return list2.max\n        }",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var negList = new ListBuffer[Long]\n        for (i <- list1) {\n            if (i < 0) {\n                negList += i\n            }\n        }\n        if (negList.length == 0) {\n            return 0\n        }\n        negList.max",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = negList :+ i\n        }\n        if (negList.length == 0) return 0\n        negList.max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        list1.filter(_ < 0).max",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var negList : List[Long] = List()\n        for (i <- list1) {\n            if (i < 0) {\n                negList = negList :+ i\n            }\n        }\n        if (negList.length == 0) {\n            return 0\n        }\n        negList.max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0) {\n                if (i > max) max = i\n            }\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var negList = list1.filter(_ < 0)\n        if (negList.length == 0)\n            return 0\n        else\n            return negList.max",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = i :: negList\n        }\n        if (negList.isEmpty) return 0\n        negList.max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0) {\n                if (i > max) {\n                    max = i\n                }\n            }\n        }\n        return max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0) {\n                if (i > largest) largest = i\n            }\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var result = 0L\n        for (i <- list1) {\n            if (i < 0 && i > result) result = i\n        }\n        result",
    "        var max = 0L\n        for (i <- 0 until list1.length) {\n            if (list1(i) < 0 && list1(i) > max) max = list1(i)\n        }\n        max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var result = 0L\n        for (i <- list1) {\n            if (i < 0 && i > result) result = i\n        }\n        result",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var list2 = list1.filter(x => x < 0)\n        if (list2.isEmpty) return 0\n        else return list2.max",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- 0 until list1.length) {\n            if (list1(i) < 0) {\n                if (list1(i) > largest) largest = list1(i)\n            }\n        }\n        largest",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        return largestNeg",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = i :: negList\n        }\n        if (negList.length == 0) return 0\n        negList.max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        val negList = list1.filter(x => x < 0)\n        if (negList.isEmpty) 0 else negList.max",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var negList = ListBuffer[Long]()\n        for (i <- list1) {\n            if (i < 0) negList += i\n        }\n        if (negList.isEmpty) return 0\n        negList.max",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = i :: negList\n        }\n        if (negList.isEmpty) return 0\n        else return negList.max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) {\n                largest = i\n            }\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        val list2 = list1.filter(x => x < 0)\n        if (list2.length == 0) {\n            return 0\n        }\n        list2.max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) {\n                largest = i\n            }\n        }\n        largest",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < max) max = i\n        }\n        return max",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = negList :+ i\n        }\n        if (negList.length == 0) return 0\n        negList.max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) {\n                largest = i\n            }\n        }\n        return largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) {\n                max = i\n            }\n        }\n        max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max : Long = 0\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largestNeg = 0\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        val negList = list1.filter(x => x < 0)\n        if (negList.length == 0)\n            return 0\n        else\n            return negList.max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) {\n                negList = negList :+ i\n            }\n        }\n        if (negList.length == 0) {\n            return 0\n        }\n        negList.max",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) {\n                largest = i\n            }\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        list1.filter(_ < 0).max",
    "        val list2 = list1.filter(x => x < 0)\n        if (list2.length == 0) return 0\n        val list3 = list2.sortWith(_ > _)\n        return list3(0)",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = negList :+ i\n        }\n        if (negList.isEmpty) return 0\n        negList.max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0) {\n                if (i > largest) largest = i\n            }\n        }\n        largest",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var negList = List[Long]()\n        for (i <- list1) {\n            if (i < 0) negList = i :: negList\n        }\n        if (negList.isEmpty) return 0\n        negList.max",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var largestNeg = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largestNeg) largestNeg = i\n        }\n        largestNeg",
    "        var negList = list1.filter(x => x < 0)\n        if (negList.length == 0) {\n            return 0\n        }\n        negList.max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        val negs = list1.filter(x => x < 0)\n        if (negs.length == 0) {\n            return 0\n        }\n        negs.reduceLeft((x, y) => if (x > y) x else y)",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) {\n                largest = i\n            }\n        }\n        return largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0\n        for (i <- list1) {\n            if (i < largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var largest = 0L\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var largest : Long = 0\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        return largest",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = 0L\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var largest = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > largest) largest = i\n        }\n        largest",
    "        var max : Long = 0\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max",
    "        var max = Long.MinValue\n        for (i <- list1) {\n            if (i < 0 && i > max) max = i\n        }\n        return max"
  ]
}
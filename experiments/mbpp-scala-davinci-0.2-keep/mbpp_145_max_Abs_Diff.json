{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the maximum difference between any two elements in a given array.\n    def maxAbsDiff(arr : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxAbsDiff((2l, 1l, 5l, 3l)) == (4l));\n    assert(maxAbsDiff((9l, 3l, 2l, 5l, 1l)) == (8l));\n    assert(maxAbsDiff((3l, 2l, 1l)) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var max = 0L\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                max = max.max(abs(arr(i) - arr(j)))\n            }\n        }\n        return max",
    "        val n = arr.toString.length\n        var max = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                val a = arr.toString.substring(0, i) + arr.toString.substring(i + 1, j) + arr.toString.substring(j + 1)\n                val b = arr.toString.substring(0, j) + arr.toString.substring(j + 1, i) + arr.toString.substring(i + 1)\n                val diff = abs(a.toLong - b.toLong)\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = pow(10, n).toLong - 1\n        val min = pow(10, n - 1).toLong\n        max - min",
    "        var max = 0L\n        var min = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) max = arr(i)\n            if (arr(i) < min) min = arr(i)\n        }\n        return max - min",
    "        val n = arr.toString.length\n        val m = (1 to n).map(i => arr.toString.substring(0, i).toLong).max\n        val M = (1 to n).map(i => arr.toString.substring(i - 1).toLong).max\n        max(m - M, M - m)",
    "        val l = arr.toString.length\n        val max = pow(10, l - 1).toLong\n        val min = -max\n        val diffs = for {\n            i <- 0 until l\n            j <- 0 until l\n            if (i != j)\n        } yield {\n            val a = arr.toString.charAt(i).asDigit\n            val b = arr.toString.charAt(j).asDigit\n            val c = arr.toString.replace(a.toString, \"\").replace(b.toString, \"\")\n            val d = c.toLong\n            if (d > max || d < min) max\n            else d\n        }\n        diffs.max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.toString.toInt)\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        max",
    "        return 0",
    "        val arr = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val max = arr.max\n        val min = arr.min\n        max - min",
    "        val max = arr.max\n        val min = arr.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val sorted = digits.sorted\n        val min = sorted.head\n        val max = sorted.last\n        max - min",
    "        val n = arr.toString.length\n        val max = arr + (9 * (n - 1))\n        val min = arr - (9 * (n - 1))\n        max - min",
    "        val n = arr.toString.length\n        val max = arr + (9 * (n - 1))\n        val min = arr - (9 * (n - 1))\n        max - min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val min = digits.sorted.mkString.toLong\n        val max = digits.sorted.reverse.mkString.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val s = arr.toString.map(_.toString.toInt)\n        val max = s.max\n        val min = s.min\n        max - min"
  ]
}
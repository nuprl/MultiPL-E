{
  "name": "mbpp_145_max_Abs_Diff",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a python function to find the maximum difference between any two elements in a given array.\n    def maxAbsDiff(arr : Long) : Long = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_145_max_Abs_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxAbsDiff((2l, 1l, 5l, 3l)) == (4l));\n    assert(maxAbsDiff((9l, 3l, 2l, 5l, 1l)) == (8l));\n    assert(maxAbsDiff((3l, 2l, 1l)) == (2l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var max = 0L\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                max = max.max(abs(arr(i) - arr(j)))\n            }\n        }\n        return max",
    "        val n = arr.toString.length\n        var max = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                val a = arr.toString.substring(0, i) + arr.toString.substring(i + 1, j) + arr.toString.substring(j + 1)\n                val b = arr.toString.substring(0, j) + arr.toString.substring(j + 1, i) + arr.toString.substring(i + 1)\n                val diff = abs(a.toLong - b.toLong)\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = pow(10, n).toLong - 1\n        val min = pow(10, n - 1).toLong\n        max - min",
    "        var max = 0L\n        var min = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) max = arr(i)\n            if (arr(i) < min) min = arr(i)\n        }\n        return max - min",
    "        val n = arr.toString.length\n        val m = (1 to n).map(i => arr.toString.substring(0, i).toLong).max\n        val M = (1 to n).map(i => arr.toString.substring(i - 1).toLong).max\n        max(m - M, M - m)",
    "        val l = arr.toString.length\n        val max = pow(10, l - 1).toLong\n        val min = -max\n        val diffs = for {\n            i <- 0 until l\n            j <- 0 until l\n            if (i != j)\n        } yield {\n            val a = arr.toString.charAt(i).asDigit\n            val b = arr.toString.charAt(j).asDigit\n            val c = arr.toString.replace(a.toString, \"\").replace(b.toString, \"\")\n            val d = c.toLong\n            if (d > max || d < min) max\n            else d\n        }\n        diffs.max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.toString.toInt)\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        max",
    "        return 0",
    "        val arr = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val max = arr.max\n        val min = arr.min\n        max - min",
    "        val max = arr.max\n        val min = arr.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val sorted = digits.sorted\n        val min = sorted.head\n        val max = sorted.last\n        max - min",
    "        val n = arr.toString.length\n        val max = arr + (9 * (n - 1))\n        val min = arr - (9 * (n - 1))\n        max - min",
    "        val n = arr.toString.length\n        val max = arr + (9 * (n - 1))\n        val min = arr - (9 * (n - 1))\n        max - min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val min = digits.sorted.mkString.toLong\n        val max = digits.sorted.reverse.mkString.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val s = arr.toString.map(_.toString.toInt)\n        val max = s.max\n        val min = s.min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        val n = arr.toString.length\n        val max = pow(10, n).toLong - 1\n        val min = pow(10, n - 1).toLong\n        max - arr",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        return max",
    "        val n = arr.toString.length\n        val max = arr.toString.toCharArray.map(x => x.toString.toLong).max\n        val min = arr.toString.toCharArray.map(x => x.toString.toLong).min\n        max - min",
    "        val digits = arr.toString.map(_.asDigit)\n        val sorted = digits.sorted\n        val max = sorted.mkString.toLong\n        val min = sorted.reverse.mkString.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        val n = arr.length\n        var max = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.max.toString.toLong\n        val min = arr.toString.min.toString.toLong\n        max - min",
    "        val a = arr.toString.toList.map(_.asDigit)\n        val b = a.sorted\n        val c = b.reverse\n        val d = c.mkString.toLong\n        val e = b.mkString.toLong\n        d - e",
    "        val a = arr.toString.toList.map(_.asDigit)\n        val b = a.sorted\n        val c = b.reverse\n        val d = c.map(_.toString).mkString.toLong\n        val e = b.map(_.toString).mkString.toLong\n        d - e",
    "        val n = arr.length\n        var max = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        return max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val max = arr.max\n        val min = arr.min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val s = arr.toString\n        var max = 0L\n        for (i <- 0 until s.length - 1) {\n            val a = s(i).asDigit\n            val b = s(i + 1).asDigit\n            max = max.max(abs(a - b))\n        }\n        max",
    "        val arr = Array(1, 2, 5)\n        val max = arr.max\n        val min = arr.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val arr1 = arr.toString.toCharArray.map(_.toString.toLong)\n        val arr2 = arr.toString.toCharArray.map(_.toString.toLong)\n        var max = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (i != j) {\n                    val diff = abs(arr1(i) - arr2(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val a = arr.toString.toList.map(_.toString.toLong)\n        val b = a.combinations(2).map(x => abs(x(0) - x(1))).max\n        return b",
    "        val n = arr.toString.length\n        val a = arr.toString.toCharArray\n        var max = 0L\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (i != j) {\n                    val x = a(i).toString.toLong\n                    val y = a(j).toString.toLong\n                    val diff = abs(x - y)\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val s = arr.toString\n        val n = s.length\n        var max = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                val a = s(i) - '0'\n                val b = s(j) - '0'\n                val diff = abs(a - b)\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.split(\"\").map(_.toInt).max\n        val min = arr.toString.split(\"\").map(_.toInt).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val max = arr + (9 * (n - 1))\n        val min = arr - (9 * (n - 1))\n        max - min",
    "        var max = 0\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        var max = 0L\n        var min = 0L\n        for (i <- 0 until arr.length) {\n            max = max(arr(i) + i, max)\n            min = min(arr(i) + i, min)\n        }\n        max - min",
    "        val n = arr.length\n        var max = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        return max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val s = arr.toString\n        val l = s.length\n        val max = s.substring(0, l - 1).toLong\n        val min = s.substring(1, l).toLong\n        max - min",
    "        val n = arr.toString.length\n        var max = 0L\n        for (i <- 0 to n - 1) {\n            for (j <- i + 1 to n - 1) {\n                val a = arr.toString.substring(0, i) + arr.toString.substring(i + 1, j) + arr.toString.substring(j + 1)\n                val b = arr.toString.substring(0, j) + arr.toString.substring(j + 1, i) + arr.toString.substring(i + 1)\n                max = max max (a.toLong - b.toLong).abs\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val max = (0 until n).map(i => arr.toString.charAt(i).asDigit).max\n        val min = (0 until n).map(i => arr.toString.charAt(i).asDigit).min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val n = arr.toString.length\n        val arr1 = arr.toString.split(\"\").map(_.toInt).toList\n        val arr2 = arr1.sorted\n        var max = 0L\n        for (i <- 0 until n) {\n            max = max max (arr1(i) - arr2(i))\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val digits = arr.toString.map(_.asDigit)\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val n = arr.length\n        var max = 0\n        for (i <- 0 until n) {\n            for (j <- 0 until n) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val s = arr.toString\n        val l = s.length\n        var max = 0L\n        for (i <- 0 until l) {\n            for (j <- i + 1 until l) {\n                val a = s.substring(0, i) + s.substring(j, j + 1) + s.substring(i + 1, j) + s.substring(i, i + 1) + s.substring(j + 1, l)\n                val b = s.substring(0, j) + s.substring(i, i + 1) + s.substring(j + 1, l)\n                val c = a.toLong - b.toLong\n                if (c < 0) max = max min c\n                else max = max max c\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        max",
    "        val arr2 = arr.toString.toCharArray.map(_.toString.toLong)\n        val max = arr2.max\n        val min = arr2.min\n        max - min",
    "        val str = arr.toString\n        val len = str.length\n        var max = 0L\n        for (i <- 0 until len) {\n            for (j <- i + 1 until len) {\n                val a = str(i) - '0'\n                val b = str(j) - '0'\n                val diff = abs(a - b)\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val m = pow(10, n - 1).toLong\n        val max = arr + m\n        val min = arr - m\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.length\n        var maxDiff = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                maxDiff = max(maxDiff, abs(arr(i) - arr(j)))\n            }\n        }\n        maxDiff",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        val s = arr.toString\n        val l = s.length\n        var max = 0L\n        for (i <- 0 until l) {\n            for (j <- i + 1 until l) {\n                val a = s(i) - s(j)\n                val b = s(j) - s(i)\n                val m = max(a, b)\n                if (m > max) max = m\n            }\n        }\n        max",
    "        val arr2 = arr.toString.map(_.asDigit).toList\n        val max = arr2.max\n        val min = arr2.min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.toCharArray.map(x => x.asDigit).max\n        val min = arr.toString.toCharArray.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val s = arr.toString\n        val l = s.length\n        var max = 0L\n        for (i <- 0 until l) {\n            for (j <- i + 1 until l) {\n                val a = s.substring(0, i) + s.substring(j, j + 1) + s.substring(i + 1, j) + s.substring(i, i + 1) + s.substring(j + 1, l)\n                val b = s.substring(0, j) + s.substring(i, i + 1) + s.substring(j + 1, l)\n                val diff = abs(a.toLong - b.toLong)\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.toList.map(_.toString.toInt).sorted.reverse.mkString.toLong\n        val min = arr.toString.toList.map(_.toString.toInt).sorted.mkString.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.toString.toInt).max\n        val min = arr.toString.map(x => x.toString.toInt).min\n        val maxDiff = max - min\n        val maxDiff2 = (max - min) * pow(10, n - 1).toLong\n        val maxDiff3 = (max - min) * pow(10, n - 2).toLong\n        val maxDiff4 = (max - min) * pow(10, n - 3).toLong\n        val maxDiff5 = (max - min) * pow(10, n - 4).toLong\n        val maxDiff6 = (max - min) * pow(10, n - 5).toLong\n        val maxDiff7 = (max - min) * pow(10, n - 6).toLong\n        val maxDiff8 = (max - min) * pow(10, n - 7).toLong\n        val maxDiff9 = (max - min) * pow(10, n - 8).toLong\n        val maxDiff10 = (max - min) * pow(10, n - 9).toLong\n        val maxDiff11 = (max - min) * pow(10, n - 10).toLong\n        val maxDiff12 = (max - min) * pow(10, n - 11).toLong\n        val maxDiff13 = (max - min) * pow(10, n - 12).toLong\n        val maxDiff14 = (max - min) * pow(10, n - 13).toLong\n        val maxDiff15 = (max - min) * pow(10, n - 14).toLong\n        val maxDiff16 = (max - min) * pow(10, n - 15).toLong\n        val maxDiff17 = (max - min) * pow(10, n - 16).toLong\n        val maxDiff18 = (max - min) * pow(10, n - 17).toLong\n        val maxDiff19 = (max - min) * pow(10, n - 18).toLong\n        val maxDiff20 = (max - min) * pow(10, n - 19).toLong\n        val maxDiff21 = (max",
    "        val n = arr.toString.length\n        val arr1 = arr.toString.toCharArray.map(_.toString.toLong)\n        val arr2 = arr1.sorted\n        val arr3 = arr2.reverse\n        val arr4 = arr1.sorted\n        val arr5 = arr4.reverse\n        val max1 = arr3.zipWithIndex.map(x => x._1 * pow(10, n - x._2 - 1).toLong).sum\n        val max2 = arr5.zipWithIndex.map(x => x._1 * pow(10, n - x._2 - 1).toLong).sum\n        val min1 = arr2.zipWithIndex.map(x => x._1 * pow(10, n - x._2 - 1).toLong).sum\n        val min2 = arr4.zipWithIndex.map(x => x._1 * pow(10, n - x._2 - 1).toLong).sum\n        List(max1 - min1, max1 - min2, max2 - min1, max2 - min2).max",
    "        arr.max - arr.min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val sorted = digits.sorted\n        val max = sorted.last\n        val min = sorted.head\n        max - min",
    "        var max : Long = 0\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                if (abs(arr(i) - arr(j)) > max) {\n                    max = abs(arr(i) - arr(j))\n                }\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, abs(arr(i) - arr(j)))\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit)\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        return max",
    "        val arr = Array(1, 2, 3, 4, 5)\n        val max = arr.max\n        val min = arr.min\n        max - min",
    "        val n = arr.length\n        var max = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        return max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val max = arr + (9 * (n - 1))\n        val min = arr - (9 * (n - 1))\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i+1 until arr.length) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min * pow(10, n - 1).toLong - arr",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val n = arr.toString.length\n        val arr2 = arr.toString.toList.map(_.toString.toLong)\n        val max = arr2.max\n        val min = arr2.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        var max = 0L\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                max = max.max(abs(arr(i) - arr(j)))\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        var max : Long = 0\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        val maxDiff = max - min\n        val maxDiffString = maxDiff.toString\n        val maxDiffStringLength = maxDiffString.length\n        val maxDiffStringLengthDiff = n - maxDiffStringLength\n        val maxDiffStringLengthDiffString = \"1\" + \"0\" * maxDiffStringLengthDiff\n        val maxDiffStringLengthDiffInt = maxDiffStringLengthDiffString.toInt\n        maxDiffStringLengthDiffInt * maxDiff",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        var max : Long = 0\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        max",
    "        val max = arr.max\n        val min = arr.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.length\n        var max = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.toString.toInt).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val arr = Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n        val max = arr.max\n        val min = arr.min\n        max - min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val sorted = digits.sorted\n        val max = sorted.last\n        val min = sorted.head\n        max - min",
    "        val a = arr.toString.map(_.asDigit).toList\n        val b = a.sorted\n        val c = b.reverse\n        val d = c.zip(b).map(x => x._1 - x._2)\n        d.max",
    "        val n = arr.length\n        var max = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.split(\"\").map(_.toLong).max\n        val min = arr.toString.split(\"\").map(_.toLong).min\n        max - min",
    "        var max = 0\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.split(\"\").map(_.toInt).max\n        val min = arr.toString.split(\"\").map(_.toInt).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        return (max * pow(10, n - 1).toLong) + min - ((min * pow(10, n - 1).toLong) + max)",
    "        val n = arr.toString.length\n        val max = (0 until n).map(i => arr.toString.charAt(i).asDigit).max\n        val min = (0 until n).map(i => arr.toString.charAt(i).asDigit).min\n        max - min",
    "        val a = arr.toString.toCharArray.map(_.toString.toInt)\n        val max = a.max\n        val min = a.min\n        max - min",
    "        val arr = Array(1, 2, 5)\n        val max = arr.max\n        val min = arr.min\n        max - min",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val arr = Array(1, 2, 5)\n        val max = arr.max\n        val min = arr.min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.split(\"\").map(_.toInt).max\n        val min = arr.toString.split(\"\").map(_.toInt).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val n = arr.toString.length\n        val max = pow(10, n).toLong - 1\n        val min = pow(10, n - 1).toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr + (1L << n) - 1\n        val min = arr - (1L << n) + 1\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        return max",
    "        val n = arr.toString.length\n        val max = arr.toString.split(\"\").map(_.toInt).max\n        val min = arr.toString.split(\"\").map(_.toInt).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        var max = 0L\n        var min = 0L\n        for (i <- 0 until arr.length) {\n            if (arr(i) > max) max = arr(i)\n            if (arr(i) < min) min = arr(i)\n        }\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val str = arr.toString\n        val max = str.max.toString.toLong\n        val min = str.min.toString.toLong\n        max - min",
    "        val n = arr.toString.length\n        val a = arr.toString.toList.map(_.toString.toLong)\n        val b = a.sorted\n        val c = b.sorted.reverse\n        val d = c.mkString.toLong\n        val e = b.mkString.toLong\n        d - e",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i+1 until arr.length) {\n                max = max(abs(arr(i) - arr(j)), max)\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.toCharArray.map(_.toString.toInt).max\n        val min = arr.toString.toCharArray.map(_.toString.toInt).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val max = arr + (1 to n).map(x => \"9\").mkString.toLong\n        val min = arr - (1 to n).map(x => \"9\").mkString.toLong\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.max.toString.toLong\n        val min = arr.toString.min.toString.toLong\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val digits = arr.toString.toList.map(x => x.asDigit)\n        val sorted = digits.sorted\n        val min = sorted.head\n        val max = sorted.last\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = pow(10, n).toLong - 1\n        val min = pow(10, n - 1).toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr - (arr % (10 * n))\n        val min = arr - (arr % (10 * n)) + (10 * n) - 1\n        max - min",
    "        val max = arr.max\n        val min = arr.min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- 0 until arr.length) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val len = arr.length\n        var max = 0\n        for (i <- 0 until len) {\n            for (j <- 0 until len) {\n                if (i != j) {\n                    val diff = abs(arr(i) - arr(j))\n                    if (diff > max) max = diff\n                }\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = pow(10, n).toLong - 1\n        val min = pow(10, n - 1).toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.split(\"\").map(x => x.toInt).max\n        val min = arr.toString.split(\"\").map(x => x.toInt).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        val arr2 = arr.toString.toCharArray.map(_.toString.toInt)\n        var max = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                max = max.max(abs(arr2(i) - arr2(j)))\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val m = pow(10, n - 1).toLong\n        val a = arr / m\n        val b = arr % m\n        val c = arr / 10\n        val d = arr % 10\n        max(abs(a - b), abs(c - d))",
    "        val n = arr.toString.length\n        val max = arr.toString.split(\"\").map(_.toInt).max\n        val min = arr.toString.split(\"\").map(_.toInt).min\n        max * pow(10, n - 1).toLong + min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                max = max(max, abs(arr(i) - arr(j)))\n            }\n        }\n        max",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        var max = 0L\n        var min = 0L\n        for (i <- 0 to arr.length - 1) {\n            max = max(arr(i) + i, max)\n            min = min(arr(i) + i, min)\n        }\n        max - min",
    "        val n = arr.toString.length\n        val max = pow(10, n).toLong - 1\n        val min = pow(10, n - 1).toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(x => x.asDigit).max\n        val min = arr.toString.map(x => x.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val n = arr.toString.length\n        var max = 0L\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                val a = arr.toString.charAt(i).asDigit\n                val b = arr.toString.charAt(j).asDigit\n                val diff = abs(a - b)\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val arr = Array(1, 2, 5)\n        val max = arr.max\n        val min = arr.min\n        return max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i+1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        return max",
    "        var max : Long = 0\n        for (i <- 0 to arr.length - 1) {\n            for (j <- i + 1 to arr.length - 1) {\n                max = max.max(abs(arr(i) - arr(j)))\n            }\n        }\n        return max",
    "        val n = arr.toString.length\n        val max = arr.toString.sorted.reverse.toLong\n        val min = arr.toString.sorted.toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr + (9 * (n - 1))\n        val min = arr - (9 * (n - 1))\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                val diff = abs(arr(i) - arr(j))\n                if (diff > max) max = diff\n            }\n        }\n        max",
    "        val digits = arr.toString.map(_.asDigit)\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val n = arr.length\n        var maxDiff = 0\n        for (i <- 0 until n) {\n            for (j <- i + 1 until n) {\n                maxDiff = max(maxDiff, abs(arr(i) - arr(j)))\n            }\n        }\n        maxDiff",
    "        val n = arr.toString.length\n        val max = pow(10, n).toLong - 1\n        val min = pow(10, n - 1).toLong\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val digits = arr.toString.map(_.toString.toLong).toList\n        val max = digits.max\n        val min = digits.min\n        max - min",
    "        val n = arr.toString.length\n        val max = arr.toString.map(_.asDigit).max\n        val min = arr.toString.map(_.asDigit).min\n        max * pow(10, n - 1).toLong + min - min * pow(10, n - 1).toLong - max",
    "        val s = arr.toString\n        val l = s.length\n        val max = (0 until l).map(i => s.substring(0, i) + s.substring(i + 1)).map(x => x.toLong).max\n        val min = (0 until l).map(i => s.substring(0, i) + s.substring(i + 1)).map(x => x.toLong).min\n        max - min",
    "        var max = 0L\n        for (i <- 0 until arr.length) {\n            for (j <- i + 1 until arr.length) {\n                if (abs(arr(i) - arr(j)) > max) max = abs(arr(i) - arr(j))\n            }\n        }\n        return max"
  ]
}
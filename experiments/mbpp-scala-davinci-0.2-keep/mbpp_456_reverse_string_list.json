{
  "name": "mbpp_456_reverse_string_list",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function to reverse each string in a given list of string values.\n    def reverseStringList(stringlist : List[String]) : List[String] = {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_456_reverse_string_list.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(reverseStringList((List[String](\"Red\", \"Green\", \"Blue\", \"White\", \"Black\"))).equals((List[String](\"deR\", \"neerG\", \"eulB\", \"etihW\", \"kcalB\"))));\n    assert(reverseStringList((List[String](\"john\", \"amal\", \"joel\", \"george\"))).equals((List[String](\"nhoj\", \"lama\", \"leoj\", \"egroeg\"))));\n    assert(reverseStringList((List[String](\"jack\", \"john\", \"mary\"))).equals((List[String](\"kcaj\", \"nhoj\", \"yram\"))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        return stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(str => str.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(str => str.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        return stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        val reversedList = new ListBuffer[String]\n        for (s <- stringlist) {\n            val reversedString = new StringBuilder(s)\n            reversedList += reversedString.reverse.toString\n        }\n        reversedList.toList",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(s => s.reverse)",
    "        stringlist.map(x => x.reverse)",
    "        stringlist.map(x => x.reverse)"
  ]
}